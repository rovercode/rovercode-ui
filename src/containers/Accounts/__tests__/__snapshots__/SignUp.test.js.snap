// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SignUp renders on the page with no errors 1`] = `
<Fragment>
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    container={true}
    direction="column"
    justify="center"
    spacing={4}
  >
    <WithStyles(ForwardRef(Grid))
      item={true}
    >
      <WithStyles(ForwardRef(Typography))
        variant="h4"
      >
        <FormattedMessage
          defaultMessage="Sign Up"
          id="app.signup.header"
        />
      </WithStyles(ForwardRef(Typography))>
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      item={true}
    >
      <WithStyles(ForwardRef(Typography))>
        <FormattedMessage
          defaultMessage="Already have an account? Then please"
          id="app.signup.check_1"
        />
         
        <WithStyles(ForwardRef(Link))
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Link",
              "propTypes": Object {
                "innerRef": [Function],
                "onClick": [Function],
                "replace": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            }
          }
          to="/accounts/login"
        >
          <FormattedMessage
            defaultMessage="sign in."
            id="app.signup.check_2"
          />
        </WithStyles(ForwardRef(Link))>
      </WithStyles(ForwardRef(Typography))>
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      item={true}
    >
      <form
        onSubmit={[Function]}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <WithStyles(ForwardRef(TextField))
            InputProps={
              Object {
                "startAdornment": <WithStyles(ForwardRef(InputAdornment))
                  position="start"
                >
                  <Memo(PersonIcon) />
                </WithStyles(ForwardRef(InputAdornment))>,
              }
            }
            error={false}
            fullWidth={true}
            margin="dense"
            onChange={[Function]}
            placeholder="Username"
            required={true}
            variant="outlined"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <WithStyles(ForwardRef(TextField))
            InputProps={
              Object {
                "startAdornment": <WithStyles(ForwardRef(InputAdornment))
                  position="start"
                >
                  <Memo(MailIcon) />
                </WithStyles(ForwardRef(InputAdornment))>,
              }
            }
            error={false}
            fullWidth={true}
            margin="dense"
            onChange={[Function]}
            placeholder="Email"
            required={true}
            variant="outlined"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <WithStyles(ForwardRef(TextField))
            InputProps={
              Object {
                "startAdornment": <WithStyles(ForwardRef(InputAdornment))
                  position="start"
                >
                  <Memo(LockIcon) />
                </WithStyles(ForwardRef(InputAdornment))>,
              }
            }
            error={false}
            fullWidth={true}
            margin="dense"
            onChange={[Function]}
            placeholder="Password"
            required={true}
            type="password"
            variant="outlined"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <WithStyles(ForwardRef(TextField))
            InputProps={
              Object {
                "startAdornment": <WithStyles(ForwardRef(InputAdornment))
                  position="start"
                >
                  <Memo(LockIcon) />
                </WithStyles(ForwardRef(InputAdornment))>,
              }
            }
            error={false}
            fullWidth={true}
            margin="dense"
            onChange={[Function]}
            placeholder="Password"
            required={true}
            type="password"
            variant="outlined"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <WithStyles(ForwardRef(Button))
            color="primary"
            type="submit"
            variant="contained"
          >
            <FormattedMessage
              defaultMessage="Sign Up"
              id="app.signup.signup"
            />
          </WithStyles(ForwardRef(Button))>
        </WithStyles(ForwardRef(Grid))>
      </form>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Grid))>
</Fragment>
`;
