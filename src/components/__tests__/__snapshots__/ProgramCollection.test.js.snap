// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The ProgramCollection component renders on the page with no errors as free tier over 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <injectIntl(WithStyles(ProgramCollection))
      label="My Programs"
      onProgramClick={[MockFunction]}
      onRemoveClick={[MockFunction]}
      onUpdate={[MockFunction]}
      programs={
        Object {
          "count": 2,
          "next": null,
          "previous": null,
          "results": Array [
            Object {
              "content": "<xml><variables></variables></xml>",
              "id": 33,
              "name": "Unnamed_Design_3",
              "user": Object {
                "username": "admin",
              },
            },
            Object {
              "content": "<xml><variables></variables></xml>",
              "id": 5,
              "name": "Unnamed_Design_2",
              "user": Object {
                "username": "testuser",
              },
            },
          ],
          "total_pages": 2,
        }
      }
      user={
        Object {
          "stats": Object {
            "block_diagram": Object {
              "count": 5,
              "limit": 5,
            },
          },
          "tier": 1,
          "username": "testuser",
        }
      }
    >
      <WithStyles(ProgramCollection)
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {},
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
            "wrapRichTextChunksInFragment": undefined,
          }
        }
        label="My Programs"
        onProgramClick={[MockFunction]}
        onRemoveClick={[MockFunction]}
        onUpdate={[MockFunction]}
        programs={
          Object {
            "count": 2,
            "next": null,
            "previous": null,
            "results": Array [
              Object {
                "content": "<xml><variables></variables></xml>",
                "id": 33,
                "name": "Unnamed_Design_3",
                "user": Object {
                  "username": "admin",
                },
              },
              Object {
                "content": "<xml><variables></variables></xml>",
                "id": 5,
                "name": "Unnamed_Design_2",
                "user": Object {
                  "username": "testuser",
                },
              },
            ],
            "total_pages": 2,
          }
        }
        user={
          Object {
            "stats": Object {
              "block_diagram": Object {
                "count": 5,
                "limit": 5,
              },
            },
            "tier": 1,
            "username": "testuser",
          }
        }
      >
        <ProgramCollection
          classes={
            Object {
              "flexitem1": "ProgramCollection-flexitem1-2",
              "flexitem2": "ProgramCollection-flexitem2-3",
              "flexitem3": "ProgramCollection-flexitem3-4",
              "flexitem4": "ProgramCollection-flexitem4-5",
              "flexitem5": "ProgramCollection-flexitem5-6",
              "paginationPaddedBox": "ProgramCollection-paginationPaddedBox-1",
            }
          }
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {},
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
          label="My Programs"
          onProgramClick={[MockFunction]}
          onRemoveClick={[MockFunction]}
          onUpdate={[MockFunction]}
          programs={
            Object {
              "count": 2,
              "next": null,
              "previous": null,
              "results": Array [
                Object {
                  "content": "<xml><variables></variables></xml>",
                  "id": 33,
                  "name": "Unnamed_Design_3",
                  "user": Object {
                    "username": "admin",
                  },
                },
                Object {
                  "content": "<xml><variables></variables></xml>",
                  "id": 5,
                  "name": "Unnamed_Design_2",
                  "user": Object {
                    "username": "testuser",
                  },
                },
              ],
              "total_pages": 2,
            }
          }
          tag={
            Object {
              "tags": Array [],
            }
          }
          user={
            Object {
              "stats": Object {
                "block_diagram": Object {
                  "count": 5,
                  "limit": 5,
                },
              },
              "tier": 1,
              "username": "testuser",
            }
          }
        >
          <WithStyles(ForwardRef(Container))>
            <ForwardRef(Container)
              classes={
                Object {
                  "disableGutters": "MuiContainer-disableGutters",
                  "fixed": "MuiContainer-fixed",
                  "maxWidthLg": "MuiContainer-maxWidthLg",
                  "maxWidthMd": "MuiContainer-maxWidthMd",
                  "maxWidthSm": "MuiContainer-maxWidthSm",
                  "maxWidthXl": "MuiContainer-maxWidthXl",
                  "maxWidthXs": "MuiContainer-maxWidthXs",
                  "root": "MuiContainer-root",
                }
              }
            >
              <div
                className="MuiContainer-root MuiContainer-maxWidthLg"
              >
                <WithStyles(WithStyles(ForwardRef(Grid)))
                  container={true}
                  direction="row"
                  item={true}
                  justify="space-between"
                >
                  <WithStyles(ForwardRef(Grid))
                    classes={
                      Object {
                        "root": "WithStyles(ForwardRef(Grid))-root-21",
                      }
                    }
                    container={true}
                    direction="row"
                    item={true}
                    justify="space-between"
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-xs-center": "MuiGrid-justify-xs-center",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                          "root": "MuiGrid-root WithStyles(ForwardRef(Grid))-root-21",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      container={true}
                      direction="row"
                      item={true}
                      justify="space-between"
                    >
                      <div
                        className="MuiGrid-root WithStyles(ForwardRef(Grid))-root-21 MuiGrid-container MuiGrid-item MuiGrid-justify-xs-space-between"
                      >
                        <WithStyles(ForwardRef(Grid))
                          item={true}
                        >
                          <ForwardRef(Grid)
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                "container": "MuiGrid-container",
                                "direction-xs-column": "MuiGrid-direction-xs-column",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                "grid-lg-1": "MuiGrid-grid-lg-1",
                                "grid-lg-10": "MuiGrid-grid-lg-10",
                                "grid-lg-11": "MuiGrid-grid-lg-11",
                                "grid-lg-12": "MuiGrid-grid-lg-12",
                                "grid-lg-2": "MuiGrid-grid-lg-2",
                                "grid-lg-3": "MuiGrid-grid-lg-3",
                                "grid-lg-4": "MuiGrid-grid-lg-4",
                                "grid-lg-5": "MuiGrid-grid-lg-5",
                                "grid-lg-6": "MuiGrid-grid-lg-6",
                                "grid-lg-7": "MuiGrid-grid-lg-7",
                                "grid-lg-8": "MuiGrid-grid-lg-8",
                                "grid-lg-9": "MuiGrid-grid-lg-9",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                "grid-lg-true": "MuiGrid-grid-lg-true",
                                "grid-md-1": "MuiGrid-grid-md-1",
                                "grid-md-10": "MuiGrid-grid-md-10",
                                "grid-md-11": "MuiGrid-grid-md-11",
                                "grid-md-12": "MuiGrid-grid-md-12",
                                "grid-md-2": "MuiGrid-grid-md-2",
                                "grid-md-3": "MuiGrid-grid-md-3",
                                "grid-md-4": "MuiGrid-grid-md-4",
                                "grid-md-5": "MuiGrid-grid-md-5",
                                "grid-md-6": "MuiGrid-grid-md-6",
                                "grid-md-7": "MuiGrid-grid-md-7",
                                "grid-md-8": "MuiGrid-grid-md-8",
                                "grid-md-9": "MuiGrid-grid-md-9",
                                "grid-md-auto": "MuiGrid-grid-md-auto",
                                "grid-md-true": "MuiGrid-grid-md-true",
                                "grid-sm-1": "MuiGrid-grid-sm-1",
                                "grid-sm-10": "MuiGrid-grid-sm-10",
                                "grid-sm-11": "MuiGrid-grid-sm-11",
                                "grid-sm-12": "MuiGrid-grid-sm-12",
                                "grid-sm-2": "MuiGrid-grid-sm-2",
                                "grid-sm-3": "MuiGrid-grid-sm-3",
                                "grid-sm-4": "MuiGrid-grid-sm-4",
                                "grid-sm-5": "MuiGrid-grid-sm-5",
                                "grid-sm-6": "MuiGrid-grid-sm-6",
                                "grid-sm-7": "MuiGrid-grid-sm-7",
                                "grid-sm-8": "MuiGrid-grid-sm-8",
                                "grid-sm-9": "MuiGrid-grid-sm-9",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                "grid-sm-true": "MuiGrid-grid-sm-true",
                                "grid-xl-1": "MuiGrid-grid-xl-1",
                                "grid-xl-10": "MuiGrid-grid-xl-10",
                                "grid-xl-11": "MuiGrid-grid-xl-11",
                                "grid-xl-12": "MuiGrid-grid-xl-12",
                                "grid-xl-2": "MuiGrid-grid-xl-2",
                                "grid-xl-3": "MuiGrid-grid-xl-3",
                                "grid-xl-4": "MuiGrid-grid-xl-4",
                                "grid-xl-5": "MuiGrid-grid-xl-5",
                                "grid-xl-6": "MuiGrid-grid-xl-6",
                                "grid-xl-7": "MuiGrid-grid-xl-7",
                                "grid-xl-8": "MuiGrid-grid-xl-8",
                                "grid-xl-9": "MuiGrid-grid-xl-9",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                "grid-xl-true": "MuiGrid-grid-xl-true",
                                "grid-xs-1": "MuiGrid-grid-xs-1",
                                "grid-xs-10": "MuiGrid-grid-xs-10",
                                "grid-xs-11": "MuiGrid-grid-xs-11",
                                "grid-xs-12": "MuiGrid-grid-xs-12",
                                "grid-xs-2": "MuiGrid-grid-xs-2",
                                "grid-xs-3": "MuiGrid-grid-xs-3",
                                "grid-xs-4": "MuiGrid-grid-xs-4",
                                "grid-xs-5": "MuiGrid-grid-xs-5",
                                "grid-xs-6": "MuiGrid-grid-xs-6",
                                "grid-xs-7": "MuiGrid-grid-xs-7",
                                "grid-xs-8": "MuiGrid-grid-xs-8",
                                "grid-xs-9": "MuiGrid-grid-xs-9",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                "grid-xs-true": "MuiGrid-grid-xs-true",
                                "item": "MuiGrid-item",
                                "justify-xs-center": "MuiGrid-justify-xs-center",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                "root": "MuiGrid-root",
                                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth",
                              }
                            }
                            item={true}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item"
                            >
                              <WithStyles(WithStyles(ForwardRef(Typography)))
                                variant="h1"
                              >
                                <WithStyles(ForwardRef(Typography))
                                  classes={
                                    Object {
                                      "root": "WithStyles(ForwardRef(Typography))-root-22",
                                    }
                                  }
                                  variant="h1"
                                >
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root WithStyles(ForwardRef(Typography))-root-22",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    variant="h1"
                                  >
                                    <h1
                                      className="MuiTypography-root WithStyles(ForwardRef(Typography))-root-22 MuiTypography-h1"
                                    >
                                      My Programs
                                    </h1>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </WithStyles(WithStyles(ForwardRef(Typography)))>
                            </div>
                          </ForwardRef(Grid)>
                        </WithStyles(ForwardRef(Grid))>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                </WithStyles(WithStyles(ForwardRef(Grid)))>
                <WithStyles(ForwardRef(Grid))
                  container={true}
                  spacing={2}
                  style={
                    Object {
                      "marginBottom": "16px",
                    }
                  }
                >
                  <ForwardRef(Grid)
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                        "container": "MuiGrid-container",
                        "direction-xs-column": "MuiGrid-direction-xs-column",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                        "grid-lg-1": "MuiGrid-grid-lg-1",
                        "grid-lg-10": "MuiGrid-grid-lg-10",
                        "grid-lg-11": "MuiGrid-grid-lg-11",
                        "grid-lg-12": "MuiGrid-grid-lg-12",
                        "grid-lg-2": "MuiGrid-grid-lg-2",
                        "grid-lg-3": "MuiGrid-grid-lg-3",
                        "grid-lg-4": "MuiGrid-grid-lg-4",
                        "grid-lg-5": "MuiGrid-grid-lg-5",
                        "grid-lg-6": "MuiGrid-grid-lg-6",
                        "grid-lg-7": "MuiGrid-grid-lg-7",
                        "grid-lg-8": "MuiGrid-grid-lg-8",
                        "grid-lg-9": "MuiGrid-grid-lg-9",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                        "grid-lg-true": "MuiGrid-grid-lg-true",
                        "grid-md-1": "MuiGrid-grid-md-1",
                        "grid-md-10": "MuiGrid-grid-md-10",
                        "grid-md-11": "MuiGrid-grid-md-11",
                        "grid-md-12": "MuiGrid-grid-md-12",
                        "grid-md-2": "MuiGrid-grid-md-2",
                        "grid-md-3": "MuiGrid-grid-md-3",
                        "grid-md-4": "MuiGrid-grid-md-4",
                        "grid-md-5": "MuiGrid-grid-md-5",
                        "grid-md-6": "MuiGrid-grid-md-6",
                        "grid-md-7": "MuiGrid-grid-md-7",
                        "grid-md-8": "MuiGrid-grid-md-8",
                        "grid-md-9": "MuiGrid-grid-md-9",
                        "grid-md-auto": "MuiGrid-grid-md-auto",
                        "grid-md-true": "MuiGrid-grid-md-true",
                        "grid-sm-1": "MuiGrid-grid-sm-1",
                        "grid-sm-10": "MuiGrid-grid-sm-10",
                        "grid-sm-11": "MuiGrid-grid-sm-11",
                        "grid-sm-12": "MuiGrid-grid-sm-12",
                        "grid-sm-2": "MuiGrid-grid-sm-2",
                        "grid-sm-3": "MuiGrid-grid-sm-3",
                        "grid-sm-4": "MuiGrid-grid-sm-4",
                        "grid-sm-5": "MuiGrid-grid-sm-5",
                        "grid-sm-6": "MuiGrid-grid-sm-6",
                        "grid-sm-7": "MuiGrid-grid-sm-7",
                        "grid-sm-8": "MuiGrid-grid-sm-8",
                        "grid-sm-9": "MuiGrid-grid-sm-9",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                        "grid-sm-true": "MuiGrid-grid-sm-true",
                        "grid-xl-1": "MuiGrid-grid-xl-1",
                        "grid-xl-10": "MuiGrid-grid-xl-10",
                        "grid-xl-11": "MuiGrid-grid-xl-11",
                        "grid-xl-12": "MuiGrid-grid-xl-12",
                        "grid-xl-2": "MuiGrid-grid-xl-2",
                        "grid-xl-3": "MuiGrid-grid-xl-3",
                        "grid-xl-4": "MuiGrid-grid-xl-4",
                        "grid-xl-5": "MuiGrid-grid-xl-5",
                        "grid-xl-6": "MuiGrid-grid-xl-6",
                        "grid-xl-7": "MuiGrid-grid-xl-7",
                        "grid-xl-8": "MuiGrid-grid-xl-8",
                        "grid-xl-9": "MuiGrid-grid-xl-9",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                        "grid-xl-true": "MuiGrid-grid-xl-true",
                        "grid-xs-1": "MuiGrid-grid-xs-1",
                        "grid-xs-10": "MuiGrid-grid-xs-10",
                        "grid-xs-11": "MuiGrid-grid-xs-11",
                        "grid-xs-12": "MuiGrid-grid-xs-12",
                        "grid-xs-2": "MuiGrid-grid-xs-2",
                        "grid-xs-3": "MuiGrid-grid-xs-3",
                        "grid-xs-4": "MuiGrid-grid-xs-4",
                        "grid-xs-5": "MuiGrid-grid-xs-5",
                        "grid-xs-6": "MuiGrid-grid-xs-6",
                        "grid-xs-7": "MuiGrid-grid-xs-7",
                        "grid-xs-8": "MuiGrid-grid-xs-8",
                        "grid-xs-9": "MuiGrid-grid-xs-9",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                        "grid-xs-true": "MuiGrid-grid-xs-true",
                        "item": "MuiGrid-item",
                        "justify-xs-center": "MuiGrid-justify-xs-center",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                        "root": "MuiGrid-root",
                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                      }
                    }
                    container={true}
                    spacing={2}
                    style={
                      Object {
                        "marginBottom": "16px",
                      }
                    }
                  >
                    <div
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                      style={
                        Object {
                          "marginBottom": "16px",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Grid))
                        className="ProgramCollection-flexitem1-2"
                        container={true}
                        item={true}
                        md={8}
                        spacing={2}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          className="ProgramCollection-flexitem1-2"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          container={true}
                          item={true}
                          md={8}
                          spacing={2}
                          xs={12}
                        >
                          <div
                            className="MuiGrid-root ProgramCollection-flexitem1-2 MuiGrid-container MuiGrid-spacing-xs-2 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-8"
                          >
                            <WithStyles(ForwardRef(Grid))
                              item={true}
                              md={6}
                              xs={12}
                            >
                              <ForwardRef(Grid)
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                    "container": "MuiGrid-container",
                                    "direction-xs-column": "MuiGrid-direction-xs-column",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                    "grid-lg-1": "MuiGrid-grid-lg-1",
                                    "grid-lg-10": "MuiGrid-grid-lg-10",
                                    "grid-lg-11": "MuiGrid-grid-lg-11",
                                    "grid-lg-12": "MuiGrid-grid-lg-12",
                                    "grid-lg-2": "MuiGrid-grid-lg-2",
                                    "grid-lg-3": "MuiGrid-grid-lg-3",
                                    "grid-lg-4": "MuiGrid-grid-lg-4",
                                    "grid-lg-5": "MuiGrid-grid-lg-5",
                                    "grid-lg-6": "MuiGrid-grid-lg-6",
                                    "grid-lg-7": "MuiGrid-grid-lg-7",
                                    "grid-lg-8": "MuiGrid-grid-lg-8",
                                    "grid-lg-9": "MuiGrid-grid-lg-9",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                    "grid-lg-true": "MuiGrid-grid-lg-true",
                                    "grid-md-1": "MuiGrid-grid-md-1",
                                    "grid-md-10": "MuiGrid-grid-md-10",
                                    "grid-md-11": "MuiGrid-grid-md-11",
                                    "grid-md-12": "MuiGrid-grid-md-12",
                                    "grid-md-2": "MuiGrid-grid-md-2",
                                    "grid-md-3": "MuiGrid-grid-md-3",
                                    "grid-md-4": "MuiGrid-grid-md-4",
                                    "grid-md-5": "MuiGrid-grid-md-5",
                                    "grid-md-6": "MuiGrid-grid-md-6",
                                    "grid-md-7": "MuiGrid-grid-md-7",
                                    "grid-md-8": "MuiGrid-grid-md-8",
                                    "grid-md-9": "MuiGrid-grid-md-9",
                                    "grid-md-auto": "MuiGrid-grid-md-auto",
                                    "grid-md-true": "MuiGrid-grid-md-true",
                                    "grid-sm-1": "MuiGrid-grid-sm-1",
                                    "grid-sm-10": "MuiGrid-grid-sm-10",
                                    "grid-sm-11": "MuiGrid-grid-sm-11",
                                    "grid-sm-12": "MuiGrid-grid-sm-12",
                                    "grid-sm-2": "MuiGrid-grid-sm-2",
                                    "grid-sm-3": "MuiGrid-grid-sm-3",
                                    "grid-sm-4": "MuiGrid-grid-sm-4",
                                    "grid-sm-5": "MuiGrid-grid-sm-5",
                                    "grid-sm-6": "MuiGrid-grid-sm-6",
                                    "grid-sm-7": "MuiGrid-grid-sm-7",
                                    "grid-sm-8": "MuiGrid-grid-sm-8",
                                    "grid-sm-9": "MuiGrid-grid-sm-9",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                    "grid-sm-true": "MuiGrid-grid-sm-true",
                                    "grid-xl-1": "MuiGrid-grid-xl-1",
                                    "grid-xl-10": "MuiGrid-grid-xl-10",
                                    "grid-xl-11": "MuiGrid-grid-xl-11",
                                    "grid-xl-12": "MuiGrid-grid-xl-12",
                                    "grid-xl-2": "MuiGrid-grid-xl-2",
                                    "grid-xl-3": "MuiGrid-grid-xl-3",
                                    "grid-xl-4": "MuiGrid-grid-xl-4",
                                    "grid-xl-5": "MuiGrid-grid-xl-5",
                                    "grid-xl-6": "MuiGrid-grid-xl-6",
                                    "grid-xl-7": "MuiGrid-grid-xl-7",
                                    "grid-xl-8": "MuiGrid-grid-xl-8",
                                    "grid-xl-9": "MuiGrid-grid-xl-9",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                    "grid-xl-true": "MuiGrid-grid-xl-true",
                                    "grid-xs-1": "MuiGrid-grid-xs-1",
                                    "grid-xs-10": "MuiGrid-grid-xs-10",
                                    "grid-xs-11": "MuiGrid-grid-xs-11",
                                    "grid-xs-12": "MuiGrid-grid-xs-12",
                                    "grid-xs-2": "MuiGrid-grid-xs-2",
                                    "grid-xs-3": "MuiGrid-grid-xs-3",
                                    "grid-xs-4": "MuiGrid-grid-xs-4",
                                    "grid-xs-5": "MuiGrid-grid-xs-5",
                                    "grid-xs-6": "MuiGrid-grid-xs-6",
                                    "grid-xs-7": "MuiGrid-grid-xs-7",
                                    "grid-xs-8": "MuiGrid-grid-xs-8",
                                    "grid-xs-9": "MuiGrid-grid-xs-9",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                    "grid-xs-true": "MuiGrid-grid-xs-true",
                                    "item": "MuiGrid-item",
                                    "justify-xs-center": "MuiGrid-justify-xs-center",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                    "root": "MuiGrid-root",
                                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                  }
                                }
                                item={true}
                                md={6}
                                xs={12}
                              >
                                <div
                                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6"
                                >
                                  <WithStyles(ForwardRef(TextField))
                                    InputProps={
                                      Object {
                                        "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                          position="end"
                                        >
                                          <Memo(SearchIcon)
                                            color="disabled"
                                          />
                                        </WithStyles(ForwardRef(InputAdornment))>,
                                      }
                                    }
                                    className="prompt"
                                    fullWidth={true}
                                    icon="search"
                                    onChange={[Function]}
                                    placeholder="Search programs"
                                    size="small"
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                        "fontWeight": "500",
                                      }
                                    }
                                    variant="outlined"
                                  >
                                    <ForwardRef(TextField)
                                      InputProps={
                                        Object {
                                          "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                            position="end"
                                          >
                                            <Memo(SearchIcon)
                                              color="disabled"
                                            />
                                          </WithStyles(ForwardRef(InputAdornment))>,
                                        }
                                      }
                                      className="prompt"
                                      classes={
                                        Object {
                                          "root": "MuiTextField-root",
                                        }
                                      }
                                      fullWidth={true}
                                      icon="search"
                                      onChange={[Function]}
                                      placeholder="Search programs"
                                      size="small"
                                      style={
                                        Object {
                                          "backgroundColor": "white",
                                          "fontWeight": "500",
                                        }
                                      }
                                      variant="outlined"
                                    >
                                      <WithStyles(ForwardRef(FormControl))
                                        className="MuiTextField-root prompt"
                                        color="primary"
                                        disabled={false}
                                        error={false}
                                        fullWidth={true}
                                        icon="search"
                                        required={false}
                                        size="small"
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                            "fontWeight": "500",
                                          }
                                        }
                                        variant="outlined"
                                      >
                                        <ForwardRef(FormControl)
                                          className="MuiTextField-root prompt"
                                          classes={
                                            Object {
                                              "fullWidth": "MuiFormControl-fullWidth",
                                              "marginDense": "MuiFormControl-marginDense",
                                              "marginNormal": "MuiFormControl-marginNormal",
                                              "root": "MuiFormControl-root",
                                            }
                                          }
                                          color="primary"
                                          disabled={false}
                                          error={false}
                                          fullWidth={true}
                                          icon="search"
                                          required={false}
                                          size="small"
                                          style={
                                            Object {
                                              "backgroundColor": "white",
                                              "fontWeight": "500",
                                            }
                                          }
                                          variant="outlined"
                                        >
                                          <div
                                            className="MuiFormControl-root MuiTextField-root prompt MuiFormControl-fullWidth"
                                            icon="search"
                                            style={
                                              Object {
                                                "backgroundColor": "white",
                                                "fontWeight": "500",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(OutlinedInput))
                                              autoFocus={false}
                                              endAdornment={
                                                <WithStyles(ForwardRef(InputAdornment))
                                                  position="end"
                                                >
                                                  <Memo(SearchIcon)
                                                    color="disabled"
                                                  />
                                                </WithStyles(ForwardRef(InputAdornment))>
                                              }
                                              fullWidth={true}
                                              multiline={false}
                                              onChange={[Function]}
                                              placeholder="Search programs"
                                            >
                                              <ForwardRef(OutlinedInput)
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "input": "MuiOutlinedInput-input",
                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                    "multiline": "MuiOutlinedInput-multiline",
                                                    "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                    "root": "MuiOutlinedInput-root",
                                                  }
                                                }
                                                endAdornment={
                                                  <WithStyles(ForwardRef(InputAdornment))
                                                    position="end"
                                                  >
                                                    <Memo(SearchIcon)
                                                      color="disabled"
                                                    />
                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                }
                                                fullWidth={true}
                                                multiline={false}
                                                onChange={[Function]}
                                                placeholder="Search programs"
                                              >
                                                <WithStyles(ForwardRef(InputBase))
                                                  autoFocus={false}
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                      "adornedStart": "MuiOutlinedInput-adornedStart",
                                                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "error": "Mui-error",
                                                      "focused": "Mui-focused",
                                                      "input": "MuiOutlinedInput-input",
                                                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                      "marginDense": "MuiOutlinedInput-marginDense",
                                                      "multiline": "MuiOutlinedInput-multiline",
                                                      "notchedOutline": null,
                                                      "root": "MuiOutlinedInput-root",
                                                    }
                                                  }
                                                  endAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="end"
                                                    >
                                                      <Memo(SearchIcon)
                                                        color="disabled"
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  fullWidth={true}
                                                  inputComponent="input"
                                                  multiline={false}
                                                  onChange={[Function]}
                                                  placeholder="Search programs"
                                                  renderSuffix={[Function]}
                                                  type="text"
                                                >
                                                  <ForwardRef(InputBase)
                                                    autoFocus={false}
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                        "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                        "disabled": "Mui-disabled Mui-disabled",
                                                        "error": "Mui-error Mui-error",
                                                        "focused": "Mui-focused Mui-focused",
                                                        "formControl": "MuiInputBase-formControl",
                                                        "fullWidth": "MuiInputBase-fullWidth",
                                                        "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                        "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                        "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                        "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                      }
                                                    }
                                                    endAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="end"
                                                      >
                                                        <Memo(SearchIcon)
                                                          color="disabled"
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    fullWidth={true}
                                                    inputComponent="input"
                                                    multiline={false}
                                                    onChange={[Function]}
                                                    placeholder="Search programs"
                                                    renderSuffix={[Function]}
                                                    type="text"
                                                  >
                                                    <div
                                                      className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd MuiInputBase-marginDense MuiOutlinedInput-marginDense"
                                                      onClick={[Function]}
                                                    >
                                                      <input
                                                        aria-invalid={false}
                                                        autoFocus={false}
                                                        className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
                                                        disabled={false}
                                                        onAnimationStart={[Function]}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        placeholder="Search programs"
                                                        required={false}
                                                        type="text"
                                                      />
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="end"
                                                      >
                                                        <ForwardRef(InputAdornment)
                                                          classes={
                                                            Object {
                                                              "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                              "filled": "MuiInputAdornment-filled",
                                                              "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                              "marginDense": "MuiInputAdornment-marginDense",
                                                              "positionEnd": "MuiInputAdornment-positionEnd",
                                                              "positionStart": "MuiInputAdornment-positionStart",
                                                              "root": "MuiInputAdornment-root",
                                                            }
                                                          }
                                                          position="end"
                                                        >
                                                          <div
                                                            className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-marginDense"
                                                          >
                                                            <ForwardRef
                                                              color="disabled"
                                                            >
                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                color="disabled"
                                                              >
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                  color="disabled"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root MuiSvgIcon-colorDisabled"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                          </div>
                                                        </ForwardRef(InputAdornment)>
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                      <WithStyles(ForwardRef(NotchedOutline))
                                                        className="MuiOutlinedInput-notchedOutline"
                                                        labelWidth={0}
                                                        notched={false}
                                                      >
                                                        <ForwardRef(NotchedOutline)
                                                          className="MuiOutlinedInput-notchedOutline"
                                                          classes={
                                                            Object {
                                                              "legend": "PrivateNotchedOutline-legend-10",
                                                              "legendLabelled": "PrivateNotchedOutline-legendLabelled-11",
                                                              "legendNotched": "PrivateNotchedOutline-legendNotched-12",
                                                              "root": "PrivateNotchedOutline-root-9",
                                                            }
                                                          }
                                                          labelWidth={0}
                                                          notched={false}
                                                        >
                                                          <fieldset
                                                            aria-hidden={true}
                                                            className="PrivateNotchedOutline-root-9 MuiOutlinedInput-notchedOutline"
                                                            style={
                                                              Object {
                                                                "paddingLeft": 8,
                                                              }
                                                            }
                                                          >
                                                            <legend
                                                              className="PrivateNotchedOutline-legend-10"
                                                              style={
                                                                Object {
                                                                  "width": 0.01,
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                dangerouslySetInnerHTML={
                                                                  Object {
                                                                    "__html": "&#8203;",
                                                                  }
                                                                }
                                                              />
                                                            </legend>
                                                          </fieldset>
                                                        </ForwardRef(NotchedOutline)>
                                                      </WithStyles(ForwardRef(NotchedOutline))>
                                                    </div>
                                                  </ForwardRef(InputBase)>
                                                </WithStyles(ForwardRef(InputBase))>
                                              </ForwardRef(OutlinedInput)>
                                            </WithStyles(ForwardRef(OutlinedInput))>
                                          </div>
                                        </ForwardRef(FormControl)>
                                      </WithStyles(ForwardRef(FormControl))>
                                    </ForwardRef(TextField)>
                                  </WithStyles(ForwardRef(TextField))>
                                </div>
                              </ForwardRef(Grid)>
                            </WithStyles(ForwardRef(Grid))>
                            <Styled(MuiBox)
                              alignItems="center"
                              display="flex"
                              marginRight={2}
                            >
                              <div
                                className="MuiBox-root MuiBox-root-13"
                              >
                                <WithStyles(ForwardRef(Button))
                                  aria-controls="sort-menu"
                                  aria-haspopup="true"
                                  endIcon={<Memo(SortIcon) />}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "color": "#7F7272",
                                      "fontWeight": "400",
                                    }
                                  }
                                  variant="standard"
                                >
                                  <ForwardRef(Button)
                                    aria-controls="sort-menu"
                                    aria-haspopup="true"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiButton-colorInherit",
                                        "contained": "MuiButton-contained",
                                        "containedPrimary": "MuiButton-containedPrimary",
                                        "containedSecondary": "MuiButton-containedSecondary",
                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                        "disableElevation": "MuiButton-disableElevation",
                                        "disabled": "Mui-disabled",
                                        "endIcon": "MuiButton-endIcon",
                                        "focusVisible": "Mui-focusVisible",
                                        "fullWidth": "MuiButton-fullWidth",
                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                        "label": "MuiButton-label",
                                        "outlined": "MuiButton-outlined",
                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                        "root": "MuiButton-root",
                                        "sizeLarge": "MuiButton-sizeLarge",
                                        "sizeSmall": "MuiButton-sizeSmall",
                                        "startIcon": "MuiButton-startIcon",
                                        "text": "MuiButton-text",
                                        "textPrimary": "MuiButton-textPrimary",
                                        "textSecondary": "MuiButton-textSecondary",
                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                      }
                                    }
                                    endIcon={<Memo(SortIcon) />}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "color": "#7F7272",
                                        "fontWeight": "400",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-controls="sort-menu"
                                      aria-haspopup="true"
                                      className="MuiButton-root"
                                      component="button"
                                      disabled={false}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "color": "#7F7272",
                                          "fontWeight": "400",
                                        }
                                      }
                                      type="button"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-controls="sort-menu"
                                        aria-haspopup="true"
                                        className="MuiButton-root"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "color": "#7F7272",
                                            "fontWeight": "400",
                                          }
                                        }
                                        type="button"
                                      >
                                        <button
                                          aria-controls="sort-menu"
                                          aria-haspopup="true"
                                          className="MuiButtonBase-root MuiButton-root"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "color": "#7F7272",
                                              "fontWeight": "400",
                                            }
                                          }
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiButton-label"
                                          >
                                            <FormattedMessage
                                              defaultMessage="Sort"
                                              id="app.program_collection.sort"
                                            >
                                              Sort
                                            </FormattedMessage>
                                            <span
                                              className="MuiButton-endIcon MuiButton-iconSizeMedium"
                                            >
                                              <ForwardRef>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef>
                                            </span>
                                          </span>
                                          <WithStyles(memo)
                                            center={false}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={false}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(Button)>
                                </WithStyles(ForwardRef(Button))>
                                <WithStyles(ForwardRef(Menu))
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "center",
                                      "vertical": "bottom",
                                    }
                                  }
                                  getContentAnchorEl={null}
                                  id="sort-menu"
                                  keepMounted={true}
                                  onClick={[Function]}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "center",
                                      "vertical": "top",
                                    }
                                  }
                                >
                                  <ForwardRef(Menu)
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "center",
                                        "vertical": "bottom",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "list": "MuiMenu-list",
                                        "paper": "MuiMenu-paper",
                                      }
                                    }
                                    getContentAnchorEl={null}
                                    id="sort-menu"
                                    keepMounted={true}
                                    onClick={[Function]}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "center",
                                        "vertical": "top",
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(Popover))
                                      PaperProps={
                                        Object {
                                          "classes": Object {
                                            "root": "MuiMenu-paper",
                                          },
                                        }
                                      }
                                      anchorEl={null}
                                      anchorOrigin={
                                        Object {
                                          "horizontal": "center",
                                          "vertical": "bottom",
                                        }
                                      }
                                      getContentAnchorEl={null}
                                      id="sort-menu"
                                      keepMounted={true}
                                      onClick={[Function]}
                                      onClose={[Function]}
                                      onEntering={[Function]}
                                      open={false}
                                      transformOrigin={
                                        Object {
                                          "horizontal": "center",
                                          "vertical": "top",
                                        }
                                      }
                                      transitionDuration="auto"
                                    >
                                      <ForwardRef(Popover)
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper",
                                            },
                                          }
                                        }
                                        anchorEl={null}
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "center",
                                            "vertical": "bottom",
                                          }
                                        }
                                        classes={
                                          Object {
                                            "paper": "MuiPopover-paper",
                                            "root": "MuiPopover-root",
                                          }
                                        }
                                        getContentAnchorEl={null}
                                        id="sort-menu"
                                        keepMounted={true}
                                        onClick={[Function]}
                                        onClose={[Function]}
                                        onEntering={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "center",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <ForwardRef(Modal)
                                          BackdropProps={
                                            Object {
                                              "invisible": true,
                                            }
                                          }
                                          className="MuiPopover-root"
                                          id="sort-menu"
                                          keepMounted={true}
                                          onClick={[Function]}
                                          onClose={[Function]}
                                          open={false}
                                        >
                                          <ForwardRef(Portal)
                                            disablePortal={false}
                                          >
                                            <Portal
                                              containerInfo={
                                                <body>
                                                  <div
                                                    aria-hidden="true"
                                                    class="MuiPopover-root"
                                                    id="sort-menu"
                                                    role="presentation"
                                                    style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                  >
                                                    <div
                                                      data-test="sentinelStart"
                                                      tabindex="0"
                                                    />
                                                    <div
                                                      class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                      style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                      tabindex="-1"
                                                    >
                                                      <ul
                                                        class="MuiList-root MuiMenu-list MuiList-padding"
                                                        role="menu"
                                                        tabindex="-1"
                                                      >
                                                        <li
                                                          aria-disabled="false"
                                                          class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                          id="name"
                                                          role="menuitem"
                                                          tabindex="0"
                                                        >
                                                          <div
                                                            class="MuiListItemIcon-root"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                              />
                                                            </svg>
                                                          </div>
                                                          Name
                                                          <span
                                                            class="MuiTouchRipple-root"
                                                          />
                                                        </li>
                                                      </ul>
                                                    </div>
                                                    <div
                                                      data-test="sentinelEnd"
                                                      tabindex="0"
                                                    />
                                                  </div>
                                                </body>
                                              }
                                            >
                                              <div
                                                className="MuiPopover-root"
                                                id="sort-menu"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="presentation"
                                                style={
                                                  Object {
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "position": "fixed",
                                                    "right": 0,
                                                    "top": 0,
                                                    "visibility": "hidden",
                                                    "zIndex": 1300,
                                                  }
                                                }
                                              >
                                                <ForwardRef(SimpleBackdrop)
                                                  invisible={true}
                                                  onClick={[Function]}
                                                  open={false}
                                                />
                                                <Unstable_TrapFocus
                                                  disableAutoFocus={false}
                                                  disableEnforceFocus={false}
                                                  disableRestoreFocus={false}
                                                  getDoc={[Function]}
                                                  isEnabled={[Function]}
                                                  open={false}
                                                >
                                                  <div
                                                    data-test="sentinelStart"
                                                    tabIndex={0}
                                                  />
                                                  <ForwardRef(Grow)
                                                    appear={true}
                                                    in={false}
                                                    onEnter={[Function]}
                                                    onEntering={[Function]}
                                                    onExited={[Function]}
                                                    tabIndex="-1"
                                                    timeout="auto"
                                                  >
                                                    <Transition
                                                      addEndListener={[Function]}
                                                      appear={true}
                                                      enter={true}
                                                      exit={true}
                                                      in={false}
                                                      mountOnEnter={false}
                                                      onEnter={[Function]}
                                                      onEntered={[Function]}
                                                      onEntering={[Function]}
                                                      onExit={[Function]}
                                                      onExited={[Function]}
                                                      onExiting={[Function]}
                                                      tabIndex="-1"
                                                      timeout={null}
                                                      unmountOnExit={false}
                                                    >
                                                      <WithStyles(ForwardRef(Paper))
                                                        className="MuiPopover-paper"
                                                        classes={
                                                          Object {
                                                            "root": "MuiMenu-paper",
                                                          }
                                                        }
                                                        elevation={8}
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "transform": "scale(0.75, 0.5625)",
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(Paper)
                                                          className="MuiPopover-paper"
                                                          classes={
                                                            Object {
                                                              "elevation0": "MuiPaper-elevation0",
                                                              "elevation1": "MuiPaper-elevation1",
                                                              "elevation10": "MuiPaper-elevation10",
                                                              "elevation11": "MuiPaper-elevation11",
                                                              "elevation12": "MuiPaper-elevation12",
                                                              "elevation13": "MuiPaper-elevation13",
                                                              "elevation14": "MuiPaper-elevation14",
                                                              "elevation15": "MuiPaper-elevation15",
                                                              "elevation16": "MuiPaper-elevation16",
                                                              "elevation17": "MuiPaper-elevation17",
                                                              "elevation18": "MuiPaper-elevation18",
                                                              "elevation19": "MuiPaper-elevation19",
                                                              "elevation2": "MuiPaper-elevation2",
                                                              "elevation20": "MuiPaper-elevation20",
                                                              "elevation21": "MuiPaper-elevation21",
                                                              "elevation22": "MuiPaper-elevation22",
                                                              "elevation23": "MuiPaper-elevation23",
                                                              "elevation24": "MuiPaper-elevation24",
                                                              "elevation3": "MuiPaper-elevation3",
                                                              "elevation4": "MuiPaper-elevation4",
                                                              "elevation5": "MuiPaper-elevation5",
                                                              "elevation6": "MuiPaper-elevation6",
                                                              "elevation7": "MuiPaper-elevation7",
                                                              "elevation8": "MuiPaper-elevation8",
                                                              "elevation9": "MuiPaper-elevation9",
                                                              "outlined": "MuiPaper-outlined",
                                                              "root": "MuiPaper-root MuiMenu-paper",
                                                              "rounded": "MuiPaper-rounded",
                                                            }
                                                          }
                                                          elevation={8}
                                                          style={
                                                            Object {
                                                              "opacity": 0,
                                                              "transform": "scale(0.75, 0.5625)",
                                                              "visibility": "hidden",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <div
                                                            className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                                "transform": "scale(0.75, 0.5625)",
                                                                "visibility": "hidden",
                                                              }
                                                            }
                                                            tabIndex="-1"
                                                          >
                                                            <ForwardRef(MenuList)
                                                              actions={
                                                                Object {
                                                                  "current": Object {
                                                                    "adjustStyleForScrollbar": [Function],
                                                                  },
                                                                }
                                                              }
                                                              autoFocus={false}
                                                              autoFocusItem={false}
                                                              className="MuiMenu-list"
                                                              onKeyDown={[Function]}
                                                              variant="selectedMenu"
                                                            >
                                                              <WithStyles(ForwardRef(List))
                                                                className="MuiMenu-list"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <ForwardRef(List)
                                                                  className="MuiMenu-list"
                                                                  classes={
                                                                    Object {
                                                                      "dense": "MuiList-dense",
                                                                      "padding": "MuiList-padding",
                                                                      "root": "MuiList-root",
                                                                      "subheader": "MuiList-subheader",
                                                                    }
                                                                  }
                                                                  onKeyDown={[Function]}
                                                                  role="menu"
                                                                  tabIndex={-1}
                                                                >
                                                                  <ul
                                                                    className="MuiList-root MuiMenu-list MuiList-padding"
                                                                    onKeyDown={[Function]}
                                                                    role="menu"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      id="name"
                                                                      key=".$.0"
                                                                      onClick={[Function]}
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(MenuItem)
                                                                        classes={
                                                                          Object {
                                                                            "dense": "MuiMenuItem-dense",
                                                                            "gutters": "MuiMenuItem-gutters",
                                                                            "root": "MuiMenuItem-root",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        id="name"
                                                                        onClick={[Function]}
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ListItem))
                                                                          button={true}
                                                                          className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiMenuItem-dense",
                                                                            }
                                                                          }
                                                                          component="li"
                                                                          disableGutters={false}
                                                                          id="name"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ListItem)
                                                                            button={true}
                                                                            className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                            classes={
                                                                              Object {
                                                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                "button": "MuiListItem-button",
                                                                                "container": "MuiListItem-container",
                                                                                "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                "disabled": "Mui-disabled",
                                                                                "divider": "MuiListItem-divider",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "gutters": "MuiListItem-gutters",
                                                                                "root": "MuiListItem-root",
                                                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                                                "selected": "Mui-selected",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disableGutters={false}
                                                                            id="name"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                              className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              component="li"
                                                                              disabled={false}
                                                                              focusVisibleClassName="Mui-focusVisible"
                                                                              id="name"
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              <ForwardRef(ButtonBase)
                                                                                className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                classes={
                                                                                  Object {
                                                                                    "disabled": "Mui-disabled",
                                                                                    "focusVisible": "Mui-focusVisible",
                                                                                    "root": "MuiButtonBase-root",
                                                                                  }
                                                                                }
                                                                                component="li"
                                                                                disabled={false}
                                                                                focusVisibleClassName="Mui-focusVisible"
                                                                                id="name"
                                                                                onClick={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={0}
                                                                              >
                                                                                <li
                                                                                  aria-disabled={false}
                                                                                  className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                  id="name"
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onDragLeave={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                  onTouchMove={[Function]}
                                                                                  onTouchStart={[Function]}
                                                                                  role="menuitem"
                                                                                  tabIndex={0}
                                                                                >
                                                                                  <WithStyles(ForwardRef(ListItemIcon))
                                                                                    key=".0"
                                                                                  >
                                                                                    <ForwardRef(ListItemIcon)
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                                                          "root": "MuiListItemIcon-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="MuiListItemIcon-root"
                                                                                      >
                                                                                        <ForwardRef
                                                                                          fontSize="small"
                                                                                        >
                                                                                          <WithStyles(ForwardRef(SvgIcon))
                                                                                            fontSize="small"
                                                                                          >
                                                                                            <ForwardRef(SvgIcon)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                  "root": "MuiSvgIcon-root",
                                                                                                }
                                                                                              }
                                                                                              fontSize="small"
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden={true}
                                                                                                className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                                                focusable="false"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </ForwardRef>
                                                                                      </div>
                                                                                    </ForwardRef(ListItemIcon)>
                                                                                  </WithStyles(ForwardRef(ListItemIcon))>
                                                                                  <FormattedMessage
                                                                                    defaultMessage="Name"
                                                                                    id="app.program_collection.name"
                                                                                    key=".1"
                                                                                  >
                                                                                    Name
                                                                                  </FormattedMessage>
                                                                                  <WithStyles(memo)
                                                                                    center={false}
                                                                                  >
                                                                                    <ForwardRef(TouchRipple)
                                                                                      center={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "child": "MuiTouchRipple-child",
                                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                          "root": "MuiTouchRipple-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTouchRipple-root"
                                                                                      >
                                                                                        <TransitionGroup
                                                                                          childFactory={[Function]}
                                                                                          component={null}
                                                                                          exit={true}
                                                                                        />
                                                                                      </span>
                                                                                    </ForwardRef(TouchRipple)>
                                                                                  </WithStyles(memo)>
                                                                                </li>
                                                                              </ForwardRef(ButtonBase)>
                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                          </ForwardRef(ListItem)>
                                                                        </WithStyles(ForwardRef(ListItem))>
                                                                      </ForwardRef(MenuItem)>
                                                                    </WithStyles(ForwardRef(MenuItem))>
                                                                  </ul>
                                                                </ForwardRef(List)>
                                                              </WithStyles(ForwardRef(List))>
                                                            </ForwardRef(MenuList)>
                                                          </div>
                                                        </ForwardRef(Paper)>
                                                      </WithStyles(ForwardRef(Paper))>
                                                    </Transition>
                                                  </ForwardRef(Grow)>
                                                  <div
                                                    data-test="sentinelEnd"
                                                    tabIndex={0}
                                                  />
                                                </Unstable_TrapFocus>
                                              </div>
                                            </Portal>
                                          </ForwardRef(Portal)>
                                        </ForwardRef(Modal)>
                                      </ForwardRef(Popover)>
                                    </WithStyles(ForwardRef(Popover))>
                                  </ForwardRef(Menu)>
                                </WithStyles(ForwardRef(Menu))>
                              </div>
                            </Styled(MuiBox)>
                            <Styled(MuiBox)>
                              <div
                                className="MuiBox-root MuiBox-root-14"
                              >
                                <WithStyles(WithStyles(ForwardRef(Autocomplete)))
                                  filterSelectedOptions={true}
                                  freeSolo={true}
                                  id="tag-select"
                                  multiple={true}
                                  onChange={[Function]}
                                  options={Array []}
                                  renderInput={[Function]}
                                  renderTags={[Function]}
                                  size="small"
                                  value={
                                    Array [
                                      "tag1",
                                      "tag2",
                                    ]
                                  }
                                >
                                  <WithStyles(ForwardRef(Autocomplete))
                                    classes={
                                      Object {
                                        "root": "WithStyles(ForwardRef(Autocomplete))-root-23",
                                      }
                                    }
                                    filterSelectedOptions={true}
                                    freeSolo={true}
                                    id="tag-select"
                                    multiple={true}
                                    onChange={[Function]}
                                    options={Array []}
                                    renderInput={[Function]}
                                    renderTags={[Function]}
                                    size="small"
                                    value={
                                      Array [
                                        "tag1",
                                        "tag2",
                                      ]
                                    }
                                  >
                                    <ForwardRef(Autocomplete)
                                      classes={
                                        Object {
                                          "clearIndicator": "MuiAutocomplete-clearIndicator",
                                          "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
                                          "endAdornment": "MuiAutocomplete-endAdornment",
                                          "focused": "Mui-focused",
                                          "fullWidth": "MuiAutocomplete-fullWidth",
                                          "groupLabel": "MuiAutocomplete-groupLabel",
                                          "groupUl": "MuiAutocomplete-groupUl",
                                          "hasClearIcon": "MuiAutocomplete-hasClearIcon",
                                          "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
                                          "input": "MuiAutocomplete-input",
                                          "inputFocused": "MuiAutocomplete-inputFocused",
                                          "inputRoot": "MuiAutocomplete-inputRoot",
                                          "listbox": "MuiAutocomplete-listbox",
                                          "loading": "MuiAutocomplete-loading",
                                          "noOptions": "MuiAutocomplete-noOptions",
                                          "option": "MuiAutocomplete-option",
                                          "paper": "MuiAutocomplete-paper",
                                          "popper": "MuiAutocomplete-popper",
                                          "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
                                          "popupIndicator": "MuiAutocomplete-popupIndicator",
                                          "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
                                          "root": "MuiAutocomplete-root WithStyles(ForwardRef(Autocomplete))-root-23",
                                          "tag": "MuiAutocomplete-tag",
                                          "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
                                        }
                                      }
                                      filterSelectedOptions={true}
                                      freeSolo={true}
                                      id="tag-select"
                                      multiple={true}
                                      onChange={[Function]}
                                      options={Array []}
                                      renderInput={[Function]}
                                      renderTags={[Function]}
                                      size="small"
                                      value={
                                        Array [
                                          "tag1",
                                          "tag2",
                                        ]
                                      }
                                    >
                                      <div
                                        aria-expanded={false}
                                        aria-owns={null}
                                        className="MuiAutocomplete-root WithStyles(ForwardRef(Autocomplete))-root-23 MuiAutocomplete-hasClearIcon"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onMouseDown={[Function]}
                                        role="combobox"
                                      >
                                        <WithStyles(ForwardRef(TextField))
                                          InputLabelProps={
                                            Object {
                                              "htmlFor": "tag-select",
                                              "id": "tag-select-label",
                                            }
                                          }
                                          InputProps={
                                            Object {
                                              "className": "MuiAutocomplete-inputRoot",
                                              "endAdornment": <div
                                                className="MuiAutocomplete-endAdornment"
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  aria-label="Clear"
                                                  className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                  onClick={[Function]}
                                                  tabIndex={-1}
                                                  title="Clear"
                                                >
                                                  <Memo
                                                    fontSize="small"
                                                  />
                                                </WithStyles(ForwardRef(IconButton))>
                                              </div>,
                                              "ref": [Function],
                                              "startAdornment": Array [
                                                <WithStyles(ForwardRef(Chip))
                                                  className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                  color="secondary"
                                                  data-tag-index={0}
                                                  disabled={false}
                                                  label="tag1"
                                                  onDelete={[Function]}
                                                  size="small"
                                                  tabIndex={-1}
                                                />,
                                                <WithStyles(ForwardRef(Chip))
                                                  className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                  color="secondary"
                                                  data-tag-index={1}
                                                  disabled={false}
                                                  label="tag2"
                                                  onDelete={[Function]}
                                                  size="small"
                                                  tabIndex={-1}
                                                />,
                                              ],
                                            }
                                          }
                                          disabled={false}
                                          fullWidth={true}
                                          id="tag-select"
                                          inputProps={
                                            Object {
                                              "aria-activedescendant": null,
                                              "aria-autocomplete": "list",
                                              "aria-controls": null,
                                              "autoCapitalize": "none",
                                              "autoComplete": "off",
                                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                              "disabled": false,
                                              "id": "tag-select",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "onMouseDown": [Function],
                                              "ref": Object {
                                                "current": <input
                                                  aria-autocomplete="list"
                                                  aria-invalid="false"
                                                  autocapitalize="none"
                                                  autocomplete="off"
                                                  class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                  id="tag-select"
                                                  spellcheck="false"
                                                  type="text"
                                                  value=""
                                                />,
                                              },
                                              "spellCheck": "false",
                                              "value": "",
                                            }
                                          }
                                          label="Filter by tag"
                                          size="small"
                                          style={
                                            Object {
                                              "border": "none",
                                            }
                                          }
                                          variant="standard"
                                        >
                                          <ForwardRef(TextField)
                                            InputLabelProps={
                                              Object {
                                                "htmlFor": "tag-select",
                                                "id": "tag-select-label",
                                              }
                                            }
                                            InputProps={
                                              Object {
                                                "className": "MuiAutocomplete-inputRoot",
                                                "endAdornment": <div
                                                  className="MuiAutocomplete-endAdornment"
                                                >
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-label="Clear"
                                                    className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                    onClick={[Function]}
                                                    tabIndex={-1}
                                                    title="Clear"
                                                  >
                                                    <Memo
                                                      fontSize="small"
                                                    />
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>,
                                                "ref": [Function],
                                                "startAdornment": Array [
                                                  <WithStyles(ForwardRef(Chip))
                                                    className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                    color="secondary"
                                                    data-tag-index={0}
                                                    disabled={false}
                                                    label="tag1"
                                                    onDelete={[Function]}
                                                    size="small"
                                                    tabIndex={-1}
                                                  />,
                                                  <WithStyles(ForwardRef(Chip))
                                                    className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                    color="secondary"
                                                    data-tag-index={1}
                                                    disabled={false}
                                                    label="tag2"
                                                    onDelete={[Function]}
                                                    size="small"
                                                    tabIndex={-1}
                                                  />,
                                                ],
                                              }
                                            }
                                            classes={
                                              Object {
                                                "root": "MuiTextField-root",
                                              }
                                            }
                                            disabled={false}
                                            fullWidth={true}
                                            id="tag-select"
                                            inputProps={
                                              Object {
                                                "aria-activedescendant": null,
                                                "aria-autocomplete": "list",
                                                "aria-controls": null,
                                                "autoCapitalize": "none",
                                                "autoComplete": "off",
                                                "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                "disabled": false,
                                                "id": "tag-select",
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onFocus": [Function],
                                                "onMouseDown": [Function],
                                                "ref": Object {
                                                  "current": <input
                                                    aria-autocomplete="list"
                                                    aria-invalid="false"
                                                    autocapitalize="none"
                                                    autocomplete="off"
                                                    class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                    id="tag-select"
                                                    spellcheck="false"
                                                    type="text"
                                                    value=""
                                                  />,
                                                },
                                                "spellCheck": "false",
                                                "value": "",
                                              }
                                            }
                                            label="Filter by tag"
                                            size="small"
                                            style={
                                              Object {
                                                "border": "none",
                                              }
                                            }
                                            variant="standard"
                                          >
                                            <WithStyles(ForwardRef(FormControl))
                                              className="MuiTextField-root"
                                              color="primary"
                                              disabled={false}
                                              error={false}
                                              fullWidth={true}
                                              required={false}
                                              size="small"
                                              style={
                                                Object {
                                                  "border": "none",
                                                }
                                              }
                                              variant="standard"
                                            >
                                              <ForwardRef(FormControl)
                                                className="MuiTextField-root"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                                color="primary"
                                                disabled={false}
                                                error={false}
                                                fullWidth={true}
                                                required={false}
                                                size="small"
                                                style={
                                                  Object {
                                                    "border": "none",
                                                  }
                                                }
                                                variant="standard"
                                              >
                                                <div
                                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                  style={
                                                    Object {
                                                      "border": "none",
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(InputLabel))
                                                    htmlFor="tag-select"
                                                    id="tag-select-label"
                                                  >
                                                    <ForwardRef(InputLabel)
                                                      classes={
                                                        Object {
                                                          "animated": "MuiInputLabel-animated",
                                                          "asterisk": "MuiInputLabel-asterisk",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "filled": "MuiInputLabel-filled",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInputLabel-formControl",
                                                          "marginDense": "MuiInputLabel-marginDense",
                                                          "outlined": "MuiInputLabel-outlined",
                                                          "required": "Mui-required",
                                                          "root": "MuiInputLabel-root",
                                                          "shrink": "MuiInputLabel-shrink",
                                                        }
                                                      }
                                                      htmlFor="tag-select"
                                                      id="tag-select-label"
                                                    >
                                                      <WithStyles(ForwardRef(FormLabel))
                                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                        classes={
                                                          Object {
                                                            "asterisk": "MuiInputLabel-asterisk",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "required": "Mui-required",
                                                          }
                                                        }
                                                        data-shrink={true}
                                                        htmlFor="tag-select"
                                                        id="tag-select-label"
                                                      >
                                                        <ForwardRef(FormLabel)
                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                          classes={
                                                            Object {
                                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "filled": "MuiFormLabel-filled",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "required": "Mui-required Mui-required",
                                                              "root": "MuiFormLabel-root",
                                                            }
                                                          }
                                                          data-shrink={true}
                                                          htmlFor="tag-select"
                                                          id="tag-select-label"
                                                        >
                                                          <label
                                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                            data-shrink={true}
                                                            htmlFor="tag-select"
                                                            id="tag-select-label"
                                                          >
                                                            Filter by tag
                                                          </label>
                                                        </ForwardRef(FormLabel)>
                                                      </WithStyles(ForwardRef(FormLabel))>
                                                    </ForwardRef(InputLabel)>
                                                  </WithStyles(ForwardRef(InputLabel))>
                                                  <WithStyles(ForwardRef(Input))
                                                    autoFocus={false}
                                                    className="MuiAutocomplete-inputRoot"
                                                    endAdornment={
                                                      <div
                                                        className="MuiAutocomplete-endAdornment"
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          aria-label="Clear"
                                                          className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                          onClick={[Function]}
                                                          tabIndex={-1}
                                                          title="Clear"
                                                        >
                                                          <Memo
                                                            fontSize="small"
                                                          />
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </div>
                                                    }
                                                    fullWidth={true}
                                                    id="tag-select"
                                                    inputProps={
                                                      Object {
                                                        "aria-activedescendant": null,
                                                        "aria-autocomplete": "list",
                                                        "aria-controls": null,
                                                        "autoCapitalize": "none",
                                                        "autoComplete": "off",
                                                        "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                        "disabled": false,
                                                        "id": "tag-select",
                                                        "onBlur": [Function],
                                                        "onChange": [Function],
                                                        "onFocus": [Function],
                                                        "onMouseDown": [Function],
                                                        "ref": Object {
                                                          "current": <input
                                                            aria-autocomplete="list"
                                                            aria-invalid="false"
                                                            autocapitalize="none"
                                                            autocomplete="off"
                                                            class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                            id="tag-select"
                                                            spellcheck="false"
                                                            type="text"
                                                            value=""
                                                          />,
                                                        },
                                                        "spellCheck": "false",
                                                        "value": "",
                                                      }
                                                    }
                                                    multiline={false}
                                                    startAdornment={
                                                      Array [
                                                        <WithStyles(ForwardRef(Chip))
                                                          className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                          color="secondary"
                                                          data-tag-index={0}
                                                          disabled={false}
                                                          label="tag1"
                                                          onDelete={[Function]}
                                                          size="small"
                                                          tabIndex={-1}
                                                        />,
                                                        <WithStyles(ForwardRef(Chip))
                                                          className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                          color="secondary"
                                                          data-tag-index={1}
                                                          disabled={false}
                                                          label="tag2"
                                                          onDelete={[Function]}
                                                          size="small"
                                                          tabIndex={-1}
                                                        />,
                                                      ]
                                                    }
                                                  >
                                                    <ForwardRef(Input)
                                                      autoFocus={false}
                                                      className="MuiAutocomplete-inputRoot"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      endAdornment={
                                                        <div
                                                          className="MuiAutocomplete-endAdornment"
                                                        >
                                                          <WithStyles(ForwardRef(IconButton))
                                                            aria-label="Clear"
                                                            className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                            onClick={[Function]}
                                                            tabIndex={-1}
                                                            title="Clear"
                                                          >
                                                            <Memo
                                                              fontSize="small"
                                                            />
                                                          </WithStyles(ForwardRef(IconButton))>
                                                        </div>
                                                      }
                                                      fullWidth={true}
                                                      id="tag-select"
                                                      inputProps={
                                                        Object {
                                                          "aria-activedescendant": null,
                                                          "aria-autocomplete": "list",
                                                          "aria-controls": null,
                                                          "autoCapitalize": "none",
                                                          "autoComplete": "off",
                                                          "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                          "disabled": false,
                                                          "id": "tag-select",
                                                          "onBlur": [Function],
                                                          "onChange": [Function],
                                                          "onFocus": [Function],
                                                          "onMouseDown": [Function],
                                                          "ref": Object {
                                                            "current": <input
                                                              aria-autocomplete="list"
                                                              aria-invalid="false"
                                                              autocapitalize="none"
                                                              autocomplete="off"
                                                              class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                              id="tag-select"
                                                              spellcheck="false"
                                                              type="text"
                                                              value=""
                                                            />,
                                                          },
                                                          "spellCheck": "false",
                                                          "value": "",
                                                        }
                                                      }
                                                      multiline={false}
                                                      startAdornment={
                                                        Array [
                                                          <WithStyles(ForwardRef(Chip))
                                                            className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                            color="secondary"
                                                            data-tag-index={0}
                                                            disabled={false}
                                                            label="tag1"
                                                            onDelete={[Function]}
                                                            size="small"
                                                            tabIndex={-1}
                                                          />,
                                                          <WithStyles(ForwardRef(Chip))
                                                            className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                            color="secondary"
                                                            data-tag-index={1}
                                                            disabled={false}
                                                            label="tag2"
                                                            onDelete={[Function]}
                                                            size="small"
                                                            tabIndex={-1}
                                                          />,
                                                        ]
                                                      }
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        autoFocus={false}
                                                        className="MuiAutocomplete-inputRoot"
                                                        classes={
                                                          Object {
                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInput-marginDense",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root MuiInput-underline",
                                                            "underline": null,
                                                          }
                                                        }
                                                        endAdornment={
                                                          <div
                                                            className="MuiAutocomplete-endAdornment"
                                                          >
                                                            <WithStyles(ForwardRef(IconButton))
                                                              aria-label="Clear"
                                                              className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                              onClick={[Function]}
                                                              tabIndex={-1}
                                                              title="Clear"
                                                            >
                                                              <Memo
                                                                fontSize="small"
                                                              />
                                                            </WithStyles(ForwardRef(IconButton))>
                                                          </div>
                                                        }
                                                        fullWidth={true}
                                                        id="tag-select"
                                                        inputComponent="input"
                                                        inputProps={
                                                          Object {
                                                            "aria-activedescendant": null,
                                                            "aria-autocomplete": "list",
                                                            "aria-controls": null,
                                                            "autoCapitalize": "none",
                                                            "autoComplete": "off",
                                                            "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                            "disabled": false,
                                                            "id": "tag-select",
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onFocus": [Function],
                                                            "onMouseDown": [Function],
                                                            "ref": Object {
                                                              "current": <input
                                                                aria-autocomplete="list"
                                                                aria-invalid="false"
                                                                autocapitalize="none"
                                                                autocomplete="off"
                                                                class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                                id="tag-select"
                                                                spellcheck="false"
                                                                type="text"
                                                                value=""
                                                              />,
                                                            },
                                                            "spellCheck": "false",
                                                            "value": "",
                                                          }
                                                        }
                                                        multiline={false}
                                                        startAdornment={
                                                          Array [
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={0}
                                                              disabled={false}
                                                              label="tag1"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            />,
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={1}
                                                              disabled={false}
                                                              label="tag2"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            />,
                                                          ]
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          autoFocus={false}
                                                          className="MuiAutocomplete-inputRoot"
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                            }
                                                          }
                                                          endAdornment={
                                                            <div
                                                              className="MuiAutocomplete-endAdornment"
                                                            >
                                                              <WithStyles(ForwardRef(IconButton))
                                                                aria-label="Clear"
                                                                className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                                title="Clear"
                                                              >
                                                                <Memo
                                                                  fontSize="small"
                                                                />
                                                              </WithStyles(ForwardRef(IconButton))>
                                                            </div>
                                                          }
                                                          fullWidth={true}
                                                          id="tag-select"
                                                          inputComponent="input"
                                                          inputProps={
                                                            Object {
                                                              "aria-activedescendant": null,
                                                              "aria-autocomplete": "list",
                                                              "aria-controls": null,
                                                              "autoCapitalize": "none",
                                                              "autoComplete": "off",
                                                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                              "disabled": false,
                                                              "id": "tag-select",
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onFocus": [Function],
                                                              "onMouseDown": [Function],
                                                              "ref": Object {
                                                                "current": <input
                                                                  aria-autocomplete="list"
                                                                  aria-invalid="false"
                                                                  autocapitalize="none"
                                                                  autocomplete="off"
                                                                  class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                                  id="tag-select"
                                                                  spellcheck="false"
                                                                  type="text"
                                                                  value=""
                                                                />,
                                                              },
                                                              "spellCheck": "false",
                                                              "value": "",
                                                            }
                                                          }
                                                          multiline={false}
                                                          startAdornment={
                                                            Array [
                                                              <WithStyles(ForwardRef(Chip))
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                color="secondary"
                                                                data-tag-index={0}
                                                                disabled={false}
                                                                label="tag1"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              />,
                                                              <WithStyles(ForwardRef(Chip))
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                color="secondary"
                                                                data-tag-index={1}
                                                                disabled={false}
                                                                label="tag2"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              />,
                                                            ]
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart MuiInputBase-adornedEnd MuiInputBase-marginDense MuiInput-marginDense"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={0}
                                                              disabled={false}
                                                              key="0"
                                                              label="tag1"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            >
                                                              <ForwardRef(Chip)
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                classes={
                                                                  Object {
                                                                    "avatar": "MuiChip-avatar",
                                                                    "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                                                                    "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                                                                    "avatarSmall": "MuiChip-avatarSmall",
                                                                    "clickable": "MuiChip-clickable",
                                                                    "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                                                                    "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                                                                    "colorPrimary": "MuiChip-colorPrimary",
                                                                    "colorSecondary": "MuiChip-colorSecondary",
                                                                    "deletable": "MuiChip-deletable",
                                                                    "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                                                                    "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                                                                    "deleteIcon": "MuiChip-deleteIcon",
                                                                    "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                                                                    "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                                                                    "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                                                                    "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                                                                    "deleteIconSmall": "MuiChip-deleteIconSmall",
                                                                    "disabled": "Mui-disabled",
                                                                    "icon": "MuiChip-icon",
                                                                    "iconColorPrimary": "MuiChip-iconColorPrimary",
                                                                    "iconColorSecondary": "MuiChip-iconColorSecondary",
                                                                    "iconSmall": "MuiChip-iconSmall",
                                                                    "label": "MuiChip-label",
                                                                    "labelSmall": "MuiChip-labelSmall",
                                                                    "outlined": "MuiChip-outlined",
                                                                    "outlinedPrimary": "MuiChip-outlinedPrimary",
                                                                    "outlinedSecondary": "MuiChip-outlinedSecondary",
                                                                    "root": "MuiChip-root",
                                                                    "sizeSmall": "MuiChip-sizeSmall",
                                                                  }
                                                                }
                                                                color="secondary"
                                                                data-tag-index={0}
                                                                disabled={false}
                                                                label="tag1"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              >
                                                                <div
                                                                  className="MuiChip-root MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall MuiChip-colorSecondary MuiChip-deletableColorSecondary MuiChip-sizeSmall MuiChip-deletable"
                                                                  data-tag-index={0}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  role="button"
                                                                  tabIndex={-1}
                                                                >
                                                                  <span
                                                                    className="MuiChip-label MuiChip-labelSmall"
                                                                  >
                                                                    tag1
                                                                  </span>
                                                                  <ForwardRef(CancelIcon)
                                                                    className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                        onClick={[Function]}
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                          focusable="false"
                                                                          onClick={[Function]}
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(CancelIcon)>
                                                                </div>
                                                              </ForwardRef(Chip)>
                                                            </WithStyles(ForwardRef(Chip))>
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={1}
                                                              disabled={false}
                                                              key="1"
                                                              label="tag2"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            >
                                                              <ForwardRef(Chip)
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                classes={
                                                                  Object {
                                                                    "avatar": "MuiChip-avatar",
                                                                    "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                                                                    "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                                                                    "avatarSmall": "MuiChip-avatarSmall",
                                                                    "clickable": "MuiChip-clickable",
                                                                    "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                                                                    "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                                                                    "colorPrimary": "MuiChip-colorPrimary",
                                                                    "colorSecondary": "MuiChip-colorSecondary",
                                                                    "deletable": "MuiChip-deletable",
                                                                    "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                                                                    "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                                                                    "deleteIcon": "MuiChip-deleteIcon",
                                                                    "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                                                                    "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                                                                    "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                                                                    "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                                                                    "deleteIconSmall": "MuiChip-deleteIconSmall",
                                                                    "disabled": "Mui-disabled",
                                                                    "icon": "MuiChip-icon",
                                                                    "iconColorPrimary": "MuiChip-iconColorPrimary",
                                                                    "iconColorSecondary": "MuiChip-iconColorSecondary",
                                                                    "iconSmall": "MuiChip-iconSmall",
                                                                    "label": "MuiChip-label",
                                                                    "labelSmall": "MuiChip-labelSmall",
                                                                    "outlined": "MuiChip-outlined",
                                                                    "outlinedPrimary": "MuiChip-outlinedPrimary",
                                                                    "outlinedSecondary": "MuiChip-outlinedSecondary",
                                                                    "root": "MuiChip-root",
                                                                    "sizeSmall": "MuiChip-sizeSmall",
                                                                  }
                                                                }
                                                                color="secondary"
                                                                data-tag-index={1}
                                                                disabled={false}
                                                                label="tag2"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              >
                                                                <div
                                                                  className="MuiChip-root MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall MuiChip-colorSecondary MuiChip-deletableColorSecondary MuiChip-sizeSmall MuiChip-deletable"
                                                                  data-tag-index={1}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  role="button"
                                                                  tabIndex={-1}
                                                                >
                                                                  <span
                                                                    className="MuiChip-label MuiChip-labelSmall"
                                                                  >
                                                                    tag2
                                                                  </span>
                                                                  <ForwardRef(CancelIcon)
                                                                    className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                        onClick={[Function]}
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                          focusable="false"
                                                                          onClick={[Function]}
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(CancelIcon)>
                                                                </div>
                                                              </ForwardRef(Chip)>
                                                            </WithStyles(ForwardRef(Chip))>
                                                            <input
                                                              aria-activedescendant={null}
                                                              aria-autocomplete="list"
                                                              aria-controls={null}
                                                              aria-invalid={false}
                                                              autoCapitalize="none"
                                                              autoComplete="off"
                                                              autoFocus={false}
                                                              className="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                              disabled={false}
                                                              id="tag-select"
                                                              onAnimationStart={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onMouseDown={[Function]}
                                                              required={false}
                                                              spellCheck="false"
                                                              type="text"
                                                              value=""
                                                            />
                                                            <div
                                                              className="MuiAutocomplete-endAdornment"
                                                            >
                                                              <WithStyles(ForwardRef(IconButton))
                                                                aria-label="Clear"
                                                                className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                                title="Clear"
                                                              >
                                                                <ForwardRef(IconButton)
                                                                  aria-label="Clear"
                                                                  className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                  classes={
                                                                    Object {
                                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                                      "label": "MuiIconButton-label",
                                                                      "root": "MuiIconButton-root",
                                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  tabIndex={-1}
                                                                  title="Clear"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    aria-label="Clear"
                                                                    centerRipple={true}
                                                                    className="MuiIconButton-root MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    onClick={[Function]}
                                                                    tabIndex={-1}
                                                                    title="Clear"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      aria-label="Clear"
                                                                      centerRipple={true}
                                                                      className="MuiIconButton-root MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusRipple={true}
                                                                      onClick={[Function]}
                                                                      tabIndex={-1}
                                                                      title="Clear"
                                                                    >
                                                                      <button
                                                                        aria-label="Clear"
                                                                        className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                        disabled={false}
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        tabIndex={-1}
                                                                        title="Clear"
                                                                        type="button"
                                                                      >
                                                                        <span
                                                                          className="MuiIconButton-label"
                                                                        >
                                                                          <ForwardRef(CloseIcon)
                                                                            fontSize="small"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              fontSize="small"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                                fontSize="small"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(CloseIcon)>
                                                                        </span>
                                                                        <WithStyles(memo)
                                                                          center={true}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={true}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </button>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(IconButton)>
                                                              </WithStyles(ForwardRef(IconButton))>
                                                            </div>
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </ForwardRef(TextField)>
                                        </WithStyles(ForwardRef(TextField))>
                                      </div>
                                    </ForwardRef(Autocomplete)>
                                  </WithStyles(ForwardRef(Autocomplete))>
                                </WithStyles(WithStyles(ForwardRef(Autocomplete)))>
                              </div>
                            </Styled(MuiBox)>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                      <WithStyles(ForwardRef(Grid))
                        className="ProgramCollection-flexitem2-3"
                        container={true}
                        item={true}
                        md={true}
                        spacing={2}
                        xs={true}
                      >
                        <ForwardRef(Grid)
                          className="ProgramCollection-flexitem2-3"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          container={true}
                          item={true}
                          md={true}
                          spacing={2}
                          xs={true}
                        >
                          <div
                            className="MuiGrid-root ProgramCollection-flexitem2-3 MuiGrid-container MuiGrid-spacing-xs-2 MuiGrid-item MuiGrid-grid-xs-true MuiGrid-grid-md-true"
                          >
                            <WithStyles(ForwardRef(Grid))
                              item={true}
                              xs={true}
                            >
                              <ForwardRef(Grid)
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                    "container": "MuiGrid-container",
                                    "direction-xs-column": "MuiGrid-direction-xs-column",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                    "grid-lg-1": "MuiGrid-grid-lg-1",
                                    "grid-lg-10": "MuiGrid-grid-lg-10",
                                    "grid-lg-11": "MuiGrid-grid-lg-11",
                                    "grid-lg-12": "MuiGrid-grid-lg-12",
                                    "grid-lg-2": "MuiGrid-grid-lg-2",
                                    "grid-lg-3": "MuiGrid-grid-lg-3",
                                    "grid-lg-4": "MuiGrid-grid-lg-4",
                                    "grid-lg-5": "MuiGrid-grid-lg-5",
                                    "grid-lg-6": "MuiGrid-grid-lg-6",
                                    "grid-lg-7": "MuiGrid-grid-lg-7",
                                    "grid-lg-8": "MuiGrid-grid-lg-8",
                                    "grid-lg-9": "MuiGrid-grid-lg-9",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                    "grid-lg-true": "MuiGrid-grid-lg-true",
                                    "grid-md-1": "MuiGrid-grid-md-1",
                                    "grid-md-10": "MuiGrid-grid-md-10",
                                    "grid-md-11": "MuiGrid-grid-md-11",
                                    "grid-md-12": "MuiGrid-grid-md-12",
                                    "grid-md-2": "MuiGrid-grid-md-2",
                                    "grid-md-3": "MuiGrid-grid-md-3",
                                    "grid-md-4": "MuiGrid-grid-md-4",
                                    "grid-md-5": "MuiGrid-grid-md-5",
                                    "grid-md-6": "MuiGrid-grid-md-6",
                                    "grid-md-7": "MuiGrid-grid-md-7",
                                    "grid-md-8": "MuiGrid-grid-md-8",
                                    "grid-md-9": "MuiGrid-grid-md-9",
                                    "grid-md-auto": "MuiGrid-grid-md-auto",
                                    "grid-md-true": "MuiGrid-grid-md-true",
                                    "grid-sm-1": "MuiGrid-grid-sm-1",
                                    "grid-sm-10": "MuiGrid-grid-sm-10",
                                    "grid-sm-11": "MuiGrid-grid-sm-11",
                                    "grid-sm-12": "MuiGrid-grid-sm-12",
                                    "grid-sm-2": "MuiGrid-grid-sm-2",
                                    "grid-sm-3": "MuiGrid-grid-sm-3",
                                    "grid-sm-4": "MuiGrid-grid-sm-4",
                                    "grid-sm-5": "MuiGrid-grid-sm-5",
                                    "grid-sm-6": "MuiGrid-grid-sm-6",
                                    "grid-sm-7": "MuiGrid-grid-sm-7",
                                    "grid-sm-8": "MuiGrid-grid-sm-8",
                                    "grid-sm-9": "MuiGrid-grid-sm-9",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                    "grid-sm-true": "MuiGrid-grid-sm-true",
                                    "grid-xl-1": "MuiGrid-grid-xl-1",
                                    "grid-xl-10": "MuiGrid-grid-xl-10",
                                    "grid-xl-11": "MuiGrid-grid-xl-11",
                                    "grid-xl-12": "MuiGrid-grid-xl-12",
                                    "grid-xl-2": "MuiGrid-grid-xl-2",
                                    "grid-xl-3": "MuiGrid-grid-xl-3",
                                    "grid-xl-4": "MuiGrid-grid-xl-4",
                                    "grid-xl-5": "MuiGrid-grid-xl-5",
                                    "grid-xl-6": "MuiGrid-grid-xl-6",
                                    "grid-xl-7": "MuiGrid-grid-xl-7",
                                    "grid-xl-8": "MuiGrid-grid-xl-8",
                                    "grid-xl-9": "MuiGrid-grid-xl-9",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                    "grid-xl-true": "MuiGrid-grid-xl-true",
                                    "grid-xs-1": "MuiGrid-grid-xs-1",
                                    "grid-xs-10": "MuiGrid-grid-xs-10",
                                    "grid-xs-11": "MuiGrid-grid-xs-11",
                                    "grid-xs-12": "MuiGrid-grid-xs-12",
                                    "grid-xs-2": "MuiGrid-grid-xs-2",
                                    "grid-xs-3": "MuiGrid-grid-xs-3",
                                    "grid-xs-4": "MuiGrid-grid-xs-4",
                                    "grid-xs-5": "MuiGrid-grid-xs-5",
                                    "grid-xs-6": "MuiGrid-grid-xs-6",
                                    "grid-xs-7": "MuiGrid-grid-xs-7",
                                    "grid-xs-8": "MuiGrid-grid-xs-8",
                                    "grid-xs-9": "MuiGrid-grid-xs-9",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                    "grid-xs-true": "MuiGrid-grid-xs-true",
                                    "item": "MuiGrid-item",
                                    "justify-xs-center": "MuiGrid-justify-xs-center",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                    "root": "MuiGrid-root",
                                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                  }
                                }
                                item={true}
                                xs={true}
                              >
                                <div
                                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-true"
                                >
                                  <Styled(MuiBox)
                                    alignItems="center"
                                    className="ProgramCollection-flexitem3-4"
                                    display="flex"
                                  >
                                    <div
                                      className="MuiBox-root MuiBox-root-16 ProgramCollection-flexitem3-4"
                                    >
                                      <Styled(MuiBox)
                                        className="ProgramCollection-flexitem4-5"
                                        marginLeft={2}
                                        marginRight={2}
                                        style={
                                          Object {
                                            "width": "130px",
                                          }
                                        }
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-17 ProgramCollection-flexitem4-5"
                                          style={
                                            Object {
                                              "width": "130px",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            display="inline"
                                            variant="subtitle2"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              display="inline"
                                              variant="subtitle2"
                                            >
                                              <h6
                                                className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-displayInline"
                                              >
                                                <FormattedMessage
                                                  defaultMessage="Free Programs Used"
                                                  id="app.program_collection.slots"
                                                >
                                                  Free Programs Used
                                                </FormattedMessage>
                                                : 
                                              </h6>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                          <WithStyles(ForwardRef(Typography))
                                            color="secondary"
                                            display="inline"
                                            variant="subtitle2"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              color="secondary"
                                              display="inline"
                                              variant="subtitle2"
                                            >
                                              <h6
                                                className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-colorSecondary MuiTypography-displayInline"
                                              >
                                                5/5
                                              </h6>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                          <WithStyles(ForwardRef(Typography))
                                            variant="subtitle1"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              variant="subtitle1"
                                            >
                                              <h6
                                                className="MuiTypography-root MuiTypography-subtitle1"
                                              >
                                                <FormattedMessage
                                                  defaultMessage="You have used all your free program slots. You can delete an existing program to free up a program slot, or you can"
                                                  id="app.program_collection.over1"
                                                >
                                                  You have used all your free program slots. You can delete an existing program to free up a program slot, or you can
                                                </FormattedMessage>
                                                 
                                                <WithStyles(ForwardRef(Link))
                                                  href="/user/settings"
                                                >
                                                  <ForwardRef(Link)
                                                    classes={
                                                      Object {
                                                        "button": "MuiLink-button",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiLink-root",
                                                        "underlineAlways": "MuiLink-underlineAlways",
                                                        "underlineHover": "MuiLink-underlineHover",
                                                        "underlineNone": "MuiLink-underlineNone",
                                                      }
                                                    }
                                                    href="/user/settings"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))
                                                      className="MuiLink-root MuiLink-underlineHover"
                                                      color="primary"
                                                      component="a"
                                                      href="/user/settings"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      variant="inherit"
                                                    >
                                                      <ForwardRef(Typography)
                                                        className="MuiLink-root MuiLink-underlineHover"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                        color="primary"
                                                        component="a"
                                                        href="/user/settings"
                                                        onBlur={[Function]}
                                                        onFocus={[Function]}
                                                        variant="inherit"
                                                      >
                                                        <a
                                                          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                                                          href="/user/settings"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                        >
                                                          <FormattedMessage
                                                            defaultMessage="upgrade your account"
                                                            id="app.program_collection.over2"
                                                          >
                                                            upgrade your account
                                                          </FormattedMessage>
                                                        </a>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </ForwardRef(Link)>
                                                </WithStyles(ForwardRef(Link))>
                                                 
                                                <FormattedMessage
                                                  defaultMessage="for unlimited programs."
                                                  id="app.program_collection.over3"
                                                >
                                                  for unlimited programs.
                                                </FormattedMessage>
                                              </h6>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                      </Styled(MuiBox)>
                                      <Styled(MuiBox)
                                        className="ProgramCollection-flexitem5-6"
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-18 ProgramCollection-flexitem5-6"
                                        >
                                          <WithStyles(ForwardRef(Button))
                                            color="primary"
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            disabled={true}
                                            size="large"
                                            startIcon={<Memo(AddIcon) />}
                                            style={
                                              Object {
                                                "width": "162px",
                                              }
                                            }
                                            to="/mission-control"
                                            variant="contained"
                                          >
                                            <ForwardRef(Button)
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit",
                                                  "contained": "MuiButton-contained",
                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                  "disableElevation": "MuiButton-disableElevation",
                                                  "disabled": "Mui-disabled",
                                                  "endIcon": "MuiButton-endIcon",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "fullWidth": "MuiButton-fullWidth",
                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                  "label": "MuiButton-label",
                                                  "outlined": "MuiButton-outlined",
                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                  "root": "MuiButton-root",
                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                  "startIcon": "MuiButton-startIcon",
                                                  "text": "MuiButton-text",
                                                  "textPrimary": "MuiButton-textPrimary",
                                                  "textSecondary": "MuiButton-textSecondary",
                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                }
                                              }
                                              color="primary"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              disabled={true}
                                              size="large"
                                              startIcon={<Memo(AddIcon) />}
                                              style={
                                                Object {
                                                  "width": "162px",
                                                }
                                              }
                                              to="/mission-control"
                                              variant="contained"
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge Mui-disabled"
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Link",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "onClick": [Function],
                                                      "replace": [Function],
                                                      "target": [Function],
                                                      "to": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                disabled={true}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                style={
                                                  Object {
                                                    "width": "162px",
                                                  }
                                                }
                                                to="/mission-control"
                                                type="button"
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge Mui-disabled"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "Link",
                                                      "propTypes": Object {
                                                        "innerRef": [Function],
                                                        "onClick": [Function],
                                                        "replace": [Function],
                                                        "target": [Function],
                                                        "to": [Function],
                                                      },
                                                      "render": [Function],
                                                    }
                                                  }
                                                  disabled={true}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  style={
                                                    Object {
                                                      "width": "162px",
                                                    }
                                                  }
                                                  to="/mission-control"
                                                  type="button"
                                                >
                                                  <Link
                                                    aria-disabled={true}
                                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge Mui-disabled Mui-disabled"
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    style={
                                                      Object {
                                                        "width": "162px",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    to="/mission-control"
                                                  >
                                                    <LinkAnchor
                                                      aria-disabled={true}
                                                      className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge Mui-disabled Mui-disabled"
                                                      href="/mission-control"
                                                      navigate={[Function]}
                                                      onBlur={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      style={
                                                        Object {
                                                          "width": "162px",
                                                        }
                                                      }
                                                      tabIndex={-1}
                                                    >
                                                      <a
                                                        aria-disabled={true}
                                                        className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge Mui-disabled Mui-disabled"
                                                        href="/mission-control"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="button"
                                                        style={
                                                          Object {
                                                            "width": "162px",
                                                          }
                                                        }
                                                        tabIndex={-1}
                                                      >
                                                        <span
                                                          className="MuiButton-label"
                                                        >
                                                          <span
                                                            className="MuiButton-startIcon MuiButton-iconSizeLarge"
                                                          >
                                                            <ForwardRef>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                          </span>
                                                          <FormattedMessage
                                                            defaultMessage="New Program"
                                                            id="app.program_collection.new"
                                                          >
                                                            New Program
                                                          </FormattedMessage>
                                                        </span>
                                                      </a>
                                                    </LinkAnchor>
                                                  </Link>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Button)>
                                          </WithStyles(ForwardRef(Button))>
                                        </div>
                                      </Styled(MuiBox)>
                                    </div>
                                  </Styled(MuiBox)>
                                </div>
                              </ForwardRef(Grid)>
                            </WithStyles(ForwardRef(Grid))>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                       
                    </div>
                  </ForwardRef(Grid)>
                </WithStyles(ForwardRef(Grid))>
                <WithStyles(ForwardRef(Grid))
                  container={true}
                  spacing={2}
                >
                  <ForwardRef(Grid)
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                        "container": "MuiGrid-container",
                        "direction-xs-column": "MuiGrid-direction-xs-column",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                        "grid-lg-1": "MuiGrid-grid-lg-1",
                        "grid-lg-10": "MuiGrid-grid-lg-10",
                        "grid-lg-11": "MuiGrid-grid-lg-11",
                        "grid-lg-12": "MuiGrid-grid-lg-12",
                        "grid-lg-2": "MuiGrid-grid-lg-2",
                        "grid-lg-3": "MuiGrid-grid-lg-3",
                        "grid-lg-4": "MuiGrid-grid-lg-4",
                        "grid-lg-5": "MuiGrid-grid-lg-5",
                        "grid-lg-6": "MuiGrid-grid-lg-6",
                        "grid-lg-7": "MuiGrid-grid-lg-7",
                        "grid-lg-8": "MuiGrid-grid-lg-8",
                        "grid-lg-9": "MuiGrid-grid-lg-9",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                        "grid-lg-true": "MuiGrid-grid-lg-true",
                        "grid-md-1": "MuiGrid-grid-md-1",
                        "grid-md-10": "MuiGrid-grid-md-10",
                        "grid-md-11": "MuiGrid-grid-md-11",
                        "grid-md-12": "MuiGrid-grid-md-12",
                        "grid-md-2": "MuiGrid-grid-md-2",
                        "grid-md-3": "MuiGrid-grid-md-3",
                        "grid-md-4": "MuiGrid-grid-md-4",
                        "grid-md-5": "MuiGrid-grid-md-5",
                        "grid-md-6": "MuiGrid-grid-md-6",
                        "grid-md-7": "MuiGrid-grid-md-7",
                        "grid-md-8": "MuiGrid-grid-md-8",
                        "grid-md-9": "MuiGrid-grid-md-9",
                        "grid-md-auto": "MuiGrid-grid-md-auto",
                        "grid-md-true": "MuiGrid-grid-md-true",
                        "grid-sm-1": "MuiGrid-grid-sm-1",
                        "grid-sm-10": "MuiGrid-grid-sm-10",
                        "grid-sm-11": "MuiGrid-grid-sm-11",
                        "grid-sm-12": "MuiGrid-grid-sm-12",
                        "grid-sm-2": "MuiGrid-grid-sm-2",
                        "grid-sm-3": "MuiGrid-grid-sm-3",
                        "grid-sm-4": "MuiGrid-grid-sm-4",
                        "grid-sm-5": "MuiGrid-grid-sm-5",
                        "grid-sm-6": "MuiGrid-grid-sm-6",
                        "grid-sm-7": "MuiGrid-grid-sm-7",
                        "grid-sm-8": "MuiGrid-grid-sm-8",
                        "grid-sm-9": "MuiGrid-grid-sm-9",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                        "grid-sm-true": "MuiGrid-grid-sm-true",
                        "grid-xl-1": "MuiGrid-grid-xl-1",
                        "grid-xl-10": "MuiGrid-grid-xl-10",
                        "grid-xl-11": "MuiGrid-grid-xl-11",
                        "grid-xl-12": "MuiGrid-grid-xl-12",
                        "grid-xl-2": "MuiGrid-grid-xl-2",
                        "grid-xl-3": "MuiGrid-grid-xl-3",
                        "grid-xl-4": "MuiGrid-grid-xl-4",
                        "grid-xl-5": "MuiGrid-grid-xl-5",
                        "grid-xl-6": "MuiGrid-grid-xl-6",
                        "grid-xl-7": "MuiGrid-grid-xl-7",
                        "grid-xl-8": "MuiGrid-grid-xl-8",
                        "grid-xl-9": "MuiGrid-grid-xl-9",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                        "grid-xl-true": "MuiGrid-grid-xl-true",
                        "grid-xs-1": "MuiGrid-grid-xs-1",
                        "grid-xs-10": "MuiGrid-grid-xs-10",
                        "grid-xs-11": "MuiGrid-grid-xs-11",
                        "grid-xs-12": "MuiGrid-grid-xs-12",
                        "grid-xs-2": "MuiGrid-grid-xs-2",
                        "grid-xs-3": "MuiGrid-grid-xs-3",
                        "grid-xs-4": "MuiGrid-grid-xs-4",
                        "grid-xs-5": "MuiGrid-grid-xs-5",
                        "grid-xs-6": "MuiGrid-grid-xs-6",
                        "grid-xs-7": "MuiGrid-grid-xs-7",
                        "grid-xs-8": "MuiGrid-grid-xs-8",
                        "grid-xs-9": "MuiGrid-grid-xs-9",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                        "grid-xs-true": "MuiGrid-grid-xs-true",
                        "item": "MuiGrid-item",
                        "justify-xs-center": "MuiGrid-justify-xs-center",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                        "root": "MuiGrid-root",
                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                      }
                    }
                    container={true}
                    spacing={2}
                  >
                    <div
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                    >
                      <WithStyles(ForwardRef(Grid))
                        item={true}
                        key="33"
                        lg={3}
                        md={6}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          item={true}
                          lg={3}
                          md={6}
                          xs={12}
                        >
                          <div
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6 MuiGrid-grid-lg-3"
                          >
                            <WithStyles(ForwardRef(Card))
                              item={true}
                              key="33"
                              variant="outlined"
                            >
                              <ForwardRef(Card)
                                classes={
                                  Object {
                                    "root": "MuiCard-root",
                                  }
                                }
                                item={true}
                                variant="outlined"
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="MuiCard-root"
                                  elevation={1}
                                  item={true}
                                  variant="outlined"
                                >
                                  <ForwardRef(Paper)
                                    className="MuiCard-root"
                                    classes={
                                      Object {
                                        "elevation0": "MuiPaper-elevation0",
                                        "elevation1": "MuiPaper-elevation1",
                                        "elevation10": "MuiPaper-elevation10",
                                        "elevation11": "MuiPaper-elevation11",
                                        "elevation12": "MuiPaper-elevation12",
                                        "elevation13": "MuiPaper-elevation13",
                                        "elevation14": "MuiPaper-elevation14",
                                        "elevation15": "MuiPaper-elevation15",
                                        "elevation16": "MuiPaper-elevation16",
                                        "elevation17": "MuiPaper-elevation17",
                                        "elevation18": "MuiPaper-elevation18",
                                        "elevation19": "MuiPaper-elevation19",
                                        "elevation2": "MuiPaper-elevation2",
                                        "elevation20": "MuiPaper-elevation20",
                                        "elevation21": "MuiPaper-elevation21",
                                        "elevation22": "MuiPaper-elevation22",
                                        "elevation23": "MuiPaper-elevation23",
                                        "elevation24": "MuiPaper-elevation24",
                                        "elevation3": "MuiPaper-elevation3",
                                        "elevation4": "MuiPaper-elevation4",
                                        "elevation5": "MuiPaper-elevation5",
                                        "elevation6": "MuiPaper-elevation6",
                                        "elevation7": "MuiPaper-elevation7",
                                        "elevation8": "MuiPaper-elevation8",
                                        "elevation9": "MuiPaper-elevation9",
                                        "outlined": "MuiPaper-outlined",
                                        "root": "MuiPaper-root",
                                        "rounded": "MuiPaper-rounded",
                                      }
                                    }
                                    elevation={1}
                                    item={true}
                                    variant="outlined"
                                  >
                                    <div
                                      className="MuiPaper-root MuiCard-root MuiPaper-outlined MuiPaper-rounded"
                                      item={true}
                                    >
                                      <WithStyles(ForwardRef(CardActionArea))
                                        data-owned={false}
                                        id={33}
                                        onClick={[MockFunction]}
                                      >
                                        <ForwardRef(CardActionArea)
                                          classes={
                                            Object {
                                              "focusHighlight": "MuiCardActionArea-focusHighlight",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiCardActionArea-root",
                                            }
                                          }
                                          data-owned={false}
                                          id={33}
                                          onClick={[MockFunction]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            className="MuiCardActionArea-root"
                                            data-owned={false}
                                            focusVisibleClassName="Mui-focusVisible"
                                            id={33}
                                            onClick={[MockFunction]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              className="MuiCardActionArea-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              data-owned={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              id={33}
                                              onClick={[MockFunction]}
                                            >
                                              <button
                                                className="MuiButtonBase-root MuiCardActionArea-root"
                                                data-owned={false}
                                                disabled={false}
                                                id={33}
                                                onBlur={[Function]}
                                                onClick={[MockFunction]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <WithStyles(ForwardRef(CardContent))>
                                                  <ForwardRef(CardContent)
                                                    classes={
                                                      Object {
                                                        "root": "MuiCardContent-root",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="MuiCardContent-root"
                                                    >
                                                      <WithStyles(ForwardRef(Typography))
                                                        variant="h3"
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          variant="h3"
                                                        >
                                                          <h3
                                                            className="MuiTypography-root MuiTypography-h3"
                                                          >
                                                            Unnamed_Design_3
                                                          </h3>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                      <WithStyles(ForwardRef(Typography))
                                                        color="textSecondary"
                                                        variant="caption"
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          color="textSecondary"
                                                          variant="caption"
                                                        >
                                                          <span
                                                            className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                                          >
                                                            By
                                                             
                                                            admin
                                                          </span>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                    </div>
                                                  </ForwardRef(CardContent)>
                                                </WithStyles(ForwardRef(CardContent))>
                                                <span
                                                  className="MuiCardActionArea-focusHighlight"
                                                />
                                                <WithStyles(memo)
                                                  center={false}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={false}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(CardActionArea)>
                                      </WithStyles(ForwardRef(CardActionArea))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Card)>
                            </WithStyles(ForwardRef(Card))>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                      <WithStyles(ForwardRef(Grid))
                        item={true}
                        key="5"
                        lg={3}
                        md={6}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          item={true}
                          lg={3}
                          md={6}
                          xs={12}
                        >
                          <div
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6 MuiGrid-grid-lg-3"
                          >
                            <WithStyles(ForwardRef(Card))
                              item={true}
                              key="5"
                              variant="outlined"
                            >
                              <ForwardRef(Card)
                                classes={
                                  Object {
                                    "root": "MuiCard-root",
                                  }
                                }
                                item={true}
                                variant="outlined"
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="MuiCard-root"
                                  elevation={1}
                                  item={true}
                                  variant="outlined"
                                >
                                  <ForwardRef(Paper)
                                    className="MuiCard-root"
                                    classes={
                                      Object {
                                        "elevation0": "MuiPaper-elevation0",
                                        "elevation1": "MuiPaper-elevation1",
                                        "elevation10": "MuiPaper-elevation10",
                                        "elevation11": "MuiPaper-elevation11",
                                        "elevation12": "MuiPaper-elevation12",
                                        "elevation13": "MuiPaper-elevation13",
                                        "elevation14": "MuiPaper-elevation14",
                                        "elevation15": "MuiPaper-elevation15",
                                        "elevation16": "MuiPaper-elevation16",
                                        "elevation17": "MuiPaper-elevation17",
                                        "elevation18": "MuiPaper-elevation18",
                                        "elevation19": "MuiPaper-elevation19",
                                        "elevation2": "MuiPaper-elevation2",
                                        "elevation20": "MuiPaper-elevation20",
                                        "elevation21": "MuiPaper-elevation21",
                                        "elevation22": "MuiPaper-elevation22",
                                        "elevation23": "MuiPaper-elevation23",
                                        "elevation24": "MuiPaper-elevation24",
                                        "elevation3": "MuiPaper-elevation3",
                                        "elevation4": "MuiPaper-elevation4",
                                        "elevation5": "MuiPaper-elevation5",
                                        "elevation6": "MuiPaper-elevation6",
                                        "elevation7": "MuiPaper-elevation7",
                                        "elevation8": "MuiPaper-elevation8",
                                        "elevation9": "MuiPaper-elevation9",
                                        "outlined": "MuiPaper-outlined",
                                        "root": "MuiPaper-root",
                                        "rounded": "MuiPaper-rounded",
                                      }
                                    }
                                    elevation={1}
                                    item={true}
                                    variant="outlined"
                                  >
                                    <div
                                      className="MuiPaper-root MuiCard-root MuiPaper-outlined MuiPaper-rounded"
                                      item={true}
                                    >
                                      <WithStyles(ForwardRef(CardActionArea))
                                        data-owned={true}
                                        id={5}
                                        onClick={[MockFunction]}
                                      >
                                        <ForwardRef(CardActionArea)
                                          classes={
                                            Object {
                                              "focusHighlight": "MuiCardActionArea-focusHighlight",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiCardActionArea-root",
                                            }
                                          }
                                          data-owned={true}
                                          id={5}
                                          onClick={[MockFunction]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            className="MuiCardActionArea-root"
                                            data-owned={true}
                                            focusVisibleClassName="Mui-focusVisible"
                                            id={5}
                                            onClick={[MockFunction]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              className="MuiCardActionArea-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              data-owned={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              id={5}
                                              onClick={[MockFunction]}
                                            >
                                              <button
                                                className="MuiButtonBase-root MuiCardActionArea-root"
                                                data-owned={true}
                                                disabled={false}
                                                id={5}
                                                onBlur={[Function]}
                                                onClick={[MockFunction]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <WithStyles(ForwardRef(CardContent))>
                                                  <ForwardRef(CardContent)
                                                    classes={
                                                      Object {
                                                        "root": "MuiCardContent-root",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="MuiCardContent-root"
                                                    >
                                                      <WithStyles(ForwardRef(Typography))
                                                        variant="h3"
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          variant="h3"
                                                        >
                                                          <h3
                                                            className="MuiTypography-root MuiTypography-h3"
                                                          >
                                                            Unnamed_Design_2
                                                          </h3>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                    </div>
                                                  </ForwardRef(CardContent)>
                                                </WithStyles(ForwardRef(CardContent))>
                                                <span
                                                  className="MuiCardActionArea-focusHighlight"
                                                />
                                                <WithStyles(memo)
                                                  center={false}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={false}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(CardActionArea)>
                                      </WithStyles(ForwardRef(CardActionArea))>
                                      <WithStyles(ForwardRef(CardActions))>
                                        <ForwardRef(CardActions)
                                          classes={
                                            Object {
                                              "root": "MuiCardActions-root",
                                              "spacing": "MuiCardActions-spacing",
                                            }
                                          }
                                        >
                                          <div
                                            className="MuiCardActions-root MuiCardActions-spacing"
                                          >
                                            <WithStyles(WithStyles(ForwardRef(Button)))
                                              id={5}
                                              name="Unnamed_Design_2"
                                              onClick={[MockFunction]}
                                              size="small"
                                              startIcon={<Memo(DeleteIcon) />}
                                            >
                                              <WithStyles(ForwardRef(Button))
                                                classes={
                                                  Object {
                                                    "root": "WithStyles(ForwardRef(Button))-root-24",
                                                  }
                                                }
                                                id={5}
                                                name="Unnamed_Design_2"
                                                onClick={[MockFunction]}
                                                size="small"
                                                startIcon={<Memo(DeleteIcon) />}
                                              >
                                                <ForwardRef(Button)
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit",
                                                      "contained": "MuiButton-contained",
                                                      "containedPrimary": "MuiButton-containedPrimary",
                                                      "containedSecondary": "MuiButton-containedSecondary",
                                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                      "disableElevation": "MuiButton-disableElevation",
                                                      "disabled": "Mui-disabled",
                                                      "endIcon": "MuiButton-endIcon",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "fullWidth": "MuiButton-fullWidth",
                                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                      "label": "MuiButton-label",
                                                      "outlined": "MuiButton-outlined",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                      "root": "MuiButton-root WithStyles(ForwardRef(Button))-root-24",
                                                      "sizeLarge": "MuiButton-sizeLarge",
                                                      "sizeSmall": "MuiButton-sizeSmall",
                                                      "startIcon": "MuiButton-startIcon",
                                                      "text": "MuiButton-text",
                                                      "textPrimary": "MuiButton-textPrimary",
                                                      "textSecondary": "MuiButton-textSecondary",
                                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                                    }
                                                  }
                                                  id={5}
                                                  name="Unnamed_Design_2"
                                                  onClick={[MockFunction]}
                                                  size="small"
                                                  startIcon={<Memo(DeleteIcon) />}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiButton-root WithStyles(ForwardRef(Button))-root-24 MuiButton-text MuiButton-textSizeSmall MuiButton-sizeSmall"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    id={5}
                                                    name="Unnamed_Design_2"
                                                    onClick={[MockFunction]}
                                                    type="button"
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiButton-root WithStyles(ForwardRef(Button))-root-24 MuiButton-text MuiButton-textSizeSmall MuiButton-sizeSmall"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      id={5}
                                                      name="Unnamed_Design_2"
                                                      onClick={[MockFunction]}
                                                      type="button"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root MuiButton-root WithStyles(ForwardRef(Button))-root-24 MuiButton-text MuiButton-textSizeSmall MuiButton-sizeSmall"
                                                        disabled={false}
                                                        id={5}
                                                        name="Unnamed_Design_2"
                                                        onBlur={[Function]}
                                                        onClick={[MockFunction]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="MuiButton-label"
                                                        >
                                                          <span
                                                            className="MuiButton-startIcon MuiButton-iconSizeSmall"
                                                          >
                                                            <ForwardRef>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                          </span>
                                                          <FormattedMessage
                                                            defaultMessage="Delete"
                                                            id="app.program_collection.remove"
                                                          >
                                                            Delete
                                                          </FormattedMessage>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(Button)>
                                              </WithStyles(ForwardRef(Button))>
                                            </WithStyles(WithStyles(ForwardRef(Button)))>
                                          </div>
                                        </ForwardRef(CardActions)>
                                      </WithStyles(ForwardRef(CardActions))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Card)>
                            </WithStyles(ForwardRef(Card))>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                    </div>
                  </ForwardRef(Grid)>
                </WithStyles(ForwardRef(Grid))>
                <Styled(MuiBox)
                  className="ProgramCollection-paginationPaddedBox-1"
                >
                  <div
                    className="MuiBox-root MuiBox-root-20 ProgramCollection-paginationPaddedBox-1"
                  >
                    <WithStyles(ForwardRef(Pagination))
                      color="secondary"
                      count={2}
                      defaultPage={1}
                      onChange={[Function]}
                      showFirstButton={true}
                      showLastButton={true}
                    >
                      <ForwardRef(Pagination)
                        classes={
                          Object {
                            "root": "MuiPagination-root",
                            "ul": "MuiPagination-ul",
                          }
                        }
                        color="secondary"
                        count={2}
                        defaultPage={1}
                        onChange={[Function]}
                        showFirstButton={true}
                        showLastButton={true}
                      >
                        <nav
                          aria-label="pagination navigation"
                          className="MuiPagination-root"
                        >
                          <ul
                            className="MuiPagination-ul"
                          >
                            <li
                              key="0"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to first page"
                                color="secondary"
                                disabled={true}
                                onClick={[Function]}
                                page={1}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="first"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to first page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={true}
                                  onClick={[Function]}
                                  page={1}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="first"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to first page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                    disabled={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to first page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to first page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled Mui-disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={-1}
                                        type="button"
                                      >
                                        <ForwardRef(FirstPageIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(FirstPageIcon)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="1"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to previous page"
                                color="secondary"
                                disabled={true}
                                onClick={[Function]}
                                page={0}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="previous"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to previous page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={true}
                                  onClick={[Function]}
                                  page={0}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="previous"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to previous page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                    disabled={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to previous page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to previous page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled Mui-disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={-1}
                                        type="button"
                                      >
                                        <ForwardRef(NavigateBeforeIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(NavigateBeforeIcon)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="2"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-current="true"
                                aria-label="page 1"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={1}
                                selected={true}
                                shape="round"
                                size="medium"
                                type="page"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-current="true"
                                  aria-label="page 1"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={1}
                                  selected={true}
                                  shape="round"
                                  size="medium"
                                  type="page"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-current="true"
                                    aria-label="page 1"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-selected"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-current="true"
                                      aria-label="page 1"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-selected"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-current="true"
                                        aria-label="page 1"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-selected"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        1
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="3"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to page 2"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={2}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="page"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to page 2"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={2}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="page"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to page 2"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to page 2"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to page 2"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        2
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="4"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to next page"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={2}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="next"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to next page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={2}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="next"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to next page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to next page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to next page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <ForwardRef(NavigateNextIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(NavigateNextIcon)>
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="5"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to last page"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={2}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="last"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to last page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={2}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="last"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to last page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to last page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to last page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <ForwardRef(LastPageIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(LastPageIcon)>
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                          </ul>
                        </nav>
                      </ForwardRef(Pagination)>
                    </WithStyles(ForwardRef(Pagination))>
                  </div>
                </Styled(MuiBox)>
              </div>
            </ForwardRef(Container)>
          </WithStyles(ForwardRef(Container))>
        </ProgramCollection>
      </WithStyles(ProgramCollection)>
    </injectIntl(WithStyles(ProgramCollection))>
  </Router>
</BrowserRouter>
`;

exports[`The ProgramCollection component renders on the page with no errors as free tier under 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <injectIntl(WithStyles(ProgramCollection))
      label="My Programs"
      onProgramClick={[MockFunction]}
      onRemoveClick={[MockFunction]}
      onUpdate={[MockFunction]}
      programs={
        Object {
          "count": 2,
          "next": null,
          "previous": null,
          "results": Array [
            Object {
              "content": "<xml><variables></variables></xml>",
              "id": 33,
              "name": "Unnamed_Design_3",
              "user": Object {
                "username": "admin",
              },
            },
            Object {
              "content": "<xml><variables></variables></xml>",
              "id": 5,
              "name": "Unnamed_Design_2",
              "user": Object {
                "username": "testuser",
              },
            },
          ],
          "total_pages": 2,
        }
      }
      user={
        Object {
          "stats": Object {
            "block_diagram": Object {
              "count": 2,
              "limit": 5,
            },
          },
          "tier": 1,
          "username": "testuser",
        }
      }
    >
      <WithStyles(ProgramCollection)
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {},
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
            "wrapRichTextChunksInFragment": undefined,
          }
        }
        label="My Programs"
        onProgramClick={[MockFunction]}
        onRemoveClick={[MockFunction]}
        onUpdate={[MockFunction]}
        programs={
          Object {
            "count": 2,
            "next": null,
            "previous": null,
            "results": Array [
              Object {
                "content": "<xml><variables></variables></xml>",
                "id": 33,
                "name": "Unnamed_Design_3",
                "user": Object {
                  "username": "admin",
                },
              },
              Object {
                "content": "<xml><variables></variables></xml>",
                "id": 5,
                "name": "Unnamed_Design_2",
                "user": Object {
                  "username": "testuser",
                },
              },
            ],
            "total_pages": 2,
          }
        }
        user={
          Object {
            "stats": Object {
              "block_diagram": Object {
                "count": 2,
                "limit": 5,
              },
            },
            "tier": 1,
            "username": "testuser",
          }
        }
      >
        <ProgramCollection
          classes={
            Object {
              "flexitem1": "ProgramCollection-flexitem1-2",
              "flexitem2": "ProgramCollection-flexitem2-3",
              "flexitem3": "ProgramCollection-flexitem3-4",
              "flexitem4": "ProgramCollection-flexitem4-5",
              "flexitem5": "ProgramCollection-flexitem5-6",
              "paginationPaddedBox": "ProgramCollection-paginationPaddedBox-1",
            }
          }
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {},
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
          label="My Programs"
          onProgramClick={[MockFunction]}
          onRemoveClick={[MockFunction]}
          onUpdate={[MockFunction]}
          programs={
            Object {
              "count": 2,
              "next": null,
              "previous": null,
              "results": Array [
                Object {
                  "content": "<xml><variables></variables></xml>",
                  "id": 33,
                  "name": "Unnamed_Design_3",
                  "user": Object {
                    "username": "admin",
                  },
                },
                Object {
                  "content": "<xml><variables></variables></xml>",
                  "id": 5,
                  "name": "Unnamed_Design_2",
                  "user": Object {
                    "username": "testuser",
                  },
                },
              ],
              "total_pages": 2,
            }
          }
          tag={
            Object {
              "tags": Array [],
            }
          }
          user={
            Object {
              "stats": Object {
                "block_diagram": Object {
                  "count": 2,
                  "limit": 5,
                },
              },
              "tier": 1,
              "username": "testuser",
            }
          }
        >
          <WithStyles(ForwardRef(Container))>
            <ForwardRef(Container)
              classes={
                Object {
                  "disableGutters": "MuiContainer-disableGutters",
                  "fixed": "MuiContainer-fixed",
                  "maxWidthLg": "MuiContainer-maxWidthLg",
                  "maxWidthMd": "MuiContainer-maxWidthMd",
                  "maxWidthSm": "MuiContainer-maxWidthSm",
                  "maxWidthXl": "MuiContainer-maxWidthXl",
                  "maxWidthXs": "MuiContainer-maxWidthXs",
                  "root": "MuiContainer-root",
                }
              }
            >
              <div
                className="MuiContainer-root MuiContainer-maxWidthLg"
              >
                <WithStyles(WithStyles(ForwardRef(Grid)))
                  container={true}
                  direction="row"
                  item={true}
                  justify="space-between"
                >
                  <WithStyles(ForwardRef(Grid))
                    classes={
                      Object {
                        "root": "WithStyles(ForwardRef(Grid))-root-35",
                      }
                    }
                    container={true}
                    direction="row"
                    item={true}
                    justify="space-between"
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-xs-center": "MuiGrid-justify-xs-center",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                          "root": "MuiGrid-root WithStyles(ForwardRef(Grid))-root-35",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      container={true}
                      direction="row"
                      item={true}
                      justify="space-between"
                    >
                      <div
                        className="MuiGrid-root WithStyles(ForwardRef(Grid))-root-35 MuiGrid-container MuiGrid-item MuiGrid-justify-xs-space-between"
                      >
                        <WithStyles(ForwardRef(Grid))
                          item={true}
                        >
                          <ForwardRef(Grid)
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                "container": "MuiGrid-container",
                                "direction-xs-column": "MuiGrid-direction-xs-column",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                "grid-lg-1": "MuiGrid-grid-lg-1",
                                "grid-lg-10": "MuiGrid-grid-lg-10",
                                "grid-lg-11": "MuiGrid-grid-lg-11",
                                "grid-lg-12": "MuiGrid-grid-lg-12",
                                "grid-lg-2": "MuiGrid-grid-lg-2",
                                "grid-lg-3": "MuiGrid-grid-lg-3",
                                "grid-lg-4": "MuiGrid-grid-lg-4",
                                "grid-lg-5": "MuiGrid-grid-lg-5",
                                "grid-lg-6": "MuiGrid-grid-lg-6",
                                "grid-lg-7": "MuiGrid-grid-lg-7",
                                "grid-lg-8": "MuiGrid-grid-lg-8",
                                "grid-lg-9": "MuiGrid-grid-lg-9",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                "grid-lg-true": "MuiGrid-grid-lg-true",
                                "grid-md-1": "MuiGrid-grid-md-1",
                                "grid-md-10": "MuiGrid-grid-md-10",
                                "grid-md-11": "MuiGrid-grid-md-11",
                                "grid-md-12": "MuiGrid-grid-md-12",
                                "grid-md-2": "MuiGrid-grid-md-2",
                                "grid-md-3": "MuiGrid-grid-md-3",
                                "grid-md-4": "MuiGrid-grid-md-4",
                                "grid-md-5": "MuiGrid-grid-md-5",
                                "grid-md-6": "MuiGrid-grid-md-6",
                                "grid-md-7": "MuiGrid-grid-md-7",
                                "grid-md-8": "MuiGrid-grid-md-8",
                                "grid-md-9": "MuiGrid-grid-md-9",
                                "grid-md-auto": "MuiGrid-grid-md-auto",
                                "grid-md-true": "MuiGrid-grid-md-true",
                                "grid-sm-1": "MuiGrid-grid-sm-1",
                                "grid-sm-10": "MuiGrid-grid-sm-10",
                                "grid-sm-11": "MuiGrid-grid-sm-11",
                                "grid-sm-12": "MuiGrid-grid-sm-12",
                                "grid-sm-2": "MuiGrid-grid-sm-2",
                                "grid-sm-3": "MuiGrid-grid-sm-3",
                                "grid-sm-4": "MuiGrid-grid-sm-4",
                                "grid-sm-5": "MuiGrid-grid-sm-5",
                                "grid-sm-6": "MuiGrid-grid-sm-6",
                                "grid-sm-7": "MuiGrid-grid-sm-7",
                                "grid-sm-8": "MuiGrid-grid-sm-8",
                                "grid-sm-9": "MuiGrid-grid-sm-9",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                "grid-sm-true": "MuiGrid-grid-sm-true",
                                "grid-xl-1": "MuiGrid-grid-xl-1",
                                "grid-xl-10": "MuiGrid-grid-xl-10",
                                "grid-xl-11": "MuiGrid-grid-xl-11",
                                "grid-xl-12": "MuiGrid-grid-xl-12",
                                "grid-xl-2": "MuiGrid-grid-xl-2",
                                "grid-xl-3": "MuiGrid-grid-xl-3",
                                "grid-xl-4": "MuiGrid-grid-xl-4",
                                "grid-xl-5": "MuiGrid-grid-xl-5",
                                "grid-xl-6": "MuiGrid-grid-xl-6",
                                "grid-xl-7": "MuiGrid-grid-xl-7",
                                "grid-xl-8": "MuiGrid-grid-xl-8",
                                "grid-xl-9": "MuiGrid-grid-xl-9",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                "grid-xl-true": "MuiGrid-grid-xl-true",
                                "grid-xs-1": "MuiGrid-grid-xs-1",
                                "grid-xs-10": "MuiGrid-grid-xs-10",
                                "grid-xs-11": "MuiGrid-grid-xs-11",
                                "grid-xs-12": "MuiGrid-grid-xs-12",
                                "grid-xs-2": "MuiGrid-grid-xs-2",
                                "grid-xs-3": "MuiGrid-grid-xs-3",
                                "grid-xs-4": "MuiGrid-grid-xs-4",
                                "grid-xs-5": "MuiGrid-grid-xs-5",
                                "grid-xs-6": "MuiGrid-grid-xs-6",
                                "grid-xs-7": "MuiGrid-grid-xs-7",
                                "grid-xs-8": "MuiGrid-grid-xs-8",
                                "grid-xs-9": "MuiGrid-grid-xs-9",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                "grid-xs-true": "MuiGrid-grid-xs-true",
                                "item": "MuiGrid-item",
                                "justify-xs-center": "MuiGrid-justify-xs-center",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                "root": "MuiGrid-root",
                                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth",
                              }
                            }
                            item={true}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item"
                            >
                              <WithStyles(WithStyles(ForwardRef(Typography)))
                                variant="h1"
                              >
                                <WithStyles(ForwardRef(Typography))
                                  classes={
                                    Object {
                                      "root": "WithStyles(ForwardRef(Typography))-root-36",
                                    }
                                  }
                                  variant="h1"
                                >
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root WithStyles(ForwardRef(Typography))-root-36",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    variant="h1"
                                  >
                                    <h1
                                      className="MuiTypography-root WithStyles(ForwardRef(Typography))-root-36 MuiTypography-h1"
                                    >
                                      My Programs
                                    </h1>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </WithStyles(WithStyles(ForwardRef(Typography)))>
                            </div>
                          </ForwardRef(Grid)>
                        </WithStyles(ForwardRef(Grid))>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                </WithStyles(WithStyles(ForwardRef(Grid)))>
                <WithStyles(ForwardRef(Grid))
                  container={true}
                  spacing={2}
                  style={
                    Object {
                      "marginBottom": "16px",
                    }
                  }
                >
                  <ForwardRef(Grid)
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                        "container": "MuiGrid-container",
                        "direction-xs-column": "MuiGrid-direction-xs-column",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                        "grid-lg-1": "MuiGrid-grid-lg-1",
                        "grid-lg-10": "MuiGrid-grid-lg-10",
                        "grid-lg-11": "MuiGrid-grid-lg-11",
                        "grid-lg-12": "MuiGrid-grid-lg-12",
                        "grid-lg-2": "MuiGrid-grid-lg-2",
                        "grid-lg-3": "MuiGrid-grid-lg-3",
                        "grid-lg-4": "MuiGrid-grid-lg-4",
                        "grid-lg-5": "MuiGrid-grid-lg-5",
                        "grid-lg-6": "MuiGrid-grid-lg-6",
                        "grid-lg-7": "MuiGrid-grid-lg-7",
                        "grid-lg-8": "MuiGrid-grid-lg-8",
                        "grid-lg-9": "MuiGrid-grid-lg-9",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                        "grid-lg-true": "MuiGrid-grid-lg-true",
                        "grid-md-1": "MuiGrid-grid-md-1",
                        "grid-md-10": "MuiGrid-grid-md-10",
                        "grid-md-11": "MuiGrid-grid-md-11",
                        "grid-md-12": "MuiGrid-grid-md-12",
                        "grid-md-2": "MuiGrid-grid-md-2",
                        "grid-md-3": "MuiGrid-grid-md-3",
                        "grid-md-4": "MuiGrid-grid-md-4",
                        "grid-md-5": "MuiGrid-grid-md-5",
                        "grid-md-6": "MuiGrid-grid-md-6",
                        "grid-md-7": "MuiGrid-grid-md-7",
                        "grid-md-8": "MuiGrid-grid-md-8",
                        "grid-md-9": "MuiGrid-grid-md-9",
                        "grid-md-auto": "MuiGrid-grid-md-auto",
                        "grid-md-true": "MuiGrid-grid-md-true",
                        "grid-sm-1": "MuiGrid-grid-sm-1",
                        "grid-sm-10": "MuiGrid-grid-sm-10",
                        "grid-sm-11": "MuiGrid-grid-sm-11",
                        "grid-sm-12": "MuiGrid-grid-sm-12",
                        "grid-sm-2": "MuiGrid-grid-sm-2",
                        "grid-sm-3": "MuiGrid-grid-sm-3",
                        "grid-sm-4": "MuiGrid-grid-sm-4",
                        "grid-sm-5": "MuiGrid-grid-sm-5",
                        "grid-sm-6": "MuiGrid-grid-sm-6",
                        "grid-sm-7": "MuiGrid-grid-sm-7",
                        "grid-sm-8": "MuiGrid-grid-sm-8",
                        "grid-sm-9": "MuiGrid-grid-sm-9",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                        "grid-sm-true": "MuiGrid-grid-sm-true",
                        "grid-xl-1": "MuiGrid-grid-xl-1",
                        "grid-xl-10": "MuiGrid-grid-xl-10",
                        "grid-xl-11": "MuiGrid-grid-xl-11",
                        "grid-xl-12": "MuiGrid-grid-xl-12",
                        "grid-xl-2": "MuiGrid-grid-xl-2",
                        "grid-xl-3": "MuiGrid-grid-xl-3",
                        "grid-xl-4": "MuiGrid-grid-xl-4",
                        "grid-xl-5": "MuiGrid-grid-xl-5",
                        "grid-xl-6": "MuiGrid-grid-xl-6",
                        "grid-xl-7": "MuiGrid-grid-xl-7",
                        "grid-xl-8": "MuiGrid-grid-xl-8",
                        "grid-xl-9": "MuiGrid-grid-xl-9",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                        "grid-xl-true": "MuiGrid-grid-xl-true",
                        "grid-xs-1": "MuiGrid-grid-xs-1",
                        "grid-xs-10": "MuiGrid-grid-xs-10",
                        "grid-xs-11": "MuiGrid-grid-xs-11",
                        "grid-xs-12": "MuiGrid-grid-xs-12",
                        "grid-xs-2": "MuiGrid-grid-xs-2",
                        "grid-xs-3": "MuiGrid-grid-xs-3",
                        "grid-xs-4": "MuiGrid-grid-xs-4",
                        "grid-xs-5": "MuiGrid-grid-xs-5",
                        "grid-xs-6": "MuiGrid-grid-xs-6",
                        "grid-xs-7": "MuiGrid-grid-xs-7",
                        "grid-xs-8": "MuiGrid-grid-xs-8",
                        "grid-xs-9": "MuiGrid-grid-xs-9",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                        "grid-xs-true": "MuiGrid-grid-xs-true",
                        "item": "MuiGrid-item",
                        "justify-xs-center": "MuiGrid-justify-xs-center",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                        "root": "MuiGrid-root",
                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                      }
                    }
                    container={true}
                    spacing={2}
                    style={
                      Object {
                        "marginBottom": "16px",
                      }
                    }
                  >
                    <div
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                      style={
                        Object {
                          "marginBottom": "16px",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Grid))
                        className="ProgramCollection-flexitem1-2"
                        container={true}
                        item={true}
                        md={8}
                        spacing={2}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          className="ProgramCollection-flexitem1-2"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          container={true}
                          item={true}
                          md={8}
                          spacing={2}
                          xs={12}
                        >
                          <div
                            className="MuiGrid-root ProgramCollection-flexitem1-2 MuiGrid-container MuiGrid-spacing-xs-2 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-8"
                          >
                            <WithStyles(ForwardRef(Grid))
                              item={true}
                              md={6}
                              xs={12}
                            >
                              <ForwardRef(Grid)
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                    "container": "MuiGrid-container",
                                    "direction-xs-column": "MuiGrid-direction-xs-column",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                    "grid-lg-1": "MuiGrid-grid-lg-1",
                                    "grid-lg-10": "MuiGrid-grid-lg-10",
                                    "grid-lg-11": "MuiGrid-grid-lg-11",
                                    "grid-lg-12": "MuiGrid-grid-lg-12",
                                    "grid-lg-2": "MuiGrid-grid-lg-2",
                                    "grid-lg-3": "MuiGrid-grid-lg-3",
                                    "grid-lg-4": "MuiGrid-grid-lg-4",
                                    "grid-lg-5": "MuiGrid-grid-lg-5",
                                    "grid-lg-6": "MuiGrid-grid-lg-6",
                                    "grid-lg-7": "MuiGrid-grid-lg-7",
                                    "grid-lg-8": "MuiGrid-grid-lg-8",
                                    "grid-lg-9": "MuiGrid-grid-lg-9",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                    "grid-lg-true": "MuiGrid-grid-lg-true",
                                    "grid-md-1": "MuiGrid-grid-md-1",
                                    "grid-md-10": "MuiGrid-grid-md-10",
                                    "grid-md-11": "MuiGrid-grid-md-11",
                                    "grid-md-12": "MuiGrid-grid-md-12",
                                    "grid-md-2": "MuiGrid-grid-md-2",
                                    "grid-md-3": "MuiGrid-grid-md-3",
                                    "grid-md-4": "MuiGrid-grid-md-4",
                                    "grid-md-5": "MuiGrid-grid-md-5",
                                    "grid-md-6": "MuiGrid-grid-md-6",
                                    "grid-md-7": "MuiGrid-grid-md-7",
                                    "grid-md-8": "MuiGrid-grid-md-8",
                                    "grid-md-9": "MuiGrid-grid-md-9",
                                    "grid-md-auto": "MuiGrid-grid-md-auto",
                                    "grid-md-true": "MuiGrid-grid-md-true",
                                    "grid-sm-1": "MuiGrid-grid-sm-1",
                                    "grid-sm-10": "MuiGrid-grid-sm-10",
                                    "grid-sm-11": "MuiGrid-grid-sm-11",
                                    "grid-sm-12": "MuiGrid-grid-sm-12",
                                    "grid-sm-2": "MuiGrid-grid-sm-2",
                                    "grid-sm-3": "MuiGrid-grid-sm-3",
                                    "grid-sm-4": "MuiGrid-grid-sm-4",
                                    "grid-sm-5": "MuiGrid-grid-sm-5",
                                    "grid-sm-6": "MuiGrid-grid-sm-6",
                                    "grid-sm-7": "MuiGrid-grid-sm-7",
                                    "grid-sm-8": "MuiGrid-grid-sm-8",
                                    "grid-sm-9": "MuiGrid-grid-sm-9",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                    "grid-sm-true": "MuiGrid-grid-sm-true",
                                    "grid-xl-1": "MuiGrid-grid-xl-1",
                                    "grid-xl-10": "MuiGrid-grid-xl-10",
                                    "grid-xl-11": "MuiGrid-grid-xl-11",
                                    "grid-xl-12": "MuiGrid-grid-xl-12",
                                    "grid-xl-2": "MuiGrid-grid-xl-2",
                                    "grid-xl-3": "MuiGrid-grid-xl-3",
                                    "grid-xl-4": "MuiGrid-grid-xl-4",
                                    "grid-xl-5": "MuiGrid-grid-xl-5",
                                    "grid-xl-6": "MuiGrid-grid-xl-6",
                                    "grid-xl-7": "MuiGrid-grid-xl-7",
                                    "grid-xl-8": "MuiGrid-grid-xl-8",
                                    "grid-xl-9": "MuiGrid-grid-xl-9",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                    "grid-xl-true": "MuiGrid-grid-xl-true",
                                    "grid-xs-1": "MuiGrid-grid-xs-1",
                                    "grid-xs-10": "MuiGrid-grid-xs-10",
                                    "grid-xs-11": "MuiGrid-grid-xs-11",
                                    "grid-xs-12": "MuiGrid-grid-xs-12",
                                    "grid-xs-2": "MuiGrid-grid-xs-2",
                                    "grid-xs-3": "MuiGrid-grid-xs-3",
                                    "grid-xs-4": "MuiGrid-grid-xs-4",
                                    "grid-xs-5": "MuiGrid-grid-xs-5",
                                    "grid-xs-6": "MuiGrid-grid-xs-6",
                                    "grid-xs-7": "MuiGrid-grid-xs-7",
                                    "grid-xs-8": "MuiGrid-grid-xs-8",
                                    "grid-xs-9": "MuiGrid-grid-xs-9",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                    "grid-xs-true": "MuiGrid-grid-xs-true",
                                    "item": "MuiGrid-item",
                                    "justify-xs-center": "MuiGrid-justify-xs-center",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                    "root": "MuiGrid-root",
                                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                  }
                                }
                                item={true}
                                md={6}
                                xs={12}
                              >
                                <div
                                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6"
                                >
                                  <WithStyles(ForwardRef(TextField))
                                    InputProps={
                                      Object {
                                        "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                          position="end"
                                        >
                                          <Memo(SearchIcon)
                                            color="disabled"
                                          />
                                        </WithStyles(ForwardRef(InputAdornment))>,
                                      }
                                    }
                                    className="prompt"
                                    fullWidth={true}
                                    icon="search"
                                    onChange={[Function]}
                                    placeholder="Search programs"
                                    size="small"
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                        "fontWeight": "500",
                                      }
                                    }
                                    variant="outlined"
                                  >
                                    <ForwardRef(TextField)
                                      InputProps={
                                        Object {
                                          "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                            position="end"
                                          >
                                            <Memo(SearchIcon)
                                              color="disabled"
                                            />
                                          </WithStyles(ForwardRef(InputAdornment))>,
                                        }
                                      }
                                      className="prompt"
                                      classes={
                                        Object {
                                          "root": "MuiTextField-root",
                                        }
                                      }
                                      fullWidth={true}
                                      icon="search"
                                      onChange={[Function]}
                                      placeholder="Search programs"
                                      size="small"
                                      style={
                                        Object {
                                          "backgroundColor": "white",
                                          "fontWeight": "500",
                                        }
                                      }
                                      variant="outlined"
                                    >
                                      <WithStyles(ForwardRef(FormControl))
                                        className="MuiTextField-root prompt"
                                        color="primary"
                                        disabled={false}
                                        error={false}
                                        fullWidth={true}
                                        icon="search"
                                        required={false}
                                        size="small"
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                            "fontWeight": "500",
                                          }
                                        }
                                        variant="outlined"
                                      >
                                        <ForwardRef(FormControl)
                                          className="MuiTextField-root prompt"
                                          classes={
                                            Object {
                                              "fullWidth": "MuiFormControl-fullWidth",
                                              "marginDense": "MuiFormControl-marginDense",
                                              "marginNormal": "MuiFormControl-marginNormal",
                                              "root": "MuiFormControl-root",
                                            }
                                          }
                                          color="primary"
                                          disabled={false}
                                          error={false}
                                          fullWidth={true}
                                          icon="search"
                                          required={false}
                                          size="small"
                                          style={
                                            Object {
                                              "backgroundColor": "white",
                                              "fontWeight": "500",
                                            }
                                          }
                                          variant="outlined"
                                        >
                                          <div
                                            className="MuiFormControl-root MuiTextField-root prompt MuiFormControl-fullWidth"
                                            icon="search"
                                            style={
                                              Object {
                                                "backgroundColor": "white",
                                                "fontWeight": "500",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(OutlinedInput))
                                              autoFocus={false}
                                              endAdornment={
                                                <WithStyles(ForwardRef(InputAdornment))
                                                  position="end"
                                                >
                                                  <Memo(SearchIcon)
                                                    color="disabled"
                                                  />
                                                </WithStyles(ForwardRef(InputAdornment))>
                                              }
                                              fullWidth={true}
                                              multiline={false}
                                              onChange={[Function]}
                                              placeholder="Search programs"
                                            >
                                              <ForwardRef(OutlinedInput)
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "input": "MuiOutlinedInput-input",
                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                    "multiline": "MuiOutlinedInput-multiline",
                                                    "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                    "root": "MuiOutlinedInput-root",
                                                  }
                                                }
                                                endAdornment={
                                                  <WithStyles(ForwardRef(InputAdornment))
                                                    position="end"
                                                  >
                                                    <Memo(SearchIcon)
                                                      color="disabled"
                                                    />
                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                }
                                                fullWidth={true}
                                                multiline={false}
                                                onChange={[Function]}
                                                placeholder="Search programs"
                                              >
                                                <WithStyles(ForwardRef(InputBase))
                                                  autoFocus={false}
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                      "adornedStart": "MuiOutlinedInput-adornedStart",
                                                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "error": "Mui-error",
                                                      "focused": "Mui-focused",
                                                      "input": "MuiOutlinedInput-input",
                                                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                      "marginDense": "MuiOutlinedInput-marginDense",
                                                      "multiline": "MuiOutlinedInput-multiline",
                                                      "notchedOutline": null,
                                                      "root": "MuiOutlinedInput-root",
                                                    }
                                                  }
                                                  endAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="end"
                                                    >
                                                      <Memo(SearchIcon)
                                                        color="disabled"
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  fullWidth={true}
                                                  inputComponent="input"
                                                  multiline={false}
                                                  onChange={[Function]}
                                                  placeholder="Search programs"
                                                  renderSuffix={[Function]}
                                                  type="text"
                                                >
                                                  <ForwardRef(InputBase)
                                                    autoFocus={false}
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                        "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                        "disabled": "Mui-disabled Mui-disabled",
                                                        "error": "Mui-error Mui-error",
                                                        "focused": "Mui-focused Mui-focused",
                                                        "formControl": "MuiInputBase-formControl",
                                                        "fullWidth": "MuiInputBase-fullWidth",
                                                        "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                        "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                        "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                        "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                      }
                                                    }
                                                    endAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="end"
                                                      >
                                                        <Memo(SearchIcon)
                                                          color="disabled"
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    fullWidth={true}
                                                    inputComponent="input"
                                                    multiline={false}
                                                    onChange={[Function]}
                                                    placeholder="Search programs"
                                                    renderSuffix={[Function]}
                                                    type="text"
                                                  >
                                                    <div
                                                      className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd MuiInputBase-marginDense MuiOutlinedInput-marginDense"
                                                      onClick={[Function]}
                                                    >
                                                      <input
                                                        aria-invalid={false}
                                                        autoFocus={false}
                                                        className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
                                                        disabled={false}
                                                        onAnimationStart={[Function]}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        placeholder="Search programs"
                                                        required={false}
                                                        type="text"
                                                      />
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="end"
                                                      >
                                                        <ForwardRef(InputAdornment)
                                                          classes={
                                                            Object {
                                                              "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                              "filled": "MuiInputAdornment-filled",
                                                              "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                              "marginDense": "MuiInputAdornment-marginDense",
                                                              "positionEnd": "MuiInputAdornment-positionEnd",
                                                              "positionStart": "MuiInputAdornment-positionStart",
                                                              "root": "MuiInputAdornment-root",
                                                            }
                                                          }
                                                          position="end"
                                                        >
                                                          <div
                                                            className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-marginDense"
                                                          >
                                                            <ForwardRef
                                                              color="disabled"
                                                            >
                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                color="disabled"
                                                              >
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                  color="disabled"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root MuiSvgIcon-colorDisabled"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                          </div>
                                                        </ForwardRef(InputAdornment)>
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                      <WithStyles(ForwardRef(NotchedOutline))
                                                        className="MuiOutlinedInput-notchedOutline"
                                                        labelWidth={0}
                                                        notched={false}
                                                      >
                                                        <ForwardRef(NotchedOutline)
                                                          className="MuiOutlinedInput-notchedOutline"
                                                          classes={
                                                            Object {
                                                              "legend": "PrivateNotchedOutline-legend-10",
                                                              "legendLabelled": "PrivateNotchedOutline-legendLabelled-11",
                                                              "legendNotched": "PrivateNotchedOutline-legendNotched-12",
                                                              "root": "PrivateNotchedOutline-root-9",
                                                            }
                                                          }
                                                          labelWidth={0}
                                                          notched={false}
                                                        >
                                                          <fieldset
                                                            aria-hidden={true}
                                                            className="PrivateNotchedOutline-root-9 MuiOutlinedInput-notchedOutline"
                                                            style={
                                                              Object {
                                                                "paddingLeft": 8,
                                                              }
                                                            }
                                                          >
                                                            <legend
                                                              className="PrivateNotchedOutline-legend-10"
                                                              style={
                                                                Object {
                                                                  "width": 0.01,
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                dangerouslySetInnerHTML={
                                                                  Object {
                                                                    "__html": "&#8203;",
                                                                  }
                                                                }
                                                              />
                                                            </legend>
                                                          </fieldset>
                                                        </ForwardRef(NotchedOutline)>
                                                      </WithStyles(ForwardRef(NotchedOutline))>
                                                    </div>
                                                  </ForwardRef(InputBase)>
                                                </WithStyles(ForwardRef(InputBase))>
                                              </ForwardRef(OutlinedInput)>
                                            </WithStyles(ForwardRef(OutlinedInput))>
                                          </div>
                                        </ForwardRef(FormControl)>
                                      </WithStyles(ForwardRef(FormControl))>
                                    </ForwardRef(TextField)>
                                  </WithStyles(ForwardRef(TextField))>
                                </div>
                              </ForwardRef(Grid)>
                            </WithStyles(ForwardRef(Grid))>
                            <Styled(MuiBox)
                              alignItems="center"
                              display="flex"
                              marginRight={2}
                            >
                              <div
                                className="MuiBox-root MuiBox-root-27"
                              >
                                <WithStyles(ForwardRef(Button))
                                  aria-controls="sort-menu"
                                  aria-haspopup="true"
                                  endIcon={<Memo(SortIcon) />}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "color": "#7F7272",
                                      "fontWeight": "400",
                                    }
                                  }
                                  variant="standard"
                                >
                                  <ForwardRef(Button)
                                    aria-controls="sort-menu"
                                    aria-haspopup="true"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiButton-colorInherit",
                                        "contained": "MuiButton-contained",
                                        "containedPrimary": "MuiButton-containedPrimary",
                                        "containedSecondary": "MuiButton-containedSecondary",
                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                        "disableElevation": "MuiButton-disableElevation",
                                        "disabled": "Mui-disabled",
                                        "endIcon": "MuiButton-endIcon",
                                        "focusVisible": "Mui-focusVisible",
                                        "fullWidth": "MuiButton-fullWidth",
                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                        "label": "MuiButton-label",
                                        "outlined": "MuiButton-outlined",
                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                        "root": "MuiButton-root",
                                        "sizeLarge": "MuiButton-sizeLarge",
                                        "sizeSmall": "MuiButton-sizeSmall",
                                        "startIcon": "MuiButton-startIcon",
                                        "text": "MuiButton-text",
                                        "textPrimary": "MuiButton-textPrimary",
                                        "textSecondary": "MuiButton-textSecondary",
                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                      }
                                    }
                                    endIcon={<Memo(SortIcon) />}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "color": "#7F7272",
                                        "fontWeight": "400",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-controls="sort-menu"
                                      aria-haspopup="true"
                                      className="MuiButton-root"
                                      component="button"
                                      disabled={false}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "color": "#7F7272",
                                          "fontWeight": "400",
                                        }
                                      }
                                      type="button"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-controls="sort-menu"
                                        aria-haspopup="true"
                                        className="MuiButton-root"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "color": "#7F7272",
                                            "fontWeight": "400",
                                          }
                                        }
                                        type="button"
                                      >
                                        <button
                                          aria-controls="sort-menu"
                                          aria-haspopup="true"
                                          className="MuiButtonBase-root MuiButton-root"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "color": "#7F7272",
                                              "fontWeight": "400",
                                            }
                                          }
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiButton-label"
                                          >
                                            <FormattedMessage
                                              defaultMessage="Sort"
                                              id="app.program_collection.sort"
                                            >
                                              Sort
                                            </FormattedMessage>
                                            <span
                                              className="MuiButton-endIcon MuiButton-iconSizeMedium"
                                            >
                                              <ForwardRef>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef>
                                            </span>
                                          </span>
                                          <WithStyles(memo)
                                            center={false}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={false}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(Button)>
                                </WithStyles(ForwardRef(Button))>
                                <WithStyles(ForwardRef(Menu))
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "center",
                                      "vertical": "bottom",
                                    }
                                  }
                                  getContentAnchorEl={null}
                                  id="sort-menu"
                                  keepMounted={true}
                                  onClick={[Function]}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "center",
                                      "vertical": "top",
                                    }
                                  }
                                >
                                  <ForwardRef(Menu)
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "center",
                                        "vertical": "bottom",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "list": "MuiMenu-list",
                                        "paper": "MuiMenu-paper",
                                      }
                                    }
                                    getContentAnchorEl={null}
                                    id="sort-menu"
                                    keepMounted={true}
                                    onClick={[Function]}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "center",
                                        "vertical": "top",
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(Popover))
                                      PaperProps={
                                        Object {
                                          "classes": Object {
                                            "root": "MuiMenu-paper",
                                          },
                                        }
                                      }
                                      anchorEl={null}
                                      anchorOrigin={
                                        Object {
                                          "horizontal": "center",
                                          "vertical": "bottom",
                                        }
                                      }
                                      getContentAnchorEl={null}
                                      id="sort-menu"
                                      keepMounted={true}
                                      onClick={[Function]}
                                      onClose={[Function]}
                                      onEntering={[Function]}
                                      open={false}
                                      transformOrigin={
                                        Object {
                                          "horizontal": "center",
                                          "vertical": "top",
                                        }
                                      }
                                      transitionDuration="auto"
                                    >
                                      <ForwardRef(Popover)
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper",
                                            },
                                          }
                                        }
                                        anchorEl={null}
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "center",
                                            "vertical": "bottom",
                                          }
                                        }
                                        classes={
                                          Object {
                                            "paper": "MuiPopover-paper",
                                            "root": "MuiPopover-root",
                                          }
                                        }
                                        getContentAnchorEl={null}
                                        id="sort-menu"
                                        keepMounted={true}
                                        onClick={[Function]}
                                        onClose={[Function]}
                                        onEntering={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "center",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <ForwardRef(Modal)
                                          BackdropProps={
                                            Object {
                                              "invisible": true,
                                            }
                                          }
                                          className="MuiPopover-root"
                                          id="sort-menu"
                                          keepMounted={true}
                                          onClick={[Function]}
                                          onClose={[Function]}
                                          open={false}
                                        >
                                          <ForwardRef(Portal)
                                            disablePortal={false}
                                          >
                                            <Portal
                                              containerInfo={
                                                <body>
                                                  <div
                                                    aria-hidden="true"
                                                    class="MuiPopover-root"
                                                    id="sort-menu"
                                                    role="presentation"
                                                    style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                  >
                                                    <div
                                                      data-test="sentinelStart"
                                                      tabindex="0"
                                                    />
                                                    <div
                                                      class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                      style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                      tabindex="-1"
                                                    >
                                                      <ul
                                                        class="MuiList-root MuiMenu-list MuiList-padding"
                                                        role="menu"
                                                        tabindex="-1"
                                                      >
                                                        <li
                                                          aria-disabled="false"
                                                          class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                          id="name"
                                                          role="menuitem"
                                                          tabindex="0"
                                                        >
                                                          <div
                                                            class="MuiListItemIcon-root"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                              />
                                                            </svg>
                                                          </div>
                                                          Name
                                                          <span
                                                            class="MuiTouchRipple-root"
                                                          />
                                                        </li>
                                                      </ul>
                                                    </div>
                                                    <div
                                                      data-test="sentinelEnd"
                                                      tabindex="0"
                                                    />
                                                  </div>
                                                  <div
                                                    aria-hidden="true"
                                                    class="MuiPopover-root"
                                                    id="sort-menu"
                                                    role="presentation"
                                                    style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                  >
                                                    <div
                                                      data-test="sentinelStart"
                                                      tabindex="0"
                                                    />
                                                    <div
                                                      class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                      style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                      tabindex="-1"
                                                    >
                                                      <ul
                                                        class="MuiList-root MuiMenu-list MuiList-padding"
                                                        role="menu"
                                                        tabindex="-1"
                                                      >
                                                        <li
                                                          aria-disabled="false"
                                                          class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                          id="name"
                                                          role="menuitem"
                                                          tabindex="0"
                                                        >
                                                          <div
                                                            class="MuiListItemIcon-root"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                              />
                                                            </svg>
                                                          </div>
                                                          Name
                                                          <span
                                                            class="MuiTouchRipple-root"
                                                          />
                                                        </li>
                                                      </ul>
                                                    </div>
                                                    <div
                                                      data-test="sentinelEnd"
                                                      tabindex="0"
                                                    />
                                                  </div>
                                                </body>
                                              }
                                            >
                                              <div
                                                className="MuiPopover-root"
                                                id="sort-menu"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="presentation"
                                                style={
                                                  Object {
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "position": "fixed",
                                                    "right": 0,
                                                    "top": 0,
                                                    "visibility": "hidden",
                                                    "zIndex": 1300,
                                                  }
                                                }
                                              >
                                                <ForwardRef(SimpleBackdrop)
                                                  invisible={true}
                                                  onClick={[Function]}
                                                  open={false}
                                                />
                                                <Unstable_TrapFocus
                                                  disableAutoFocus={false}
                                                  disableEnforceFocus={false}
                                                  disableRestoreFocus={false}
                                                  getDoc={[Function]}
                                                  isEnabled={[Function]}
                                                  open={false}
                                                >
                                                  <div
                                                    data-test="sentinelStart"
                                                    tabIndex={0}
                                                  />
                                                  <ForwardRef(Grow)
                                                    appear={true}
                                                    in={false}
                                                    onEnter={[Function]}
                                                    onEntering={[Function]}
                                                    onExited={[Function]}
                                                    tabIndex="-1"
                                                    timeout="auto"
                                                  >
                                                    <Transition
                                                      addEndListener={[Function]}
                                                      appear={true}
                                                      enter={true}
                                                      exit={true}
                                                      in={false}
                                                      mountOnEnter={false}
                                                      onEnter={[Function]}
                                                      onEntered={[Function]}
                                                      onEntering={[Function]}
                                                      onExit={[Function]}
                                                      onExited={[Function]}
                                                      onExiting={[Function]}
                                                      tabIndex="-1"
                                                      timeout={null}
                                                      unmountOnExit={false}
                                                    >
                                                      <WithStyles(ForwardRef(Paper))
                                                        className="MuiPopover-paper"
                                                        classes={
                                                          Object {
                                                            "root": "MuiMenu-paper",
                                                          }
                                                        }
                                                        elevation={8}
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "transform": "scale(0.75, 0.5625)",
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(Paper)
                                                          className="MuiPopover-paper"
                                                          classes={
                                                            Object {
                                                              "elevation0": "MuiPaper-elevation0",
                                                              "elevation1": "MuiPaper-elevation1",
                                                              "elevation10": "MuiPaper-elevation10",
                                                              "elevation11": "MuiPaper-elevation11",
                                                              "elevation12": "MuiPaper-elevation12",
                                                              "elevation13": "MuiPaper-elevation13",
                                                              "elevation14": "MuiPaper-elevation14",
                                                              "elevation15": "MuiPaper-elevation15",
                                                              "elevation16": "MuiPaper-elevation16",
                                                              "elevation17": "MuiPaper-elevation17",
                                                              "elevation18": "MuiPaper-elevation18",
                                                              "elevation19": "MuiPaper-elevation19",
                                                              "elevation2": "MuiPaper-elevation2",
                                                              "elevation20": "MuiPaper-elevation20",
                                                              "elevation21": "MuiPaper-elevation21",
                                                              "elevation22": "MuiPaper-elevation22",
                                                              "elevation23": "MuiPaper-elevation23",
                                                              "elevation24": "MuiPaper-elevation24",
                                                              "elevation3": "MuiPaper-elevation3",
                                                              "elevation4": "MuiPaper-elevation4",
                                                              "elevation5": "MuiPaper-elevation5",
                                                              "elevation6": "MuiPaper-elevation6",
                                                              "elevation7": "MuiPaper-elevation7",
                                                              "elevation8": "MuiPaper-elevation8",
                                                              "elevation9": "MuiPaper-elevation9",
                                                              "outlined": "MuiPaper-outlined",
                                                              "root": "MuiPaper-root MuiMenu-paper",
                                                              "rounded": "MuiPaper-rounded",
                                                            }
                                                          }
                                                          elevation={8}
                                                          style={
                                                            Object {
                                                              "opacity": 0,
                                                              "transform": "scale(0.75, 0.5625)",
                                                              "visibility": "hidden",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <div
                                                            className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                                "transform": "scale(0.75, 0.5625)",
                                                                "visibility": "hidden",
                                                              }
                                                            }
                                                            tabIndex="-1"
                                                          >
                                                            <ForwardRef(MenuList)
                                                              actions={
                                                                Object {
                                                                  "current": Object {
                                                                    "adjustStyleForScrollbar": [Function],
                                                                  },
                                                                }
                                                              }
                                                              autoFocus={false}
                                                              autoFocusItem={false}
                                                              className="MuiMenu-list"
                                                              onKeyDown={[Function]}
                                                              variant="selectedMenu"
                                                            >
                                                              <WithStyles(ForwardRef(List))
                                                                className="MuiMenu-list"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <ForwardRef(List)
                                                                  className="MuiMenu-list"
                                                                  classes={
                                                                    Object {
                                                                      "dense": "MuiList-dense",
                                                                      "padding": "MuiList-padding",
                                                                      "root": "MuiList-root",
                                                                      "subheader": "MuiList-subheader",
                                                                    }
                                                                  }
                                                                  onKeyDown={[Function]}
                                                                  role="menu"
                                                                  tabIndex={-1}
                                                                >
                                                                  <ul
                                                                    className="MuiList-root MuiMenu-list MuiList-padding"
                                                                    onKeyDown={[Function]}
                                                                    role="menu"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      id="name"
                                                                      key=".$.0"
                                                                      onClick={[Function]}
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(MenuItem)
                                                                        classes={
                                                                          Object {
                                                                            "dense": "MuiMenuItem-dense",
                                                                            "gutters": "MuiMenuItem-gutters",
                                                                            "root": "MuiMenuItem-root",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        id="name"
                                                                        onClick={[Function]}
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ListItem))
                                                                          button={true}
                                                                          className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiMenuItem-dense",
                                                                            }
                                                                          }
                                                                          component="li"
                                                                          disableGutters={false}
                                                                          id="name"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ListItem)
                                                                            button={true}
                                                                            className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                            classes={
                                                                              Object {
                                                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                "button": "MuiListItem-button",
                                                                                "container": "MuiListItem-container",
                                                                                "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                "disabled": "Mui-disabled",
                                                                                "divider": "MuiListItem-divider",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "gutters": "MuiListItem-gutters",
                                                                                "root": "MuiListItem-root",
                                                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                                                "selected": "Mui-selected",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disableGutters={false}
                                                                            id="name"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                              className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              component="li"
                                                                              disabled={false}
                                                                              focusVisibleClassName="Mui-focusVisible"
                                                                              id="name"
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              <ForwardRef(ButtonBase)
                                                                                className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                classes={
                                                                                  Object {
                                                                                    "disabled": "Mui-disabled",
                                                                                    "focusVisible": "Mui-focusVisible",
                                                                                    "root": "MuiButtonBase-root",
                                                                                  }
                                                                                }
                                                                                component="li"
                                                                                disabled={false}
                                                                                focusVisibleClassName="Mui-focusVisible"
                                                                                id="name"
                                                                                onClick={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={0}
                                                                              >
                                                                                <li
                                                                                  aria-disabled={false}
                                                                                  className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                  id="name"
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onDragLeave={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                  onTouchMove={[Function]}
                                                                                  onTouchStart={[Function]}
                                                                                  role="menuitem"
                                                                                  tabIndex={0}
                                                                                >
                                                                                  <WithStyles(ForwardRef(ListItemIcon))
                                                                                    key=".0"
                                                                                  >
                                                                                    <ForwardRef(ListItemIcon)
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                                                          "root": "MuiListItemIcon-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="MuiListItemIcon-root"
                                                                                      >
                                                                                        <ForwardRef
                                                                                          fontSize="small"
                                                                                        >
                                                                                          <WithStyles(ForwardRef(SvgIcon))
                                                                                            fontSize="small"
                                                                                          >
                                                                                            <ForwardRef(SvgIcon)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                  "root": "MuiSvgIcon-root",
                                                                                                }
                                                                                              }
                                                                                              fontSize="small"
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden={true}
                                                                                                className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                                                focusable="false"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </ForwardRef>
                                                                                      </div>
                                                                                    </ForwardRef(ListItemIcon)>
                                                                                  </WithStyles(ForwardRef(ListItemIcon))>
                                                                                  <FormattedMessage
                                                                                    defaultMessage="Name"
                                                                                    id="app.program_collection.name"
                                                                                    key=".1"
                                                                                  >
                                                                                    Name
                                                                                  </FormattedMessage>
                                                                                  <WithStyles(memo)
                                                                                    center={false}
                                                                                  >
                                                                                    <ForwardRef(TouchRipple)
                                                                                      center={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "child": "MuiTouchRipple-child",
                                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                          "root": "MuiTouchRipple-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTouchRipple-root"
                                                                                      >
                                                                                        <TransitionGroup
                                                                                          childFactory={[Function]}
                                                                                          component={null}
                                                                                          exit={true}
                                                                                        />
                                                                                      </span>
                                                                                    </ForwardRef(TouchRipple)>
                                                                                  </WithStyles(memo)>
                                                                                </li>
                                                                              </ForwardRef(ButtonBase)>
                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                          </ForwardRef(ListItem)>
                                                                        </WithStyles(ForwardRef(ListItem))>
                                                                      </ForwardRef(MenuItem)>
                                                                    </WithStyles(ForwardRef(MenuItem))>
                                                                  </ul>
                                                                </ForwardRef(List)>
                                                              </WithStyles(ForwardRef(List))>
                                                            </ForwardRef(MenuList)>
                                                          </div>
                                                        </ForwardRef(Paper)>
                                                      </WithStyles(ForwardRef(Paper))>
                                                    </Transition>
                                                  </ForwardRef(Grow)>
                                                  <div
                                                    data-test="sentinelEnd"
                                                    tabIndex={0}
                                                  />
                                                </Unstable_TrapFocus>
                                              </div>
                                            </Portal>
                                          </ForwardRef(Portal)>
                                        </ForwardRef(Modal)>
                                      </ForwardRef(Popover)>
                                    </WithStyles(ForwardRef(Popover))>
                                  </ForwardRef(Menu)>
                                </WithStyles(ForwardRef(Menu))>
                              </div>
                            </Styled(MuiBox)>
                            <Styled(MuiBox)>
                              <div
                                className="MuiBox-root MuiBox-root-28"
                              >
                                <WithStyles(WithStyles(ForwardRef(Autocomplete)))
                                  filterSelectedOptions={true}
                                  freeSolo={true}
                                  id="tag-select"
                                  multiple={true}
                                  onChange={[Function]}
                                  options={Array []}
                                  renderInput={[Function]}
                                  renderTags={[Function]}
                                  size="small"
                                  value={
                                    Array [
                                      "tag1",
                                      "tag2",
                                    ]
                                  }
                                >
                                  <WithStyles(ForwardRef(Autocomplete))
                                    classes={
                                      Object {
                                        "root": "WithStyles(ForwardRef(Autocomplete))-root-37",
                                      }
                                    }
                                    filterSelectedOptions={true}
                                    freeSolo={true}
                                    id="tag-select"
                                    multiple={true}
                                    onChange={[Function]}
                                    options={Array []}
                                    renderInput={[Function]}
                                    renderTags={[Function]}
                                    size="small"
                                    value={
                                      Array [
                                        "tag1",
                                        "tag2",
                                      ]
                                    }
                                  >
                                    <ForwardRef(Autocomplete)
                                      classes={
                                        Object {
                                          "clearIndicator": "MuiAutocomplete-clearIndicator",
                                          "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
                                          "endAdornment": "MuiAutocomplete-endAdornment",
                                          "focused": "Mui-focused",
                                          "fullWidth": "MuiAutocomplete-fullWidth",
                                          "groupLabel": "MuiAutocomplete-groupLabel",
                                          "groupUl": "MuiAutocomplete-groupUl",
                                          "hasClearIcon": "MuiAutocomplete-hasClearIcon",
                                          "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
                                          "input": "MuiAutocomplete-input",
                                          "inputFocused": "MuiAutocomplete-inputFocused",
                                          "inputRoot": "MuiAutocomplete-inputRoot",
                                          "listbox": "MuiAutocomplete-listbox",
                                          "loading": "MuiAutocomplete-loading",
                                          "noOptions": "MuiAutocomplete-noOptions",
                                          "option": "MuiAutocomplete-option",
                                          "paper": "MuiAutocomplete-paper",
                                          "popper": "MuiAutocomplete-popper",
                                          "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
                                          "popupIndicator": "MuiAutocomplete-popupIndicator",
                                          "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
                                          "root": "MuiAutocomplete-root WithStyles(ForwardRef(Autocomplete))-root-37",
                                          "tag": "MuiAutocomplete-tag",
                                          "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
                                        }
                                      }
                                      filterSelectedOptions={true}
                                      freeSolo={true}
                                      id="tag-select"
                                      multiple={true}
                                      onChange={[Function]}
                                      options={Array []}
                                      renderInput={[Function]}
                                      renderTags={[Function]}
                                      size="small"
                                      value={
                                        Array [
                                          "tag1",
                                          "tag2",
                                        ]
                                      }
                                    >
                                      <div
                                        aria-expanded={false}
                                        aria-owns={null}
                                        className="MuiAutocomplete-root WithStyles(ForwardRef(Autocomplete))-root-37 MuiAutocomplete-hasClearIcon"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onMouseDown={[Function]}
                                        role="combobox"
                                      >
                                        <WithStyles(ForwardRef(TextField))
                                          InputLabelProps={
                                            Object {
                                              "htmlFor": "tag-select",
                                              "id": "tag-select-label",
                                            }
                                          }
                                          InputProps={
                                            Object {
                                              "className": "MuiAutocomplete-inputRoot",
                                              "endAdornment": <div
                                                className="MuiAutocomplete-endAdornment"
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  aria-label="Clear"
                                                  className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                  onClick={[Function]}
                                                  tabIndex={-1}
                                                  title="Clear"
                                                >
                                                  <Memo
                                                    fontSize="small"
                                                  />
                                                </WithStyles(ForwardRef(IconButton))>
                                              </div>,
                                              "ref": [Function],
                                              "startAdornment": Array [
                                                <WithStyles(ForwardRef(Chip))
                                                  className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                  color="secondary"
                                                  data-tag-index={0}
                                                  disabled={false}
                                                  label="tag1"
                                                  onDelete={[Function]}
                                                  size="small"
                                                  tabIndex={-1}
                                                />,
                                                <WithStyles(ForwardRef(Chip))
                                                  className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                  color="secondary"
                                                  data-tag-index={1}
                                                  disabled={false}
                                                  label="tag2"
                                                  onDelete={[Function]}
                                                  size="small"
                                                  tabIndex={-1}
                                                />,
                                              ],
                                            }
                                          }
                                          disabled={false}
                                          fullWidth={true}
                                          id="tag-select"
                                          inputProps={
                                            Object {
                                              "aria-activedescendant": null,
                                              "aria-autocomplete": "list",
                                              "aria-controls": null,
                                              "autoCapitalize": "none",
                                              "autoComplete": "off",
                                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                              "disabled": false,
                                              "id": "tag-select",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "onMouseDown": [Function],
                                              "ref": Object {
                                                "current": <input
                                                  aria-autocomplete="list"
                                                  aria-invalid="false"
                                                  autocapitalize="none"
                                                  autocomplete="off"
                                                  class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                  id="tag-select"
                                                  spellcheck="false"
                                                  type="text"
                                                  value=""
                                                />,
                                              },
                                              "spellCheck": "false",
                                              "value": "",
                                            }
                                          }
                                          label="Filter by tag"
                                          size="small"
                                          style={
                                            Object {
                                              "border": "none",
                                            }
                                          }
                                          variant="standard"
                                        >
                                          <ForwardRef(TextField)
                                            InputLabelProps={
                                              Object {
                                                "htmlFor": "tag-select",
                                                "id": "tag-select-label",
                                              }
                                            }
                                            InputProps={
                                              Object {
                                                "className": "MuiAutocomplete-inputRoot",
                                                "endAdornment": <div
                                                  className="MuiAutocomplete-endAdornment"
                                                >
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-label="Clear"
                                                    className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                    onClick={[Function]}
                                                    tabIndex={-1}
                                                    title="Clear"
                                                  >
                                                    <Memo
                                                      fontSize="small"
                                                    />
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>,
                                                "ref": [Function],
                                                "startAdornment": Array [
                                                  <WithStyles(ForwardRef(Chip))
                                                    className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                    color="secondary"
                                                    data-tag-index={0}
                                                    disabled={false}
                                                    label="tag1"
                                                    onDelete={[Function]}
                                                    size="small"
                                                    tabIndex={-1}
                                                  />,
                                                  <WithStyles(ForwardRef(Chip))
                                                    className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                    color="secondary"
                                                    data-tag-index={1}
                                                    disabled={false}
                                                    label="tag2"
                                                    onDelete={[Function]}
                                                    size="small"
                                                    tabIndex={-1}
                                                  />,
                                                ],
                                              }
                                            }
                                            classes={
                                              Object {
                                                "root": "MuiTextField-root",
                                              }
                                            }
                                            disabled={false}
                                            fullWidth={true}
                                            id="tag-select"
                                            inputProps={
                                              Object {
                                                "aria-activedescendant": null,
                                                "aria-autocomplete": "list",
                                                "aria-controls": null,
                                                "autoCapitalize": "none",
                                                "autoComplete": "off",
                                                "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                "disabled": false,
                                                "id": "tag-select",
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onFocus": [Function],
                                                "onMouseDown": [Function],
                                                "ref": Object {
                                                  "current": <input
                                                    aria-autocomplete="list"
                                                    aria-invalid="false"
                                                    autocapitalize="none"
                                                    autocomplete="off"
                                                    class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                    id="tag-select"
                                                    spellcheck="false"
                                                    type="text"
                                                    value=""
                                                  />,
                                                },
                                                "spellCheck": "false",
                                                "value": "",
                                              }
                                            }
                                            label="Filter by tag"
                                            size="small"
                                            style={
                                              Object {
                                                "border": "none",
                                              }
                                            }
                                            variant="standard"
                                          >
                                            <WithStyles(ForwardRef(FormControl))
                                              className="MuiTextField-root"
                                              color="primary"
                                              disabled={false}
                                              error={false}
                                              fullWidth={true}
                                              required={false}
                                              size="small"
                                              style={
                                                Object {
                                                  "border": "none",
                                                }
                                              }
                                              variant="standard"
                                            >
                                              <ForwardRef(FormControl)
                                                className="MuiTextField-root"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                                color="primary"
                                                disabled={false}
                                                error={false}
                                                fullWidth={true}
                                                required={false}
                                                size="small"
                                                style={
                                                  Object {
                                                    "border": "none",
                                                  }
                                                }
                                                variant="standard"
                                              >
                                                <div
                                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                  style={
                                                    Object {
                                                      "border": "none",
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(InputLabel))
                                                    htmlFor="tag-select"
                                                    id="tag-select-label"
                                                  >
                                                    <ForwardRef(InputLabel)
                                                      classes={
                                                        Object {
                                                          "animated": "MuiInputLabel-animated",
                                                          "asterisk": "MuiInputLabel-asterisk",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "filled": "MuiInputLabel-filled",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInputLabel-formControl",
                                                          "marginDense": "MuiInputLabel-marginDense",
                                                          "outlined": "MuiInputLabel-outlined",
                                                          "required": "Mui-required",
                                                          "root": "MuiInputLabel-root",
                                                          "shrink": "MuiInputLabel-shrink",
                                                        }
                                                      }
                                                      htmlFor="tag-select"
                                                      id="tag-select-label"
                                                    >
                                                      <WithStyles(ForwardRef(FormLabel))
                                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                        classes={
                                                          Object {
                                                            "asterisk": "MuiInputLabel-asterisk",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "required": "Mui-required",
                                                          }
                                                        }
                                                        data-shrink={true}
                                                        htmlFor="tag-select"
                                                        id="tag-select-label"
                                                      >
                                                        <ForwardRef(FormLabel)
                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                          classes={
                                                            Object {
                                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "filled": "MuiFormLabel-filled",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "required": "Mui-required Mui-required",
                                                              "root": "MuiFormLabel-root",
                                                            }
                                                          }
                                                          data-shrink={true}
                                                          htmlFor="tag-select"
                                                          id="tag-select-label"
                                                        >
                                                          <label
                                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                            data-shrink={true}
                                                            htmlFor="tag-select"
                                                            id="tag-select-label"
                                                          >
                                                            Filter by tag
                                                          </label>
                                                        </ForwardRef(FormLabel)>
                                                      </WithStyles(ForwardRef(FormLabel))>
                                                    </ForwardRef(InputLabel)>
                                                  </WithStyles(ForwardRef(InputLabel))>
                                                  <WithStyles(ForwardRef(Input))
                                                    autoFocus={false}
                                                    className="MuiAutocomplete-inputRoot"
                                                    endAdornment={
                                                      <div
                                                        className="MuiAutocomplete-endAdornment"
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          aria-label="Clear"
                                                          className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                          onClick={[Function]}
                                                          tabIndex={-1}
                                                          title="Clear"
                                                        >
                                                          <Memo
                                                            fontSize="small"
                                                          />
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </div>
                                                    }
                                                    fullWidth={true}
                                                    id="tag-select"
                                                    inputProps={
                                                      Object {
                                                        "aria-activedescendant": null,
                                                        "aria-autocomplete": "list",
                                                        "aria-controls": null,
                                                        "autoCapitalize": "none",
                                                        "autoComplete": "off",
                                                        "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                        "disabled": false,
                                                        "id": "tag-select",
                                                        "onBlur": [Function],
                                                        "onChange": [Function],
                                                        "onFocus": [Function],
                                                        "onMouseDown": [Function],
                                                        "ref": Object {
                                                          "current": <input
                                                            aria-autocomplete="list"
                                                            aria-invalid="false"
                                                            autocapitalize="none"
                                                            autocomplete="off"
                                                            class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                            id="tag-select"
                                                            spellcheck="false"
                                                            type="text"
                                                            value=""
                                                          />,
                                                        },
                                                        "spellCheck": "false",
                                                        "value": "",
                                                      }
                                                    }
                                                    multiline={false}
                                                    startAdornment={
                                                      Array [
                                                        <WithStyles(ForwardRef(Chip))
                                                          className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                          color="secondary"
                                                          data-tag-index={0}
                                                          disabled={false}
                                                          label="tag1"
                                                          onDelete={[Function]}
                                                          size="small"
                                                          tabIndex={-1}
                                                        />,
                                                        <WithStyles(ForwardRef(Chip))
                                                          className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                          color="secondary"
                                                          data-tag-index={1}
                                                          disabled={false}
                                                          label="tag2"
                                                          onDelete={[Function]}
                                                          size="small"
                                                          tabIndex={-1}
                                                        />,
                                                      ]
                                                    }
                                                  >
                                                    <ForwardRef(Input)
                                                      autoFocus={false}
                                                      className="MuiAutocomplete-inputRoot"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      endAdornment={
                                                        <div
                                                          className="MuiAutocomplete-endAdornment"
                                                        >
                                                          <WithStyles(ForwardRef(IconButton))
                                                            aria-label="Clear"
                                                            className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                            onClick={[Function]}
                                                            tabIndex={-1}
                                                            title="Clear"
                                                          >
                                                            <Memo
                                                              fontSize="small"
                                                            />
                                                          </WithStyles(ForwardRef(IconButton))>
                                                        </div>
                                                      }
                                                      fullWidth={true}
                                                      id="tag-select"
                                                      inputProps={
                                                        Object {
                                                          "aria-activedescendant": null,
                                                          "aria-autocomplete": "list",
                                                          "aria-controls": null,
                                                          "autoCapitalize": "none",
                                                          "autoComplete": "off",
                                                          "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                          "disabled": false,
                                                          "id": "tag-select",
                                                          "onBlur": [Function],
                                                          "onChange": [Function],
                                                          "onFocus": [Function],
                                                          "onMouseDown": [Function],
                                                          "ref": Object {
                                                            "current": <input
                                                              aria-autocomplete="list"
                                                              aria-invalid="false"
                                                              autocapitalize="none"
                                                              autocomplete="off"
                                                              class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                              id="tag-select"
                                                              spellcheck="false"
                                                              type="text"
                                                              value=""
                                                            />,
                                                          },
                                                          "spellCheck": "false",
                                                          "value": "",
                                                        }
                                                      }
                                                      multiline={false}
                                                      startAdornment={
                                                        Array [
                                                          <WithStyles(ForwardRef(Chip))
                                                            className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                            color="secondary"
                                                            data-tag-index={0}
                                                            disabled={false}
                                                            label="tag1"
                                                            onDelete={[Function]}
                                                            size="small"
                                                            tabIndex={-1}
                                                          />,
                                                          <WithStyles(ForwardRef(Chip))
                                                            className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                            color="secondary"
                                                            data-tag-index={1}
                                                            disabled={false}
                                                            label="tag2"
                                                            onDelete={[Function]}
                                                            size="small"
                                                            tabIndex={-1}
                                                          />,
                                                        ]
                                                      }
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        autoFocus={false}
                                                        className="MuiAutocomplete-inputRoot"
                                                        classes={
                                                          Object {
                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInput-marginDense",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root MuiInput-underline",
                                                            "underline": null,
                                                          }
                                                        }
                                                        endAdornment={
                                                          <div
                                                            className="MuiAutocomplete-endAdornment"
                                                          >
                                                            <WithStyles(ForwardRef(IconButton))
                                                              aria-label="Clear"
                                                              className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                              onClick={[Function]}
                                                              tabIndex={-1}
                                                              title="Clear"
                                                            >
                                                              <Memo
                                                                fontSize="small"
                                                              />
                                                            </WithStyles(ForwardRef(IconButton))>
                                                          </div>
                                                        }
                                                        fullWidth={true}
                                                        id="tag-select"
                                                        inputComponent="input"
                                                        inputProps={
                                                          Object {
                                                            "aria-activedescendant": null,
                                                            "aria-autocomplete": "list",
                                                            "aria-controls": null,
                                                            "autoCapitalize": "none",
                                                            "autoComplete": "off",
                                                            "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                            "disabled": false,
                                                            "id": "tag-select",
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onFocus": [Function],
                                                            "onMouseDown": [Function],
                                                            "ref": Object {
                                                              "current": <input
                                                                aria-autocomplete="list"
                                                                aria-invalid="false"
                                                                autocapitalize="none"
                                                                autocomplete="off"
                                                                class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                                id="tag-select"
                                                                spellcheck="false"
                                                                type="text"
                                                                value=""
                                                              />,
                                                            },
                                                            "spellCheck": "false",
                                                            "value": "",
                                                          }
                                                        }
                                                        multiline={false}
                                                        startAdornment={
                                                          Array [
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={0}
                                                              disabled={false}
                                                              label="tag1"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            />,
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={1}
                                                              disabled={false}
                                                              label="tag2"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            />,
                                                          ]
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          autoFocus={false}
                                                          className="MuiAutocomplete-inputRoot"
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                            }
                                                          }
                                                          endAdornment={
                                                            <div
                                                              className="MuiAutocomplete-endAdornment"
                                                            >
                                                              <WithStyles(ForwardRef(IconButton))
                                                                aria-label="Clear"
                                                                className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                                title="Clear"
                                                              >
                                                                <Memo
                                                                  fontSize="small"
                                                                />
                                                              </WithStyles(ForwardRef(IconButton))>
                                                            </div>
                                                          }
                                                          fullWidth={true}
                                                          id="tag-select"
                                                          inputComponent="input"
                                                          inputProps={
                                                            Object {
                                                              "aria-activedescendant": null,
                                                              "aria-autocomplete": "list",
                                                              "aria-controls": null,
                                                              "autoCapitalize": "none",
                                                              "autoComplete": "off",
                                                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                              "disabled": false,
                                                              "id": "tag-select",
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onFocus": [Function],
                                                              "onMouseDown": [Function],
                                                              "ref": Object {
                                                                "current": <input
                                                                  aria-autocomplete="list"
                                                                  aria-invalid="false"
                                                                  autocapitalize="none"
                                                                  autocomplete="off"
                                                                  class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                                  id="tag-select"
                                                                  spellcheck="false"
                                                                  type="text"
                                                                  value=""
                                                                />,
                                                              },
                                                              "spellCheck": "false",
                                                              "value": "",
                                                            }
                                                          }
                                                          multiline={false}
                                                          startAdornment={
                                                            Array [
                                                              <WithStyles(ForwardRef(Chip))
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                color="secondary"
                                                                data-tag-index={0}
                                                                disabled={false}
                                                                label="tag1"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              />,
                                                              <WithStyles(ForwardRef(Chip))
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                color="secondary"
                                                                data-tag-index={1}
                                                                disabled={false}
                                                                label="tag2"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              />,
                                                            ]
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart MuiInputBase-adornedEnd MuiInputBase-marginDense MuiInput-marginDense"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={0}
                                                              disabled={false}
                                                              key="0"
                                                              label="tag1"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            >
                                                              <ForwardRef(Chip)
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                classes={
                                                                  Object {
                                                                    "avatar": "MuiChip-avatar",
                                                                    "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                                                                    "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                                                                    "avatarSmall": "MuiChip-avatarSmall",
                                                                    "clickable": "MuiChip-clickable",
                                                                    "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                                                                    "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                                                                    "colorPrimary": "MuiChip-colorPrimary",
                                                                    "colorSecondary": "MuiChip-colorSecondary",
                                                                    "deletable": "MuiChip-deletable",
                                                                    "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                                                                    "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                                                                    "deleteIcon": "MuiChip-deleteIcon",
                                                                    "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                                                                    "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                                                                    "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                                                                    "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                                                                    "deleteIconSmall": "MuiChip-deleteIconSmall",
                                                                    "disabled": "Mui-disabled",
                                                                    "icon": "MuiChip-icon",
                                                                    "iconColorPrimary": "MuiChip-iconColorPrimary",
                                                                    "iconColorSecondary": "MuiChip-iconColorSecondary",
                                                                    "iconSmall": "MuiChip-iconSmall",
                                                                    "label": "MuiChip-label",
                                                                    "labelSmall": "MuiChip-labelSmall",
                                                                    "outlined": "MuiChip-outlined",
                                                                    "outlinedPrimary": "MuiChip-outlinedPrimary",
                                                                    "outlinedSecondary": "MuiChip-outlinedSecondary",
                                                                    "root": "MuiChip-root",
                                                                    "sizeSmall": "MuiChip-sizeSmall",
                                                                  }
                                                                }
                                                                color="secondary"
                                                                data-tag-index={0}
                                                                disabled={false}
                                                                label="tag1"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              >
                                                                <div
                                                                  className="MuiChip-root MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall MuiChip-colorSecondary MuiChip-deletableColorSecondary MuiChip-sizeSmall MuiChip-deletable"
                                                                  data-tag-index={0}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  role="button"
                                                                  tabIndex={-1}
                                                                >
                                                                  <span
                                                                    className="MuiChip-label MuiChip-labelSmall"
                                                                  >
                                                                    tag1
                                                                  </span>
                                                                  <ForwardRef(CancelIcon)
                                                                    className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                        onClick={[Function]}
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                          focusable="false"
                                                                          onClick={[Function]}
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(CancelIcon)>
                                                                </div>
                                                              </ForwardRef(Chip)>
                                                            </WithStyles(ForwardRef(Chip))>
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={1}
                                                              disabled={false}
                                                              key="1"
                                                              label="tag2"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            >
                                                              <ForwardRef(Chip)
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                classes={
                                                                  Object {
                                                                    "avatar": "MuiChip-avatar",
                                                                    "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                                                                    "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                                                                    "avatarSmall": "MuiChip-avatarSmall",
                                                                    "clickable": "MuiChip-clickable",
                                                                    "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                                                                    "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                                                                    "colorPrimary": "MuiChip-colorPrimary",
                                                                    "colorSecondary": "MuiChip-colorSecondary",
                                                                    "deletable": "MuiChip-deletable",
                                                                    "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                                                                    "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                                                                    "deleteIcon": "MuiChip-deleteIcon",
                                                                    "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                                                                    "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                                                                    "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                                                                    "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                                                                    "deleteIconSmall": "MuiChip-deleteIconSmall",
                                                                    "disabled": "Mui-disabled",
                                                                    "icon": "MuiChip-icon",
                                                                    "iconColorPrimary": "MuiChip-iconColorPrimary",
                                                                    "iconColorSecondary": "MuiChip-iconColorSecondary",
                                                                    "iconSmall": "MuiChip-iconSmall",
                                                                    "label": "MuiChip-label",
                                                                    "labelSmall": "MuiChip-labelSmall",
                                                                    "outlined": "MuiChip-outlined",
                                                                    "outlinedPrimary": "MuiChip-outlinedPrimary",
                                                                    "outlinedSecondary": "MuiChip-outlinedSecondary",
                                                                    "root": "MuiChip-root",
                                                                    "sizeSmall": "MuiChip-sizeSmall",
                                                                  }
                                                                }
                                                                color="secondary"
                                                                data-tag-index={1}
                                                                disabled={false}
                                                                label="tag2"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              >
                                                                <div
                                                                  className="MuiChip-root MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall MuiChip-colorSecondary MuiChip-deletableColorSecondary MuiChip-sizeSmall MuiChip-deletable"
                                                                  data-tag-index={1}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  role="button"
                                                                  tabIndex={-1}
                                                                >
                                                                  <span
                                                                    className="MuiChip-label MuiChip-labelSmall"
                                                                  >
                                                                    tag2
                                                                  </span>
                                                                  <ForwardRef(CancelIcon)
                                                                    className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                        onClick={[Function]}
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                          focusable="false"
                                                                          onClick={[Function]}
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(CancelIcon)>
                                                                </div>
                                                              </ForwardRef(Chip)>
                                                            </WithStyles(ForwardRef(Chip))>
                                                            <input
                                                              aria-activedescendant={null}
                                                              aria-autocomplete="list"
                                                              aria-controls={null}
                                                              aria-invalid={false}
                                                              autoCapitalize="none"
                                                              autoComplete="off"
                                                              autoFocus={false}
                                                              className="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                              disabled={false}
                                                              id="tag-select"
                                                              onAnimationStart={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onMouseDown={[Function]}
                                                              required={false}
                                                              spellCheck="false"
                                                              type="text"
                                                              value=""
                                                            />
                                                            <div
                                                              className="MuiAutocomplete-endAdornment"
                                                            >
                                                              <WithStyles(ForwardRef(IconButton))
                                                                aria-label="Clear"
                                                                className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                                title="Clear"
                                                              >
                                                                <ForwardRef(IconButton)
                                                                  aria-label="Clear"
                                                                  className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                  classes={
                                                                    Object {
                                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                                      "label": "MuiIconButton-label",
                                                                      "root": "MuiIconButton-root",
                                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  tabIndex={-1}
                                                                  title="Clear"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    aria-label="Clear"
                                                                    centerRipple={true}
                                                                    className="MuiIconButton-root MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    onClick={[Function]}
                                                                    tabIndex={-1}
                                                                    title="Clear"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      aria-label="Clear"
                                                                      centerRipple={true}
                                                                      className="MuiIconButton-root MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusRipple={true}
                                                                      onClick={[Function]}
                                                                      tabIndex={-1}
                                                                      title="Clear"
                                                                    >
                                                                      <button
                                                                        aria-label="Clear"
                                                                        className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                        disabled={false}
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        tabIndex={-1}
                                                                        title="Clear"
                                                                        type="button"
                                                                      >
                                                                        <span
                                                                          className="MuiIconButton-label"
                                                                        >
                                                                          <ForwardRef(CloseIcon)
                                                                            fontSize="small"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              fontSize="small"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                                fontSize="small"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(CloseIcon)>
                                                                        </span>
                                                                        <WithStyles(memo)
                                                                          center={true}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={true}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </button>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(IconButton)>
                                                              </WithStyles(ForwardRef(IconButton))>
                                                            </div>
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </ForwardRef(TextField)>
                                        </WithStyles(ForwardRef(TextField))>
                                      </div>
                                    </ForwardRef(Autocomplete)>
                                  </WithStyles(ForwardRef(Autocomplete))>
                                </WithStyles(WithStyles(ForwardRef(Autocomplete)))>
                              </div>
                            </Styled(MuiBox)>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                      <WithStyles(ForwardRef(Grid))
                        className="ProgramCollection-flexitem2-3"
                        container={true}
                        item={true}
                        md={true}
                        spacing={2}
                        xs={true}
                      >
                        <ForwardRef(Grid)
                          className="ProgramCollection-flexitem2-3"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          container={true}
                          item={true}
                          md={true}
                          spacing={2}
                          xs={true}
                        >
                          <div
                            className="MuiGrid-root ProgramCollection-flexitem2-3 MuiGrid-container MuiGrid-spacing-xs-2 MuiGrid-item MuiGrid-grid-xs-true MuiGrid-grid-md-true"
                          >
                            <WithStyles(ForwardRef(Grid))
                              item={true}
                              xs={true}
                            >
                              <ForwardRef(Grid)
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                    "container": "MuiGrid-container",
                                    "direction-xs-column": "MuiGrid-direction-xs-column",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                    "grid-lg-1": "MuiGrid-grid-lg-1",
                                    "grid-lg-10": "MuiGrid-grid-lg-10",
                                    "grid-lg-11": "MuiGrid-grid-lg-11",
                                    "grid-lg-12": "MuiGrid-grid-lg-12",
                                    "grid-lg-2": "MuiGrid-grid-lg-2",
                                    "grid-lg-3": "MuiGrid-grid-lg-3",
                                    "grid-lg-4": "MuiGrid-grid-lg-4",
                                    "grid-lg-5": "MuiGrid-grid-lg-5",
                                    "grid-lg-6": "MuiGrid-grid-lg-6",
                                    "grid-lg-7": "MuiGrid-grid-lg-7",
                                    "grid-lg-8": "MuiGrid-grid-lg-8",
                                    "grid-lg-9": "MuiGrid-grid-lg-9",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                    "grid-lg-true": "MuiGrid-grid-lg-true",
                                    "grid-md-1": "MuiGrid-grid-md-1",
                                    "grid-md-10": "MuiGrid-grid-md-10",
                                    "grid-md-11": "MuiGrid-grid-md-11",
                                    "grid-md-12": "MuiGrid-grid-md-12",
                                    "grid-md-2": "MuiGrid-grid-md-2",
                                    "grid-md-3": "MuiGrid-grid-md-3",
                                    "grid-md-4": "MuiGrid-grid-md-4",
                                    "grid-md-5": "MuiGrid-grid-md-5",
                                    "grid-md-6": "MuiGrid-grid-md-6",
                                    "grid-md-7": "MuiGrid-grid-md-7",
                                    "grid-md-8": "MuiGrid-grid-md-8",
                                    "grid-md-9": "MuiGrid-grid-md-9",
                                    "grid-md-auto": "MuiGrid-grid-md-auto",
                                    "grid-md-true": "MuiGrid-grid-md-true",
                                    "grid-sm-1": "MuiGrid-grid-sm-1",
                                    "grid-sm-10": "MuiGrid-grid-sm-10",
                                    "grid-sm-11": "MuiGrid-grid-sm-11",
                                    "grid-sm-12": "MuiGrid-grid-sm-12",
                                    "grid-sm-2": "MuiGrid-grid-sm-2",
                                    "grid-sm-3": "MuiGrid-grid-sm-3",
                                    "grid-sm-4": "MuiGrid-grid-sm-4",
                                    "grid-sm-5": "MuiGrid-grid-sm-5",
                                    "grid-sm-6": "MuiGrid-grid-sm-6",
                                    "grid-sm-7": "MuiGrid-grid-sm-7",
                                    "grid-sm-8": "MuiGrid-grid-sm-8",
                                    "grid-sm-9": "MuiGrid-grid-sm-9",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                    "grid-sm-true": "MuiGrid-grid-sm-true",
                                    "grid-xl-1": "MuiGrid-grid-xl-1",
                                    "grid-xl-10": "MuiGrid-grid-xl-10",
                                    "grid-xl-11": "MuiGrid-grid-xl-11",
                                    "grid-xl-12": "MuiGrid-grid-xl-12",
                                    "grid-xl-2": "MuiGrid-grid-xl-2",
                                    "grid-xl-3": "MuiGrid-grid-xl-3",
                                    "grid-xl-4": "MuiGrid-grid-xl-4",
                                    "grid-xl-5": "MuiGrid-grid-xl-5",
                                    "grid-xl-6": "MuiGrid-grid-xl-6",
                                    "grid-xl-7": "MuiGrid-grid-xl-7",
                                    "grid-xl-8": "MuiGrid-grid-xl-8",
                                    "grid-xl-9": "MuiGrid-grid-xl-9",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                    "grid-xl-true": "MuiGrid-grid-xl-true",
                                    "grid-xs-1": "MuiGrid-grid-xs-1",
                                    "grid-xs-10": "MuiGrid-grid-xs-10",
                                    "grid-xs-11": "MuiGrid-grid-xs-11",
                                    "grid-xs-12": "MuiGrid-grid-xs-12",
                                    "grid-xs-2": "MuiGrid-grid-xs-2",
                                    "grid-xs-3": "MuiGrid-grid-xs-3",
                                    "grid-xs-4": "MuiGrid-grid-xs-4",
                                    "grid-xs-5": "MuiGrid-grid-xs-5",
                                    "grid-xs-6": "MuiGrid-grid-xs-6",
                                    "grid-xs-7": "MuiGrid-grid-xs-7",
                                    "grid-xs-8": "MuiGrid-grid-xs-8",
                                    "grid-xs-9": "MuiGrid-grid-xs-9",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                    "grid-xs-true": "MuiGrid-grid-xs-true",
                                    "item": "MuiGrid-item",
                                    "justify-xs-center": "MuiGrid-justify-xs-center",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                    "root": "MuiGrid-root",
                                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                  }
                                }
                                item={true}
                                xs={true}
                              >
                                <div
                                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-true"
                                >
                                  <Styled(MuiBox)
                                    alignItems="center"
                                    className="ProgramCollection-flexitem3-4"
                                    display="flex"
                                  >
                                    <div
                                      className="MuiBox-root MuiBox-root-30 ProgramCollection-flexitem3-4"
                                    >
                                      <Styled(MuiBox)
                                        className="ProgramCollection-flexitem4-5"
                                        marginLeft={2}
                                        marginRight={2}
                                        style={
                                          Object {
                                            "width": "130px",
                                          }
                                        }
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-31 ProgramCollection-flexitem4-5"
                                          style={
                                            Object {
                                              "width": "130px",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(Typography))
                                            display="inline"
                                            variant="subtitle2"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              display="inline"
                                              variant="subtitle2"
                                            >
                                              <h6
                                                className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-displayInline"
                                              >
                                                <FormattedMessage
                                                  defaultMessage="Free Programs Used"
                                                  id="app.program_collection.slots"
                                                >
                                                  Free Programs Used
                                                </FormattedMessage>
                                                : 
                                              </h6>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                          <WithStyles(ForwardRef(Typography))
                                            color="secondary"
                                            display="inline"
                                            variant="subtitle2"
                                          >
                                            <ForwardRef(Typography)
                                              classes={
                                                Object {
                                                  "alignCenter": "MuiTypography-alignCenter",
                                                  "alignJustify": "MuiTypography-alignJustify",
                                                  "alignLeft": "MuiTypography-alignLeft",
                                                  "alignRight": "MuiTypography-alignRight",
                                                  "body1": "MuiTypography-body1",
                                                  "body2": "MuiTypography-body2",
                                                  "button": "MuiTypography-button",
                                                  "caption": "MuiTypography-caption",
                                                  "colorError": "MuiTypography-colorError",
                                                  "colorInherit": "MuiTypography-colorInherit",
                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                  "displayBlock": "MuiTypography-displayBlock",
                                                  "displayInline": "MuiTypography-displayInline",
                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                  "h1": "MuiTypography-h1",
                                                  "h2": "MuiTypography-h2",
                                                  "h3": "MuiTypography-h3",
                                                  "h4": "MuiTypography-h4",
                                                  "h5": "MuiTypography-h5",
                                                  "h6": "MuiTypography-h6",
                                                  "noWrap": "MuiTypography-noWrap",
                                                  "overline": "MuiTypography-overline",
                                                  "paragraph": "MuiTypography-paragraph",
                                                  "root": "MuiTypography-root",
                                                  "srOnly": "MuiTypography-srOnly",
                                                  "subtitle1": "MuiTypography-subtitle1",
                                                  "subtitle2": "MuiTypography-subtitle2",
                                                }
                                              }
                                              color="secondary"
                                              display="inline"
                                              variant="subtitle2"
                                            >
                                              <h6
                                                className="MuiTypography-root MuiTypography-subtitle2 MuiTypography-colorSecondary MuiTypography-displayInline"
                                              >
                                                2/5
                                              </h6>
                                            </ForwardRef(Typography)>
                                          </WithStyles(ForwardRef(Typography))>
                                        </div>
                                      </Styled(MuiBox)>
                                      <Styled(MuiBox)
                                        className="ProgramCollection-flexitem5-6"
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-32 ProgramCollection-flexitem5-6"
                                        >
                                          <WithStyles(ForwardRef(Button))
                                            color="primary"
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            disabled={false}
                                            size="large"
                                            startIcon={<Memo(AddIcon) />}
                                            style={
                                              Object {
                                                "width": "162px",
                                              }
                                            }
                                            to="/mission-control"
                                            variant="contained"
                                          >
                                            <ForwardRef(Button)
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit",
                                                  "contained": "MuiButton-contained",
                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                  "disableElevation": "MuiButton-disableElevation",
                                                  "disabled": "Mui-disabled",
                                                  "endIcon": "MuiButton-endIcon",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "fullWidth": "MuiButton-fullWidth",
                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                  "label": "MuiButton-label",
                                                  "outlined": "MuiButton-outlined",
                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                  "root": "MuiButton-root",
                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                  "startIcon": "MuiButton-startIcon",
                                                  "text": "MuiButton-text",
                                                  "textPrimary": "MuiButton-textPrimary",
                                                  "textSecondary": "MuiButton-textSecondary",
                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                }
                                              }
                                              color="primary"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              disabled={false}
                                              size="large"
                                              startIcon={<Memo(AddIcon) />}
                                              style={
                                                Object {
                                                  "width": "162px",
                                                }
                                              }
                                              to="/mission-control"
                                              variant="contained"
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Link",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "onClick": [Function],
                                                      "replace": [Function],
                                                      "target": [Function],
                                                      "to": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                style={
                                                  Object {
                                                    "width": "162px",
                                                  }
                                                }
                                                to="/mission-control"
                                                type="button"
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "Link",
                                                      "propTypes": Object {
                                                        "innerRef": [Function],
                                                        "onClick": [Function],
                                                        "replace": [Function],
                                                        "target": [Function],
                                                        "to": [Function],
                                                      },
                                                      "render": [Function],
                                                    }
                                                  }
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  style={
                                                    Object {
                                                      "width": "162px",
                                                    }
                                                  }
                                                  to="/mission-control"
                                                  type="button"
                                                >
                                                  <Link
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    style={
                                                      Object {
                                                        "width": "162px",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                    to="/mission-control"
                                                  >
                                                    <LinkAnchor
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                                                      href="/mission-control"
                                                      navigate={[Function]}
                                                      onBlur={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      style={
                                                        Object {
                                                          "width": "162px",
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      <a
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                                                        href="/mission-control"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="button"
                                                        style={
                                                          Object {
                                                            "width": "162px",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                      >
                                                        <span
                                                          className="MuiButton-label"
                                                        >
                                                          <span
                                                            className="MuiButton-startIcon MuiButton-iconSizeLarge"
                                                          >
                                                            <ForwardRef>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                          </span>
                                                          <FormattedMessage
                                                            defaultMessage="New Program"
                                                            id="app.program_collection.new"
                                                          >
                                                            New Program
                                                          </FormattedMessage>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </a>
                                                    </LinkAnchor>
                                                  </Link>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Button)>
                                          </WithStyles(ForwardRef(Button))>
                                        </div>
                                      </Styled(MuiBox)>
                                    </div>
                                  </Styled(MuiBox)>
                                </div>
                              </ForwardRef(Grid)>
                            </WithStyles(ForwardRef(Grid))>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                       
                    </div>
                  </ForwardRef(Grid)>
                </WithStyles(ForwardRef(Grid))>
                <WithStyles(ForwardRef(Grid))
                  container={true}
                  spacing={2}
                >
                  <ForwardRef(Grid)
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                        "container": "MuiGrid-container",
                        "direction-xs-column": "MuiGrid-direction-xs-column",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                        "grid-lg-1": "MuiGrid-grid-lg-1",
                        "grid-lg-10": "MuiGrid-grid-lg-10",
                        "grid-lg-11": "MuiGrid-grid-lg-11",
                        "grid-lg-12": "MuiGrid-grid-lg-12",
                        "grid-lg-2": "MuiGrid-grid-lg-2",
                        "grid-lg-3": "MuiGrid-grid-lg-3",
                        "grid-lg-4": "MuiGrid-grid-lg-4",
                        "grid-lg-5": "MuiGrid-grid-lg-5",
                        "grid-lg-6": "MuiGrid-grid-lg-6",
                        "grid-lg-7": "MuiGrid-grid-lg-7",
                        "grid-lg-8": "MuiGrid-grid-lg-8",
                        "grid-lg-9": "MuiGrid-grid-lg-9",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                        "grid-lg-true": "MuiGrid-grid-lg-true",
                        "grid-md-1": "MuiGrid-grid-md-1",
                        "grid-md-10": "MuiGrid-grid-md-10",
                        "grid-md-11": "MuiGrid-grid-md-11",
                        "grid-md-12": "MuiGrid-grid-md-12",
                        "grid-md-2": "MuiGrid-grid-md-2",
                        "grid-md-3": "MuiGrid-grid-md-3",
                        "grid-md-4": "MuiGrid-grid-md-4",
                        "grid-md-5": "MuiGrid-grid-md-5",
                        "grid-md-6": "MuiGrid-grid-md-6",
                        "grid-md-7": "MuiGrid-grid-md-7",
                        "grid-md-8": "MuiGrid-grid-md-8",
                        "grid-md-9": "MuiGrid-grid-md-9",
                        "grid-md-auto": "MuiGrid-grid-md-auto",
                        "grid-md-true": "MuiGrid-grid-md-true",
                        "grid-sm-1": "MuiGrid-grid-sm-1",
                        "grid-sm-10": "MuiGrid-grid-sm-10",
                        "grid-sm-11": "MuiGrid-grid-sm-11",
                        "grid-sm-12": "MuiGrid-grid-sm-12",
                        "grid-sm-2": "MuiGrid-grid-sm-2",
                        "grid-sm-3": "MuiGrid-grid-sm-3",
                        "grid-sm-4": "MuiGrid-grid-sm-4",
                        "grid-sm-5": "MuiGrid-grid-sm-5",
                        "grid-sm-6": "MuiGrid-grid-sm-6",
                        "grid-sm-7": "MuiGrid-grid-sm-7",
                        "grid-sm-8": "MuiGrid-grid-sm-8",
                        "grid-sm-9": "MuiGrid-grid-sm-9",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                        "grid-sm-true": "MuiGrid-grid-sm-true",
                        "grid-xl-1": "MuiGrid-grid-xl-1",
                        "grid-xl-10": "MuiGrid-grid-xl-10",
                        "grid-xl-11": "MuiGrid-grid-xl-11",
                        "grid-xl-12": "MuiGrid-grid-xl-12",
                        "grid-xl-2": "MuiGrid-grid-xl-2",
                        "grid-xl-3": "MuiGrid-grid-xl-3",
                        "grid-xl-4": "MuiGrid-grid-xl-4",
                        "grid-xl-5": "MuiGrid-grid-xl-5",
                        "grid-xl-6": "MuiGrid-grid-xl-6",
                        "grid-xl-7": "MuiGrid-grid-xl-7",
                        "grid-xl-8": "MuiGrid-grid-xl-8",
                        "grid-xl-9": "MuiGrid-grid-xl-9",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                        "grid-xl-true": "MuiGrid-grid-xl-true",
                        "grid-xs-1": "MuiGrid-grid-xs-1",
                        "grid-xs-10": "MuiGrid-grid-xs-10",
                        "grid-xs-11": "MuiGrid-grid-xs-11",
                        "grid-xs-12": "MuiGrid-grid-xs-12",
                        "grid-xs-2": "MuiGrid-grid-xs-2",
                        "grid-xs-3": "MuiGrid-grid-xs-3",
                        "grid-xs-4": "MuiGrid-grid-xs-4",
                        "grid-xs-5": "MuiGrid-grid-xs-5",
                        "grid-xs-6": "MuiGrid-grid-xs-6",
                        "grid-xs-7": "MuiGrid-grid-xs-7",
                        "grid-xs-8": "MuiGrid-grid-xs-8",
                        "grid-xs-9": "MuiGrid-grid-xs-9",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                        "grid-xs-true": "MuiGrid-grid-xs-true",
                        "item": "MuiGrid-item",
                        "justify-xs-center": "MuiGrid-justify-xs-center",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                        "root": "MuiGrid-root",
                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                      }
                    }
                    container={true}
                    spacing={2}
                  >
                    <div
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                    >
                      <WithStyles(ForwardRef(Grid))
                        item={true}
                        key="33"
                        lg={3}
                        md={6}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          item={true}
                          lg={3}
                          md={6}
                          xs={12}
                        >
                          <div
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6 MuiGrid-grid-lg-3"
                          >
                            <WithStyles(ForwardRef(Card))
                              item={true}
                              key="33"
                              variant="outlined"
                            >
                              <ForwardRef(Card)
                                classes={
                                  Object {
                                    "root": "MuiCard-root",
                                  }
                                }
                                item={true}
                                variant="outlined"
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="MuiCard-root"
                                  elevation={1}
                                  item={true}
                                  variant="outlined"
                                >
                                  <ForwardRef(Paper)
                                    className="MuiCard-root"
                                    classes={
                                      Object {
                                        "elevation0": "MuiPaper-elevation0",
                                        "elevation1": "MuiPaper-elevation1",
                                        "elevation10": "MuiPaper-elevation10",
                                        "elevation11": "MuiPaper-elevation11",
                                        "elevation12": "MuiPaper-elevation12",
                                        "elevation13": "MuiPaper-elevation13",
                                        "elevation14": "MuiPaper-elevation14",
                                        "elevation15": "MuiPaper-elevation15",
                                        "elevation16": "MuiPaper-elevation16",
                                        "elevation17": "MuiPaper-elevation17",
                                        "elevation18": "MuiPaper-elevation18",
                                        "elevation19": "MuiPaper-elevation19",
                                        "elevation2": "MuiPaper-elevation2",
                                        "elevation20": "MuiPaper-elevation20",
                                        "elevation21": "MuiPaper-elevation21",
                                        "elevation22": "MuiPaper-elevation22",
                                        "elevation23": "MuiPaper-elevation23",
                                        "elevation24": "MuiPaper-elevation24",
                                        "elevation3": "MuiPaper-elevation3",
                                        "elevation4": "MuiPaper-elevation4",
                                        "elevation5": "MuiPaper-elevation5",
                                        "elevation6": "MuiPaper-elevation6",
                                        "elevation7": "MuiPaper-elevation7",
                                        "elevation8": "MuiPaper-elevation8",
                                        "elevation9": "MuiPaper-elevation9",
                                        "outlined": "MuiPaper-outlined",
                                        "root": "MuiPaper-root",
                                        "rounded": "MuiPaper-rounded",
                                      }
                                    }
                                    elevation={1}
                                    item={true}
                                    variant="outlined"
                                  >
                                    <div
                                      className="MuiPaper-root MuiCard-root MuiPaper-outlined MuiPaper-rounded"
                                      item={true}
                                    >
                                      <WithStyles(ForwardRef(CardActionArea))
                                        data-owned={false}
                                        id={33}
                                        onClick={[MockFunction]}
                                      >
                                        <ForwardRef(CardActionArea)
                                          classes={
                                            Object {
                                              "focusHighlight": "MuiCardActionArea-focusHighlight",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiCardActionArea-root",
                                            }
                                          }
                                          data-owned={false}
                                          id={33}
                                          onClick={[MockFunction]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            className="MuiCardActionArea-root"
                                            data-owned={false}
                                            focusVisibleClassName="Mui-focusVisible"
                                            id={33}
                                            onClick={[MockFunction]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              className="MuiCardActionArea-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              data-owned={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              id={33}
                                              onClick={[MockFunction]}
                                            >
                                              <button
                                                className="MuiButtonBase-root MuiCardActionArea-root"
                                                data-owned={false}
                                                disabled={false}
                                                id={33}
                                                onBlur={[Function]}
                                                onClick={[MockFunction]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <WithStyles(ForwardRef(CardContent))>
                                                  <ForwardRef(CardContent)
                                                    classes={
                                                      Object {
                                                        "root": "MuiCardContent-root",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="MuiCardContent-root"
                                                    >
                                                      <WithStyles(ForwardRef(Typography))
                                                        variant="h3"
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          variant="h3"
                                                        >
                                                          <h3
                                                            className="MuiTypography-root MuiTypography-h3"
                                                          >
                                                            Unnamed_Design_3
                                                          </h3>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                      <WithStyles(ForwardRef(Typography))
                                                        color="textSecondary"
                                                        variant="caption"
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          color="textSecondary"
                                                          variant="caption"
                                                        >
                                                          <span
                                                            className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                                          >
                                                            By
                                                             
                                                            admin
                                                          </span>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                    </div>
                                                  </ForwardRef(CardContent)>
                                                </WithStyles(ForwardRef(CardContent))>
                                                <span
                                                  className="MuiCardActionArea-focusHighlight"
                                                />
                                                <WithStyles(memo)
                                                  center={false}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={false}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(CardActionArea)>
                                      </WithStyles(ForwardRef(CardActionArea))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Card)>
                            </WithStyles(ForwardRef(Card))>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                      <WithStyles(ForwardRef(Grid))
                        item={true}
                        key="5"
                        lg={3}
                        md={6}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          item={true}
                          lg={3}
                          md={6}
                          xs={12}
                        >
                          <div
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6 MuiGrid-grid-lg-3"
                          >
                            <WithStyles(ForwardRef(Card))
                              item={true}
                              key="5"
                              variant="outlined"
                            >
                              <ForwardRef(Card)
                                classes={
                                  Object {
                                    "root": "MuiCard-root",
                                  }
                                }
                                item={true}
                                variant="outlined"
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="MuiCard-root"
                                  elevation={1}
                                  item={true}
                                  variant="outlined"
                                >
                                  <ForwardRef(Paper)
                                    className="MuiCard-root"
                                    classes={
                                      Object {
                                        "elevation0": "MuiPaper-elevation0",
                                        "elevation1": "MuiPaper-elevation1",
                                        "elevation10": "MuiPaper-elevation10",
                                        "elevation11": "MuiPaper-elevation11",
                                        "elevation12": "MuiPaper-elevation12",
                                        "elevation13": "MuiPaper-elevation13",
                                        "elevation14": "MuiPaper-elevation14",
                                        "elevation15": "MuiPaper-elevation15",
                                        "elevation16": "MuiPaper-elevation16",
                                        "elevation17": "MuiPaper-elevation17",
                                        "elevation18": "MuiPaper-elevation18",
                                        "elevation19": "MuiPaper-elevation19",
                                        "elevation2": "MuiPaper-elevation2",
                                        "elevation20": "MuiPaper-elevation20",
                                        "elevation21": "MuiPaper-elevation21",
                                        "elevation22": "MuiPaper-elevation22",
                                        "elevation23": "MuiPaper-elevation23",
                                        "elevation24": "MuiPaper-elevation24",
                                        "elevation3": "MuiPaper-elevation3",
                                        "elevation4": "MuiPaper-elevation4",
                                        "elevation5": "MuiPaper-elevation5",
                                        "elevation6": "MuiPaper-elevation6",
                                        "elevation7": "MuiPaper-elevation7",
                                        "elevation8": "MuiPaper-elevation8",
                                        "elevation9": "MuiPaper-elevation9",
                                        "outlined": "MuiPaper-outlined",
                                        "root": "MuiPaper-root",
                                        "rounded": "MuiPaper-rounded",
                                      }
                                    }
                                    elevation={1}
                                    item={true}
                                    variant="outlined"
                                  >
                                    <div
                                      className="MuiPaper-root MuiCard-root MuiPaper-outlined MuiPaper-rounded"
                                      item={true}
                                    >
                                      <WithStyles(ForwardRef(CardActionArea))
                                        data-owned={true}
                                        id={5}
                                        onClick={[MockFunction]}
                                      >
                                        <ForwardRef(CardActionArea)
                                          classes={
                                            Object {
                                              "focusHighlight": "MuiCardActionArea-focusHighlight",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiCardActionArea-root",
                                            }
                                          }
                                          data-owned={true}
                                          id={5}
                                          onClick={[MockFunction]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            className="MuiCardActionArea-root"
                                            data-owned={true}
                                            focusVisibleClassName="Mui-focusVisible"
                                            id={5}
                                            onClick={[MockFunction]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              className="MuiCardActionArea-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              data-owned={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              id={5}
                                              onClick={[MockFunction]}
                                            >
                                              <button
                                                className="MuiButtonBase-root MuiCardActionArea-root"
                                                data-owned={true}
                                                disabled={false}
                                                id={5}
                                                onBlur={[Function]}
                                                onClick={[MockFunction]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <WithStyles(ForwardRef(CardContent))>
                                                  <ForwardRef(CardContent)
                                                    classes={
                                                      Object {
                                                        "root": "MuiCardContent-root",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="MuiCardContent-root"
                                                    >
                                                      <WithStyles(ForwardRef(Typography))
                                                        variant="h3"
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          variant="h3"
                                                        >
                                                          <h3
                                                            className="MuiTypography-root MuiTypography-h3"
                                                          >
                                                            Unnamed_Design_2
                                                          </h3>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                    </div>
                                                  </ForwardRef(CardContent)>
                                                </WithStyles(ForwardRef(CardContent))>
                                                <span
                                                  className="MuiCardActionArea-focusHighlight"
                                                />
                                                <WithStyles(memo)
                                                  center={false}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={false}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(CardActionArea)>
                                      </WithStyles(ForwardRef(CardActionArea))>
                                      <WithStyles(ForwardRef(CardActions))>
                                        <ForwardRef(CardActions)
                                          classes={
                                            Object {
                                              "root": "MuiCardActions-root",
                                              "spacing": "MuiCardActions-spacing",
                                            }
                                          }
                                        >
                                          <div
                                            className="MuiCardActions-root MuiCardActions-spacing"
                                          >
                                            <WithStyles(WithStyles(ForwardRef(Button)))
                                              id={5}
                                              name="Unnamed_Design_2"
                                              onClick={[MockFunction]}
                                              size="small"
                                              startIcon={<Memo(DeleteIcon) />}
                                            >
                                              <WithStyles(ForwardRef(Button))
                                                classes={
                                                  Object {
                                                    "root": "WithStyles(ForwardRef(Button))-root-38",
                                                  }
                                                }
                                                id={5}
                                                name="Unnamed_Design_2"
                                                onClick={[MockFunction]}
                                                size="small"
                                                startIcon={<Memo(DeleteIcon) />}
                                              >
                                                <ForwardRef(Button)
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit",
                                                      "contained": "MuiButton-contained",
                                                      "containedPrimary": "MuiButton-containedPrimary",
                                                      "containedSecondary": "MuiButton-containedSecondary",
                                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                      "disableElevation": "MuiButton-disableElevation",
                                                      "disabled": "Mui-disabled",
                                                      "endIcon": "MuiButton-endIcon",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "fullWidth": "MuiButton-fullWidth",
                                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                      "label": "MuiButton-label",
                                                      "outlined": "MuiButton-outlined",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                      "root": "MuiButton-root WithStyles(ForwardRef(Button))-root-38",
                                                      "sizeLarge": "MuiButton-sizeLarge",
                                                      "sizeSmall": "MuiButton-sizeSmall",
                                                      "startIcon": "MuiButton-startIcon",
                                                      "text": "MuiButton-text",
                                                      "textPrimary": "MuiButton-textPrimary",
                                                      "textSecondary": "MuiButton-textSecondary",
                                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                                    }
                                                  }
                                                  id={5}
                                                  name="Unnamed_Design_2"
                                                  onClick={[MockFunction]}
                                                  size="small"
                                                  startIcon={<Memo(DeleteIcon) />}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiButton-root WithStyles(ForwardRef(Button))-root-38 MuiButton-text MuiButton-textSizeSmall MuiButton-sizeSmall"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    id={5}
                                                    name="Unnamed_Design_2"
                                                    onClick={[MockFunction]}
                                                    type="button"
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiButton-root WithStyles(ForwardRef(Button))-root-38 MuiButton-text MuiButton-textSizeSmall MuiButton-sizeSmall"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      id={5}
                                                      name="Unnamed_Design_2"
                                                      onClick={[MockFunction]}
                                                      type="button"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root MuiButton-root WithStyles(ForwardRef(Button))-root-38 MuiButton-text MuiButton-textSizeSmall MuiButton-sizeSmall"
                                                        disabled={false}
                                                        id={5}
                                                        name="Unnamed_Design_2"
                                                        onBlur={[Function]}
                                                        onClick={[MockFunction]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="MuiButton-label"
                                                        >
                                                          <span
                                                            className="MuiButton-startIcon MuiButton-iconSizeSmall"
                                                          >
                                                            <ForwardRef>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                          </span>
                                                          <FormattedMessage
                                                            defaultMessage="Delete"
                                                            id="app.program_collection.remove"
                                                          >
                                                            Delete
                                                          </FormattedMessage>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(Button)>
                                              </WithStyles(ForwardRef(Button))>
                                            </WithStyles(WithStyles(ForwardRef(Button)))>
                                          </div>
                                        </ForwardRef(CardActions)>
                                      </WithStyles(ForwardRef(CardActions))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Card)>
                            </WithStyles(ForwardRef(Card))>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                    </div>
                  </ForwardRef(Grid)>
                </WithStyles(ForwardRef(Grid))>
                <Styled(MuiBox)
                  className="ProgramCollection-paginationPaddedBox-1"
                >
                  <div
                    className="MuiBox-root MuiBox-root-34 ProgramCollection-paginationPaddedBox-1"
                  >
                    <WithStyles(ForwardRef(Pagination))
                      color="secondary"
                      count={2}
                      defaultPage={1}
                      onChange={[Function]}
                      showFirstButton={true}
                      showLastButton={true}
                    >
                      <ForwardRef(Pagination)
                        classes={
                          Object {
                            "root": "MuiPagination-root",
                            "ul": "MuiPagination-ul",
                          }
                        }
                        color="secondary"
                        count={2}
                        defaultPage={1}
                        onChange={[Function]}
                        showFirstButton={true}
                        showLastButton={true}
                      >
                        <nav
                          aria-label="pagination navigation"
                          className="MuiPagination-root"
                        >
                          <ul
                            className="MuiPagination-ul"
                          >
                            <li
                              key="0"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to first page"
                                color="secondary"
                                disabled={true}
                                onClick={[Function]}
                                page={1}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="first"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to first page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={true}
                                  onClick={[Function]}
                                  page={1}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="first"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to first page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                    disabled={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to first page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to first page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled Mui-disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={-1}
                                        type="button"
                                      >
                                        <ForwardRef(FirstPageIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(FirstPageIcon)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="1"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to previous page"
                                color="secondary"
                                disabled={true}
                                onClick={[Function]}
                                page={0}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="previous"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to previous page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={true}
                                  onClick={[Function]}
                                  page={0}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="previous"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to previous page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                    disabled={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to previous page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to previous page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled Mui-disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={-1}
                                        type="button"
                                      >
                                        <ForwardRef(NavigateBeforeIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(NavigateBeforeIcon)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="2"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-current="true"
                                aria-label="page 1"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={1}
                                selected={true}
                                shape="round"
                                size="medium"
                                type="page"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-current="true"
                                  aria-label="page 1"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={1}
                                  selected={true}
                                  shape="round"
                                  size="medium"
                                  type="page"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-current="true"
                                    aria-label="page 1"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-selected"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-current="true"
                                      aria-label="page 1"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-selected"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-current="true"
                                        aria-label="page 1"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-selected"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        1
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="3"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to page 2"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={2}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="page"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to page 2"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={2}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="page"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to page 2"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to page 2"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to page 2"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        2
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="4"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to next page"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={2}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="next"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to next page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={2}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="next"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to next page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to next page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to next page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <ForwardRef(NavigateNextIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(NavigateNextIcon)>
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="5"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to last page"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={2}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="last"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to last page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={2}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="last"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to last page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to last page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to last page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <ForwardRef(LastPageIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(LastPageIcon)>
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                          </ul>
                        </nav>
                      </ForwardRef(Pagination)>
                    </WithStyles(ForwardRef(Pagination))>
                  </div>
                </Styled(MuiBox)>
              </div>
            </ForwardRef(Container)>
          </WithStyles(ForwardRef(Container))>
        </ProgramCollection>
      </WithStyles(ProgramCollection)>
    </injectIntl(WithStyles(ProgramCollection))>
  </Router>
</BrowserRouter>
`;

exports[`The ProgramCollection component renders on the page with no errors as paid tier 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <injectIntl(WithStyles(ProgramCollection))
      label="My Programs"
      onProgramClick={[MockFunction]}
      onRemoveClick={[MockFunction]}
      onUpdate={[MockFunction]}
      programs={
        Object {
          "count": 2,
          "next": null,
          "previous": null,
          "results": Array [
            Object {
              "content": "<xml><variables></variables></xml>",
              "id": 33,
              "name": "Unnamed_Design_3",
              "user": Object {
                "username": "admin",
              },
            },
            Object {
              "content": "<xml><variables></variables></xml>",
              "id": 5,
              "name": "Unnamed_Design_2",
              "user": Object {
                "username": "testuser",
              },
            },
          ],
          "total_pages": 2,
        }
      }
      user={
        Object {
          "stats": Object {
            "block_diagram": Object {
              "count": 15,
              "limit": 5,
            },
          },
          "tier": 2,
          "username": "admin",
        }
      }
    >
      <WithStyles(ProgramCollection)
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatDateToParts": [Function],
            "formatDisplayName": [Function],
            "formatList": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatNumberToParts": [Function],
            "formatPlural": [Function],
            "formatRelativeTime": [Function],
            "formatTime": [Function],
            "formatTimeToParts": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getDisplayNames": [Function],
              "getListFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralRules": [Function],
              "getRelativeTimeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {},
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": undefined,
            "wrapRichTextChunksInFragment": undefined,
          }
        }
        label="My Programs"
        onProgramClick={[MockFunction]}
        onRemoveClick={[MockFunction]}
        onUpdate={[MockFunction]}
        programs={
          Object {
            "count": 2,
            "next": null,
            "previous": null,
            "results": Array [
              Object {
                "content": "<xml><variables></variables></xml>",
                "id": 33,
                "name": "Unnamed_Design_3",
                "user": Object {
                  "username": "admin",
                },
              },
              Object {
                "content": "<xml><variables></variables></xml>",
                "id": 5,
                "name": "Unnamed_Design_2",
                "user": Object {
                  "username": "testuser",
                },
              },
            ],
            "total_pages": 2,
          }
        }
        user={
          Object {
            "stats": Object {
              "block_diagram": Object {
                "count": 15,
                "limit": 5,
              },
            },
            "tier": 2,
            "username": "admin",
          }
        }
      >
        <ProgramCollection
          classes={
            Object {
              "flexitem1": "ProgramCollection-flexitem1-2",
              "flexitem2": "ProgramCollection-flexitem2-3",
              "flexitem3": "ProgramCollection-flexitem3-4",
              "flexitem4": "ProgramCollection-flexitem4-5",
              "flexitem5": "ProgramCollection-flexitem5-6",
              "paginationPaddedBox": "ProgramCollection-paginationPaddedBox-1",
            }
          }
          intl={
            Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatDateToParts": [Function],
              "formatDisplayName": [Function],
              "formatList": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatNumberToParts": [Function],
              "formatPlural": [Function],
              "formatRelativeTime": [Function],
              "formatTime": [Function],
              "formatTimeToParts": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getDisplayNames": [Function],
                "getListFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralRules": [Function],
                "getRelativeTimeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {},
              "onError": [Function],
              "textComponent": Symbol(react.fragment),
              "timeZone": undefined,
              "wrapRichTextChunksInFragment": undefined,
            }
          }
          label="My Programs"
          onProgramClick={[MockFunction]}
          onRemoveClick={[MockFunction]}
          onUpdate={[MockFunction]}
          programs={
            Object {
              "count": 2,
              "next": null,
              "previous": null,
              "results": Array [
                Object {
                  "content": "<xml><variables></variables></xml>",
                  "id": 33,
                  "name": "Unnamed_Design_3",
                  "user": Object {
                    "username": "admin",
                  },
                },
                Object {
                  "content": "<xml><variables></variables></xml>",
                  "id": 5,
                  "name": "Unnamed_Design_2",
                  "user": Object {
                    "username": "testuser",
                  },
                },
              ],
              "total_pages": 2,
            }
          }
          tag={
            Object {
              "tags": Array [],
            }
          }
          user={
            Object {
              "stats": Object {
                "block_diagram": Object {
                  "count": 15,
                  "limit": 5,
                },
              },
              "tier": 2,
              "username": "admin",
            }
          }
        >
          <WithStyles(ForwardRef(Container))>
            <ForwardRef(Container)
              classes={
                Object {
                  "disableGutters": "MuiContainer-disableGutters",
                  "fixed": "MuiContainer-fixed",
                  "maxWidthLg": "MuiContainer-maxWidthLg",
                  "maxWidthMd": "MuiContainer-maxWidthMd",
                  "maxWidthSm": "MuiContainer-maxWidthSm",
                  "maxWidthXl": "MuiContainer-maxWidthXl",
                  "maxWidthXs": "MuiContainer-maxWidthXs",
                  "root": "MuiContainer-root",
                }
              }
            >
              <div
                className="MuiContainer-root MuiContainer-maxWidthLg"
              >
                <WithStyles(WithStyles(ForwardRef(Grid)))
                  container={true}
                  direction="row"
                  item={true}
                  justify="space-between"
                >
                  <WithStyles(ForwardRef(Grid))
                    classes={
                      Object {
                        "root": "WithStyles(ForwardRef(Grid))-root-48",
                      }
                    }
                    container={true}
                    direction="row"
                    item={true}
                    justify="space-between"
                  >
                    <ForwardRef(Grid)
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                          "container": "MuiGrid-container",
                          "direction-xs-column": "MuiGrid-direction-xs-column",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                          "grid-lg-1": "MuiGrid-grid-lg-1",
                          "grid-lg-10": "MuiGrid-grid-lg-10",
                          "grid-lg-11": "MuiGrid-grid-lg-11",
                          "grid-lg-12": "MuiGrid-grid-lg-12",
                          "grid-lg-2": "MuiGrid-grid-lg-2",
                          "grid-lg-3": "MuiGrid-grid-lg-3",
                          "grid-lg-4": "MuiGrid-grid-lg-4",
                          "grid-lg-5": "MuiGrid-grid-lg-5",
                          "grid-lg-6": "MuiGrid-grid-lg-6",
                          "grid-lg-7": "MuiGrid-grid-lg-7",
                          "grid-lg-8": "MuiGrid-grid-lg-8",
                          "grid-lg-9": "MuiGrid-grid-lg-9",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                          "grid-lg-true": "MuiGrid-grid-lg-true",
                          "grid-md-1": "MuiGrid-grid-md-1",
                          "grid-md-10": "MuiGrid-grid-md-10",
                          "grid-md-11": "MuiGrid-grid-md-11",
                          "grid-md-12": "MuiGrid-grid-md-12",
                          "grid-md-2": "MuiGrid-grid-md-2",
                          "grid-md-3": "MuiGrid-grid-md-3",
                          "grid-md-4": "MuiGrid-grid-md-4",
                          "grid-md-5": "MuiGrid-grid-md-5",
                          "grid-md-6": "MuiGrid-grid-md-6",
                          "grid-md-7": "MuiGrid-grid-md-7",
                          "grid-md-8": "MuiGrid-grid-md-8",
                          "grid-md-9": "MuiGrid-grid-md-9",
                          "grid-md-auto": "MuiGrid-grid-md-auto",
                          "grid-md-true": "MuiGrid-grid-md-true",
                          "grid-sm-1": "MuiGrid-grid-sm-1",
                          "grid-sm-10": "MuiGrid-grid-sm-10",
                          "grid-sm-11": "MuiGrid-grid-sm-11",
                          "grid-sm-12": "MuiGrid-grid-sm-12",
                          "grid-sm-2": "MuiGrid-grid-sm-2",
                          "grid-sm-3": "MuiGrid-grid-sm-3",
                          "grid-sm-4": "MuiGrid-grid-sm-4",
                          "grid-sm-5": "MuiGrid-grid-sm-5",
                          "grid-sm-6": "MuiGrid-grid-sm-6",
                          "grid-sm-7": "MuiGrid-grid-sm-7",
                          "grid-sm-8": "MuiGrid-grid-sm-8",
                          "grid-sm-9": "MuiGrid-grid-sm-9",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                          "grid-sm-true": "MuiGrid-grid-sm-true",
                          "grid-xl-1": "MuiGrid-grid-xl-1",
                          "grid-xl-10": "MuiGrid-grid-xl-10",
                          "grid-xl-11": "MuiGrid-grid-xl-11",
                          "grid-xl-12": "MuiGrid-grid-xl-12",
                          "grid-xl-2": "MuiGrid-grid-xl-2",
                          "grid-xl-3": "MuiGrid-grid-xl-3",
                          "grid-xl-4": "MuiGrid-grid-xl-4",
                          "grid-xl-5": "MuiGrid-grid-xl-5",
                          "grid-xl-6": "MuiGrid-grid-xl-6",
                          "grid-xl-7": "MuiGrid-grid-xl-7",
                          "grid-xl-8": "MuiGrid-grid-xl-8",
                          "grid-xl-9": "MuiGrid-grid-xl-9",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                          "grid-xl-true": "MuiGrid-grid-xl-true",
                          "grid-xs-1": "MuiGrid-grid-xs-1",
                          "grid-xs-10": "MuiGrid-grid-xs-10",
                          "grid-xs-11": "MuiGrid-grid-xs-11",
                          "grid-xs-12": "MuiGrid-grid-xs-12",
                          "grid-xs-2": "MuiGrid-grid-xs-2",
                          "grid-xs-3": "MuiGrid-grid-xs-3",
                          "grid-xs-4": "MuiGrid-grid-xs-4",
                          "grid-xs-5": "MuiGrid-grid-xs-5",
                          "grid-xs-6": "MuiGrid-grid-xs-6",
                          "grid-xs-7": "MuiGrid-grid-xs-7",
                          "grid-xs-8": "MuiGrid-grid-xs-8",
                          "grid-xs-9": "MuiGrid-grid-xs-9",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                          "grid-xs-true": "MuiGrid-grid-xs-true",
                          "item": "MuiGrid-item",
                          "justify-xs-center": "MuiGrid-justify-xs-center",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                          "root": "MuiGrid-root WithStyles(ForwardRef(Grid))-root-48",
                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                        }
                      }
                      container={true}
                      direction="row"
                      item={true}
                      justify="space-between"
                    >
                      <div
                        className="MuiGrid-root WithStyles(ForwardRef(Grid))-root-48 MuiGrid-container MuiGrid-item MuiGrid-justify-xs-space-between"
                      >
                        <WithStyles(ForwardRef(Grid))
                          item={true}
                        >
                          <ForwardRef(Grid)
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                "container": "MuiGrid-container",
                                "direction-xs-column": "MuiGrid-direction-xs-column",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                "grid-lg-1": "MuiGrid-grid-lg-1",
                                "grid-lg-10": "MuiGrid-grid-lg-10",
                                "grid-lg-11": "MuiGrid-grid-lg-11",
                                "grid-lg-12": "MuiGrid-grid-lg-12",
                                "grid-lg-2": "MuiGrid-grid-lg-2",
                                "grid-lg-3": "MuiGrid-grid-lg-3",
                                "grid-lg-4": "MuiGrid-grid-lg-4",
                                "grid-lg-5": "MuiGrid-grid-lg-5",
                                "grid-lg-6": "MuiGrid-grid-lg-6",
                                "grid-lg-7": "MuiGrid-grid-lg-7",
                                "grid-lg-8": "MuiGrid-grid-lg-8",
                                "grid-lg-9": "MuiGrid-grid-lg-9",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                "grid-lg-true": "MuiGrid-grid-lg-true",
                                "grid-md-1": "MuiGrid-grid-md-1",
                                "grid-md-10": "MuiGrid-grid-md-10",
                                "grid-md-11": "MuiGrid-grid-md-11",
                                "grid-md-12": "MuiGrid-grid-md-12",
                                "grid-md-2": "MuiGrid-grid-md-2",
                                "grid-md-3": "MuiGrid-grid-md-3",
                                "grid-md-4": "MuiGrid-grid-md-4",
                                "grid-md-5": "MuiGrid-grid-md-5",
                                "grid-md-6": "MuiGrid-grid-md-6",
                                "grid-md-7": "MuiGrid-grid-md-7",
                                "grid-md-8": "MuiGrid-grid-md-8",
                                "grid-md-9": "MuiGrid-grid-md-9",
                                "grid-md-auto": "MuiGrid-grid-md-auto",
                                "grid-md-true": "MuiGrid-grid-md-true",
                                "grid-sm-1": "MuiGrid-grid-sm-1",
                                "grid-sm-10": "MuiGrid-grid-sm-10",
                                "grid-sm-11": "MuiGrid-grid-sm-11",
                                "grid-sm-12": "MuiGrid-grid-sm-12",
                                "grid-sm-2": "MuiGrid-grid-sm-2",
                                "grid-sm-3": "MuiGrid-grid-sm-3",
                                "grid-sm-4": "MuiGrid-grid-sm-4",
                                "grid-sm-5": "MuiGrid-grid-sm-5",
                                "grid-sm-6": "MuiGrid-grid-sm-6",
                                "grid-sm-7": "MuiGrid-grid-sm-7",
                                "grid-sm-8": "MuiGrid-grid-sm-8",
                                "grid-sm-9": "MuiGrid-grid-sm-9",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                "grid-sm-true": "MuiGrid-grid-sm-true",
                                "grid-xl-1": "MuiGrid-grid-xl-1",
                                "grid-xl-10": "MuiGrid-grid-xl-10",
                                "grid-xl-11": "MuiGrid-grid-xl-11",
                                "grid-xl-12": "MuiGrid-grid-xl-12",
                                "grid-xl-2": "MuiGrid-grid-xl-2",
                                "grid-xl-3": "MuiGrid-grid-xl-3",
                                "grid-xl-4": "MuiGrid-grid-xl-4",
                                "grid-xl-5": "MuiGrid-grid-xl-5",
                                "grid-xl-6": "MuiGrid-grid-xl-6",
                                "grid-xl-7": "MuiGrid-grid-xl-7",
                                "grid-xl-8": "MuiGrid-grid-xl-8",
                                "grid-xl-9": "MuiGrid-grid-xl-9",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                "grid-xl-true": "MuiGrid-grid-xl-true",
                                "grid-xs-1": "MuiGrid-grid-xs-1",
                                "grid-xs-10": "MuiGrid-grid-xs-10",
                                "grid-xs-11": "MuiGrid-grid-xs-11",
                                "grid-xs-12": "MuiGrid-grid-xs-12",
                                "grid-xs-2": "MuiGrid-grid-xs-2",
                                "grid-xs-3": "MuiGrid-grid-xs-3",
                                "grid-xs-4": "MuiGrid-grid-xs-4",
                                "grid-xs-5": "MuiGrid-grid-xs-5",
                                "grid-xs-6": "MuiGrid-grid-xs-6",
                                "grid-xs-7": "MuiGrid-grid-xs-7",
                                "grid-xs-8": "MuiGrid-grid-xs-8",
                                "grid-xs-9": "MuiGrid-grid-xs-9",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                "grid-xs-true": "MuiGrid-grid-xs-true",
                                "item": "MuiGrid-item",
                                "justify-xs-center": "MuiGrid-justify-xs-center",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                "root": "MuiGrid-root",
                                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth",
                              }
                            }
                            item={true}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item"
                            >
                              <WithStyles(WithStyles(ForwardRef(Typography)))
                                variant="h1"
                              >
                                <WithStyles(ForwardRef(Typography))
                                  classes={
                                    Object {
                                      "root": "WithStyles(ForwardRef(Typography))-root-49",
                                    }
                                  }
                                  variant="h1"
                                >
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root WithStyles(ForwardRef(Typography))-root-49",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    variant="h1"
                                  >
                                    <h1
                                      className="MuiTypography-root WithStyles(ForwardRef(Typography))-root-49 MuiTypography-h1"
                                    >
                                      My Programs
                                    </h1>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </WithStyles(WithStyles(ForwardRef(Typography)))>
                            </div>
                          </ForwardRef(Grid)>
                        </WithStyles(ForwardRef(Grid))>
                      </div>
                    </ForwardRef(Grid)>
                  </WithStyles(ForwardRef(Grid))>
                </WithStyles(WithStyles(ForwardRef(Grid)))>
                <WithStyles(ForwardRef(Grid))
                  container={true}
                  spacing={2}
                  style={
                    Object {
                      "marginBottom": "16px",
                    }
                  }
                >
                  <ForwardRef(Grid)
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                        "container": "MuiGrid-container",
                        "direction-xs-column": "MuiGrid-direction-xs-column",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                        "grid-lg-1": "MuiGrid-grid-lg-1",
                        "grid-lg-10": "MuiGrid-grid-lg-10",
                        "grid-lg-11": "MuiGrid-grid-lg-11",
                        "grid-lg-12": "MuiGrid-grid-lg-12",
                        "grid-lg-2": "MuiGrid-grid-lg-2",
                        "grid-lg-3": "MuiGrid-grid-lg-3",
                        "grid-lg-4": "MuiGrid-grid-lg-4",
                        "grid-lg-5": "MuiGrid-grid-lg-5",
                        "grid-lg-6": "MuiGrid-grid-lg-6",
                        "grid-lg-7": "MuiGrid-grid-lg-7",
                        "grid-lg-8": "MuiGrid-grid-lg-8",
                        "grid-lg-9": "MuiGrid-grid-lg-9",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                        "grid-lg-true": "MuiGrid-grid-lg-true",
                        "grid-md-1": "MuiGrid-grid-md-1",
                        "grid-md-10": "MuiGrid-grid-md-10",
                        "grid-md-11": "MuiGrid-grid-md-11",
                        "grid-md-12": "MuiGrid-grid-md-12",
                        "grid-md-2": "MuiGrid-grid-md-2",
                        "grid-md-3": "MuiGrid-grid-md-3",
                        "grid-md-4": "MuiGrid-grid-md-4",
                        "grid-md-5": "MuiGrid-grid-md-5",
                        "grid-md-6": "MuiGrid-grid-md-6",
                        "grid-md-7": "MuiGrid-grid-md-7",
                        "grid-md-8": "MuiGrid-grid-md-8",
                        "grid-md-9": "MuiGrid-grid-md-9",
                        "grid-md-auto": "MuiGrid-grid-md-auto",
                        "grid-md-true": "MuiGrid-grid-md-true",
                        "grid-sm-1": "MuiGrid-grid-sm-1",
                        "grid-sm-10": "MuiGrid-grid-sm-10",
                        "grid-sm-11": "MuiGrid-grid-sm-11",
                        "grid-sm-12": "MuiGrid-grid-sm-12",
                        "grid-sm-2": "MuiGrid-grid-sm-2",
                        "grid-sm-3": "MuiGrid-grid-sm-3",
                        "grid-sm-4": "MuiGrid-grid-sm-4",
                        "grid-sm-5": "MuiGrid-grid-sm-5",
                        "grid-sm-6": "MuiGrid-grid-sm-6",
                        "grid-sm-7": "MuiGrid-grid-sm-7",
                        "grid-sm-8": "MuiGrid-grid-sm-8",
                        "grid-sm-9": "MuiGrid-grid-sm-9",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                        "grid-sm-true": "MuiGrid-grid-sm-true",
                        "grid-xl-1": "MuiGrid-grid-xl-1",
                        "grid-xl-10": "MuiGrid-grid-xl-10",
                        "grid-xl-11": "MuiGrid-grid-xl-11",
                        "grid-xl-12": "MuiGrid-grid-xl-12",
                        "grid-xl-2": "MuiGrid-grid-xl-2",
                        "grid-xl-3": "MuiGrid-grid-xl-3",
                        "grid-xl-4": "MuiGrid-grid-xl-4",
                        "grid-xl-5": "MuiGrid-grid-xl-5",
                        "grid-xl-6": "MuiGrid-grid-xl-6",
                        "grid-xl-7": "MuiGrid-grid-xl-7",
                        "grid-xl-8": "MuiGrid-grid-xl-8",
                        "grid-xl-9": "MuiGrid-grid-xl-9",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                        "grid-xl-true": "MuiGrid-grid-xl-true",
                        "grid-xs-1": "MuiGrid-grid-xs-1",
                        "grid-xs-10": "MuiGrid-grid-xs-10",
                        "grid-xs-11": "MuiGrid-grid-xs-11",
                        "grid-xs-12": "MuiGrid-grid-xs-12",
                        "grid-xs-2": "MuiGrid-grid-xs-2",
                        "grid-xs-3": "MuiGrid-grid-xs-3",
                        "grid-xs-4": "MuiGrid-grid-xs-4",
                        "grid-xs-5": "MuiGrid-grid-xs-5",
                        "grid-xs-6": "MuiGrid-grid-xs-6",
                        "grid-xs-7": "MuiGrid-grid-xs-7",
                        "grid-xs-8": "MuiGrid-grid-xs-8",
                        "grid-xs-9": "MuiGrid-grid-xs-9",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                        "grid-xs-true": "MuiGrid-grid-xs-true",
                        "item": "MuiGrid-item",
                        "justify-xs-center": "MuiGrid-justify-xs-center",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                        "root": "MuiGrid-root",
                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                      }
                    }
                    container={true}
                    spacing={2}
                    style={
                      Object {
                        "marginBottom": "16px",
                      }
                    }
                  >
                    <div
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                      style={
                        Object {
                          "marginBottom": "16px",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Grid))
                        className="ProgramCollection-flexitem1-2"
                        container={true}
                        item={true}
                        md={8}
                        spacing={2}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          className="ProgramCollection-flexitem1-2"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          container={true}
                          item={true}
                          md={8}
                          spacing={2}
                          xs={12}
                        >
                          <div
                            className="MuiGrid-root ProgramCollection-flexitem1-2 MuiGrid-container MuiGrid-spacing-xs-2 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-8"
                          >
                            <WithStyles(ForwardRef(Grid))
                              item={true}
                              md={6}
                              xs={12}
                            >
                              <ForwardRef(Grid)
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                    "container": "MuiGrid-container",
                                    "direction-xs-column": "MuiGrid-direction-xs-column",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                    "grid-lg-1": "MuiGrid-grid-lg-1",
                                    "grid-lg-10": "MuiGrid-grid-lg-10",
                                    "grid-lg-11": "MuiGrid-grid-lg-11",
                                    "grid-lg-12": "MuiGrid-grid-lg-12",
                                    "grid-lg-2": "MuiGrid-grid-lg-2",
                                    "grid-lg-3": "MuiGrid-grid-lg-3",
                                    "grid-lg-4": "MuiGrid-grid-lg-4",
                                    "grid-lg-5": "MuiGrid-grid-lg-5",
                                    "grid-lg-6": "MuiGrid-grid-lg-6",
                                    "grid-lg-7": "MuiGrid-grid-lg-7",
                                    "grid-lg-8": "MuiGrid-grid-lg-8",
                                    "grid-lg-9": "MuiGrid-grid-lg-9",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                    "grid-lg-true": "MuiGrid-grid-lg-true",
                                    "grid-md-1": "MuiGrid-grid-md-1",
                                    "grid-md-10": "MuiGrid-grid-md-10",
                                    "grid-md-11": "MuiGrid-grid-md-11",
                                    "grid-md-12": "MuiGrid-grid-md-12",
                                    "grid-md-2": "MuiGrid-grid-md-2",
                                    "grid-md-3": "MuiGrid-grid-md-3",
                                    "grid-md-4": "MuiGrid-grid-md-4",
                                    "grid-md-5": "MuiGrid-grid-md-5",
                                    "grid-md-6": "MuiGrid-grid-md-6",
                                    "grid-md-7": "MuiGrid-grid-md-7",
                                    "grid-md-8": "MuiGrid-grid-md-8",
                                    "grid-md-9": "MuiGrid-grid-md-9",
                                    "grid-md-auto": "MuiGrid-grid-md-auto",
                                    "grid-md-true": "MuiGrid-grid-md-true",
                                    "grid-sm-1": "MuiGrid-grid-sm-1",
                                    "grid-sm-10": "MuiGrid-grid-sm-10",
                                    "grid-sm-11": "MuiGrid-grid-sm-11",
                                    "grid-sm-12": "MuiGrid-grid-sm-12",
                                    "grid-sm-2": "MuiGrid-grid-sm-2",
                                    "grid-sm-3": "MuiGrid-grid-sm-3",
                                    "grid-sm-4": "MuiGrid-grid-sm-4",
                                    "grid-sm-5": "MuiGrid-grid-sm-5",
                                    "grid-sm-6": "MuiGrid-grid-sm-6",
                                    "grid-sm-7": "MuiGrid-grid-sm-7",
                                    "grid-sm-8": "MuiGrid-grid-sm-8",
                                    "grid-sm-9": "MuiGrid-grid-sm-9",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                    "grid-sm-true": "MuiGrid-grid-sm-true",
                                    "grid-xl-1": "MuiGrid-grid-xl-1",
                                    "grid-xl-10": "MuiGrid-grid-xl-10",
                                    "grid-xl-11": "MuiGrid-grid-xl-11",
                                    "grid-xl-12": "MuiGrid-grid-xl-12",
                                    "grid-xl-2": "MuiGrid-grid-xl-2",
                                    "grid-xl-3": "MuiGrid-grid-xl-3",
                                    "grid-xl-4": "MuiGrid-grid-xl-4",
                                    "grid-xl-5": "MuiGrid-grid-xl-5",
                                    "grid-xl-6": "MuiGrid-grid-xl-6",
                                    "grid-xl-7": "MuiGrid-grid-xl-7",
                                    "grid-xl-8": "MuiGrid-grid-xl-8",
                                    "grid-xl-9": "MuiGrid-grid-xl-9",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                    "grid-xl-true": "MuiGrid-grid-xl-true",
                                    "grid-xs-1": "MuiGrid-grid-xs-1",
                                    "grid-xs-10": "MuiGrid-grid-xs-10",
                                    "grid-xs-11": "MuiGrid-grid-xs-11",
                                    "grid-xs-12": "MuiGrid-grid-xs-12",
                                    "grid-xs-2": "MuiGrid-grid-xs-2",
                                    "grid-xs-3": "MuiGrid-grid-xs-3",
                                    "grid-xs-4": "MuiGrid-grid-xs-4",
                                    "grid-xs-5": "MuiGrid-grid-xs-5",
                                    "grid-xs-6": "MuiGrid-grid-xs-6",
                                    "grid-xs-7": "MuiGrid-grid-xs-7",
                                    "grid-xs-8": "MuiGrid-grid-xs-8",
                                    "grid-xs-9": "MuiGrid-grid-xs-9",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                    "grid-xs-true": "MuiGrid-grid-xs-true",
                                    "item": "MuiGrid-item",
                                    "justify-xs-center": "MuiGrid-justify-xs-center",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                    "root": "MuiGrid-root",
                                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                  }
                                }
                                item={true}
                                md={6}
                                xs={12}
                              >
                                <div
                                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6"
                                >
                                  <WithStyles(ForwardRef(TextField))
                                    InputProps={
                                      Object {
                                        "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                          position="end"
                                        >
                                          <Memo(SearchIcon)
                                            color="disabled"
                                          />
                                        </WithStyles(ForwardRef(InputAdornment))>,
                                      }
                                    }
                                    className="prompt"
                                    fullWidth={true}
                                    icon="search"
                                    onChange={[Function]}
                                    placeholder="Search programs"
                                    size="small"
                                    style={
                                      Object {
                                        "backgroundColor": "white",
                                        "fontWeight": "500",
                                      }
                                    }
                                    variant="outlined"
                                  >
                                    <ForwardRef(TextField)
                                      InputProps={
                                        Object {
                                          "endAdornment": <WithStyles(ForwardRef(InputAdornment))
                                            position="end"
                                          >
                                            <Memo(SearchIcon)
                                              color="disabled"
                                            />
                                          </WithStyles(ForwardRef(InputAdornment))>,
                                        }
                                      }
                                      className="prompt"
                                      classes={
                                        Object {
                                          "root": "MuiTextField-root",
                                        }
                                      }
                                      fullWidth={true}
                                      icon="search"
                                      onChange={[Function]}
                                      placeholder="Search programs"
                                      size="small"
                                      style={
                                        Object {
                                          "backgroundColor": "white",
                                          "fontWeight": "500",
                                        }
                                      }
                                      variant="outlined"
                                    >
                                      <WithStyles(ForwardRef(FormControl))
                                        className="MuiTextField-root prompt"
                                        color="primary"
                                        disabled={false}
                                        error={false}
                                        fullWidth={true}
                                        icon="search"
                                        required={false}
                                        size="small"
                                        style={
                                          Object {
                                            "backgroundColor": "white",
                                            "fontWeight": "500",
                                          }
                                        }
                                        variant="outlined"
                                      >
                                        <ForwardRef(FormControl)
                                          className="MuiTextField-root prompt"
                                          classes={
                                            Object {
                                              "fullWidth": "MuiFormControl-fullWidth",
                                              "marginDense": "MuiFormControl-marginDense",
                                              "marginNormal": "MuiFormControl-marginNormal",
                                              "root": "MuiFormControl-root",
                                            }
                                          }
                                          color="primary"
                                          disabled={false}
                                          error={false}
                                          fullWidth={true}
                                          icon="search"
                                          required={false}
                                          size="small"
                                          style={
                                            Object {
                                              "backgroundColor": "white",
                                              "fontWeight": "500",
                                            }
                                          }
                                          variant="outlined"
                                        >
                                          <div
                                            className="MuiFormControl-root MuiTextField-root prompt MuiFormControl-fullWidth"
                                            icon="search"
                                            style={
                                              Object {
                                                "backgroundColor": "white",
                                                "fontWeight": "500",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(OutlinedInput))
                                              autoFocus={false}
                                              endAdornment={
                                                <WithStyles(ForwardRef(InputAdornment))
                                                  position="end"
                                                >
                                                  <Memo(SearchIcon)
                                                    color="disabled"
                                                  />
                                                </WithStyles(ForwardRef(InputAdornment))>
                                              }
                                              fullWidth={true}
                                              multiline={false}
                                              onChange={[Function]}
                                              placeholder="Search programs"
                                            >
                                              <ForwardRef(OutlinedInput)
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                    "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "input": "MuiOutlinedInput-input",
                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                    "multiline": "MuiOutlinedInput-multiline",
                                                    "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                    "root": "MuiOutlinedInput-root",
                                                  }
                                                }
                                                endAdornment={
                                                  <WithStyles(ForwardRef(InputAdornment))
                                                    position="end"
                                                  >
                                                    <Memo(SearchIcon)
                                                      color="disabled"
                                                    />
                                                  </WithStyles(ForwardRef(InputAdornment))>
                                                }
                                                fullWidth={true}
                                                multiline={false}
                                                onChange={[Function]}
                                                placeholder="Search programs"
                                              >
                                                <WithStyles(ForwardRef(InputBase))
                                                  autoFocus={false}
                                                  classes={
                                                    Object {
                                                      "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                      "adornedStart": "MuiOutlinedInput-adornedStart",
                                                      "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "error": "Mui-error",
                                                      "focused": "Mui-focused",
                                                      "input": "MuiOutlinedInput-input",
                                                      "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                      "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                      "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                      "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                      "marginDense": "MuiOutlinedInput-marginDense",
                                                      "multiline": "MuiOutlinedInput-multiline",
                                                      "notchedOutline": null,
                                                      "root": "MuiOutlinedInput-root",
                                                    }
                                                  }
                                                  endAdornment={
                                                    <WithStyles(ForwardRef(InputAdornment))
                                                      position="end"
                                                    >
                                                      <Memo(SearchIcon)
                                                        color="disabled"
                                                      />
                                                    </WithStyles(ForwardRef(InputAdornment))>
                                                  }
                                                  fullWidth={true}
                                                  inputComponent="input"
                                                  multiline={false}
                                                  onChange={[Function]}
                                                  placeholder="Search programs"
                                                  renderSuffix={[Function]}
                                                  type="text"
                                                >
                                                  <ForwardRef(InputBase)
                                                    autoFocus={false}
                                                    classes={
                                                      Object {
                                                        "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                        "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                        "disabled": "Mui-disabled Mui-disabled",
                                                        "error": "Mui-error Mui-error",
                                                        "focused": "Mui-focused Mui-focused",
                                                        "formControl": "MuiInputBase-formControl",
                                                        "fullWidth": "MuiInputBase-fullWidth",
                                                        "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                        "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                        "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                        "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                      }
                                                    }
                                                    endAdornment={
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="end"
                                                      >
                                                        <Memo(SearchIcon)
                                                          color="disabled"
                                                        />
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                    }
                                                    fullWidth={true}
                                                    inputComponent="input"
                                                    multiline={false}
                                                    onChange={[Function]}
                                                    placeholder="Search programs"
                                                    renderSuffix={[Function]}
                                                    type="text"
                                                  >
                                                    <div
                                                      className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd MuiInputBase-marginDense MuiOutlinedInput-marginDense"
                                                      onClick={[Function]}
                                                    >
                                                      <input
                                                        aria-invalid={false}
                                                        autoFocus={false}
                                                        className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense"
                                                        disabled={false}
                                                        onAnimationStart={[Function]}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        placeholder="Search programs"
                                                        required={false}
                                                        type="text"
                                                      />
                                                      <WithStyles(ForwardRef(InputAdornment))
                                                        position="end"
                                                      >
                                                        <ForwardRef(InputAdornment)
                                                          classes={
                                                            Object {
                                                              "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                              "filled": "MuiInputAdornment-filled",
                                                              "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                              "marginDense": "MuiInputAdornment-marginDense",
                                                              "positionEnd": "MuiInputAdornment-positionEnd",
                                                              "positionStart": "MuiInputAdornment-positionStart",
                                                              "root": "MuiInputAdornment-root",
                                                            }
                                                          }
                                                          position="end"
                                                        >
                                                          <div
                                                            className="MuiInputAdornment-root MuiInputAdornment-positionEnd MuiInputAdornment-marginDense"
                                                          >
                                                            <ForwardRef
                                                              color="disabled"
                                                            >
                                                              <WithStyles(ForwardRef(SvgIcon))
                                                                color="disabled"
                                                              >
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                  color="disabled"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root MuiSvgIcon-colorDisabled"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                          </div>
                                                        </ForwardRef(InputAdornment)>
                                                      </WithStyles(ForwardRef(InputAdornment))>
                                                      <WithStyles(ForwardRef(NotchedOutline))
                                                        className="MuiOutlinedInput-notchedOutline"
                                                        labelWidth={0}
                                                        notched={false}
                                                      >
                                                        <ForwardRef(NotchedOutline)
                                                          className="MuiOutlinedInput-notchedOutline"
                                                          classes={
                                                            Object {
                                                              "legend": "PrivateNotchedOutline-legend-10",
                                                              "legendLabelled": "PrivateNotchedOutline-legendLabelled-11",
                                                              "legendNotched": "PrivateNotchedOutline-legendNotched-12",
                                                              "root": "PrivateNotchedOutline-root-9",
                                                            }
                                                          }
                                                          labelWidth={0}
                                                          notched={false}
                                                        >
                                                          <fieldset
                                                            aria-hidden={true}
                                                            className="PrivateNotchedOutline-root-9 MuiOutlinedInput-notchedOutline"
                                                            style={
                                                              Object {
                                                                "paddingLeft": 8,
                                                              }
                                                            }
                                                          >
                                                            <legend
                                                              className="PrivateNotchedOutline-legend-10"
                                                              style={
                                                                Object {
                                                                  "width": 0.01,
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                dangerouslySetInnerHTML={
                                                                  Object {
                                                                    "__html": "&#8203;",
                                                                  }
                                                                }
                                                              />
                                                            </legend>
                                                          </fieldset>
                                                        </ForwardRef(NotchedOutline)>
                                                      </WithStyles(ForwardRef(NotchedOutline))>
                                                    </div>
                                                  </ForwardRef(InputBase)>
                                                </WithStyles(ForwardRef(InputBase))>
                                              </ForwardRef(OutlinedInput)>
                                            </WithStyles(ForwardRef(OutlinedInput))>
                                          </div>
                                        </ForwardRef(FormControl)>
                                      </WithStyles(ForwardRef(FormControl))>
                                    </ForwardRef(TextField)>
                                  </WithStyles(ForwardRef(TextField))>
                                </div>
                              </ForwardRef(Grid)>
                            </WithStyles(ForwardRef(Grid))>
                            <Styled(MuiBox)
                              alignItems="center"
                              display="flex"
                              marginRight={2}
                            >
                              <div
                                className="MuiBox-root MuiBox-root-41"
                              >
                                <WithStyles(ForwardRef(Button))
                                  aria-controls="sort-menu"
                                  aria-haspopup="true"
                                  endIcon={<Memo(SortIcon) />}
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "color": "#7F7272",
                                      "fontWeight": "400",
                                    }
                                  }
                                  variant="standard"
                                >
                                  <ForwardRef(Button)
                                    aria-controls="sort-menu"
                                    aria-haspopup="true"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiButton-colorInherit",
                                        "contained": "MuiButton-contained",
                                        "containedPrimary": "MuiButton-containedPrimary",
                                        "containedSecondary": "MuiButton-containedSecondary",
                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                        "disableElevation": "MuiButton-disableElevation",
                                        "disabled": "Mui-disabled",
                                        "endIcon": "MuiButton-endIcon",
                                        "focusVisible": "Mui-focusVisible",
                                        "fullWidth": "MuiButton-fullWidth",
                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                        "label": "MuiButton-label",
                                        "outlined": "MuiButton-outlined",
                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                        "root": "MuiButton-root",
                                        "sizeLarge": "MuiButton-sizeLarge",
                                        "sizeSmall": "MuiButton-sizeSmall",
                                        "startIcon": "MuiButton-startIcon",
                                        "text": "MuiButton-text",
                                        "textPrimary": "MuiButton-textPrimary",
                                        "textSecondary": "MuiButton-textSecondary",
                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                      }
                                    }
                                    endIcon={<Memo(SortIcon) />}
                                    onClick={[Function]}
                                    style={
                                      Object {
                                        "color": "#7F7272",
                                        "fontWeight": "400",
                                      }
                                    }
                                    variant="standard"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-controls="sort-menu"
                                      aria-haspopup="true"
                                      className="MuiButton-root"
                                      component="button"
                                      disabled={false}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                      style={
                                        Object {
                                          "color": "#7F7272",
                                          "fontWeight": "400",
                                        }
                                      }
                                      type="button"
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-controls="sort-menu"
                                        aria-haspopup="true"
                                        className="MuiButton-root"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        onClick={[Function]}
                                        style={
                                          Object {
                                            "color": "#7F7272",
                                            "fontWeight": "400",
                                          }
                                        }
                                        type="button"
                                      >
                                        <button
                                          aria-controls="sort-menu"
                                          aria-haspopup="true"
                                          className="MuiButtonBase-root MuiButton-root"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          style={
                                            Object {
                                              "color": "#7F7272",
                                              "fontWeight": "400",
                                            }
                                          }
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiButton-label"
                                          >
                                            <FormattedMessage
                                              defaultMessage="Sort"
                                              id="app.program_collection.sort"
                                            >
                                              Sort
                                            </FormattedMessage>
                                            <span
                                              className="MuiButton-endIcon MuiButton-iconSizeMedium"
                                            >
                                              <ForwardRef>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef>
                                            </span>
                                          </span>
                                          <WithStyles(memo)
                                            center={false}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={false}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(Button)>
                                </WithStyles(ForwardRef(Button))>
                                <WithStyles(ForwardRef(Menu))
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "center",
                                      "vertical": "bottom",
                                    }
                                  }
                                  getContentAnchorEl={null}
                                  id="sort-menu"
                                  keepMounted={true}
                                  onClick={[Function]}
                                  onClose={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "center",
                                      "vertical": "top",
                                    }
                                  }
                                >
                                  <ForwardRef(Menu)
                                    anchorEl={null}
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "center",
                                        "vertical": "bottom",
                                      }
                                    }
                                    classes={
                                      Object {
                                        "list": "MuiMenu-list",
                                        "paper": "MuiMenu-paper",
                                      }
                                    }
                                    getContentAnchorEl={null}
                                    id="sort-menu"
                                    keepMounted={true}
                                    onClick={[Function]}
                                    onClose={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "center",
                                        "vertical": "top",
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(Popover))
                                      PaperProps={
                                        Object {
                                          "classes": Object {
                                            "root": "MuiMenu-paper",
                                          },
                                        }
                                      }
                                      anchorEl={null}
                                      anchorOrigin={
                                        Object {
                                          "horizontal": "center",
                                          "vertical": "bottom",
                                        }
                                      }
                                      getContentAnchorEl={null}
                                      id="sort-menu"
                                      keepMounted={true}
                                      onClick={[Function]}
                                      onClose={[Function]}
                                      onEntering={[Function]}
                                      open={false}
                                      transformOrigin={
                                        Object {
                                          "horizontal": "center",
                                          "vertical": "top",
                                        }
                                      }
                                      transitionDuration="auto"
                                    >
                                      <ForwardRef(Popover)
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper",
                                            },
                                          }
                                        }
                                        anchorEl={null}
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "center",
                                            "vertical": "bottom",
                                          }
                                        }
                                        classes={
                                          Object {
                                            "paper": "MuiPopover-paper",
                                            "root": "MuiPopover-root",
                                          }
                                        }
                                        getContentAnchorEl={null}
                                        id="sort-menu"
                                        keepMounted={true}
                                        onClick={[Function]}
                                        onClose={[Function]}
                                        onEntering={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "center",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <ForwardRef(Modal)
                                          BackdropProps={
                                            Object {
                                              "invisible": true,
                                            }
                                          }
                                          className="MuiPopover-root"
                                          id="sort-menu"
                                          keepMounted={true}
                                          onClick={[Function]}
                                          onClose={[Function]}
                                          open={false}
                                        >
                                          <ForwardRef(Portal)
                                            disablePortal={false}
                                          >
                                            <Portal
                                              containerInfo={
                                                <body>
                                                  <div
                                                    aria-hidden="true"
                                                    class="MuiPopover-root"
                                                    id="sort-menu"
                                                    role="presentation"
                                                    style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                  >
                                                    <div
                                                      data-test="sentinelStart"
                                                      tabindex="0"
                                                    />
                                                    <div
                                                      class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                      style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                      tabindex="-1"
                                                    >
                                                      <ul
                                                        class="MuiList-root MuiMenu-list MuiList-padding"
                                                        role="menu"
                                                        tabindex="-1"
                                                      >
                                                        <li
                                                          aria-disabled="false"
                                                          class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                          id="name"
                                                          role="menuitem"
                                                          tabindex="0"
                                                        >
                                                          <div
                                                            class="MuiListItemIcon-root"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                              />
                                                            </svg>
                                                          </div>
                                                          Name
                                                          <span
                                                            class="MuiTouchRipple-root"
                                                          />
                                                        </li>
                                                      </ul>
                                                    </div>
                                                    <div
                                                      data-test="sentinelEnd"
                                                      tabindex="0"
                                                    />
                                                  </div>
                                                  <div
                                                    aria-hidden="true"
                                                    class="MuiPopover-root"
                                                    id="sort-menu"
                                                    role="presentation"
                                                    style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                  >
                                                    <div
                                                      data-test="sentinelStart"
                                                      tabindex="0"
                                                    />
                                                    <div
                                                      class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                      style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                      tabindex="-1"
                                                    >
                                                      <ul
                                                        class="MuiList-root MuiMenu-list MuiList-padding"
                                                        role="menu"
                                                        tabindex="-1"
                                                      >
                                                        <li
                                                          aria-disabled="false"
                                                          class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                          id="name"
                                                          role="menuitem"
                                                          tabindex="0"
                                                        >
                                                          <div
                                                            class="MuiListItemIcon-root"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                              />
                                                            </svg>
                                                          </div>
                                                          Name
                                                          <span
                                                            class="MuiTouchRipple-root"
                                                          />
                                                        </li>
                                                      </ul>
                                                    </div>
                                                    <div
                                                      data-test="sentinelEnd"
                                                      tabindex="0"
                                                    />
                                                  </div>
                                                  <div
                                                    aria-hidden="true"
                                                    class="MuiPopover-root"
                                                    id="sort-menu"
                                                    role="presentation"
                                                    style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                  >
                                                    <div
                                                      data-test="sentinelStart"
                                                      tabindex="0"
                                                    />
                                                    <div
                                                      class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                      style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                      tabindex="-1"
                                                    >
                                                      <ul
                                                        class="MuiList-root MuiMenu-list MuiList-padding"
                                                        role="menu"
                                                        tabindex="-1"
                                                      >
                                                        <li
                                                          aria-disabled="false"
                                                          class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                          id="name"
                                                          role="menuitem"
                                                          tabindex="0"
                                                        >
                                                          <div
                                                            class="MuiListItemIcon-root"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                              focusable="false"
                                                              viewBox="0 0 24 24"
                                                            >
                                                              <path
                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                              />
                                                            </svg>
                                                          </div>
                                                          Name
                                                          <span
                                                            class="MuiTouchRipple-root"
                                                          />
                                                        </li>
                                                      </ul>
                                                    </div>
                                                    <div
                                                      data-test="sentinelEnd"
                                                      tabindex="0"
                                                    />
                                                  </div>
                                                </body>
                                              }
                                            >
                                              <div
                                                className="MuiPopover-root"
                                                id="sort-menu"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="presentation"
                                                style={
                                                  Object {
                                                    "bottom": 0,
                                                    "left": 0,
                                                    "position": "fixed",
                                                    "right": 0,
                                                    "top": 0,
                                                    "visibility": "hidden",
                                                    "zIndex": 1300,
                                                  }
                                                }
                                              >
                                                <ForwardRef(SimpleBackdrop)
                                                  invisible={true}
                                                  onClick={[Function]}
                                                  open={false}
                                                />
                                                <Unstable_TrapFocus
                                                  disableAutoFocus={false}
                                                  disableEnforceFocus={false}
                                                  disableRestoreFocus={false}
                                                  getDoc={[Function]}
                                                  isEnabled={[Function]}
                                                  open={false}
                                                >
                                                  <div
                                                    data-test="sentinelStart"
                                                    tabIndex={0}
                                                  />
                                                  <ForwardRef(Grow)
                                                    appear={true}
                                                    in={false}
                                                    onEnter={[Function]}
                                                    onEntering={[Function]}
                                                    onExited={[Function]}
                                                    tabIndex="-1"
                                                    timeout="auto"
                                                  >
                                                    <Transition
                                                      addEndListener={[Function]}
                                                      appear={true}
                                                      enter={true}
                                                      exit={true}
                                                      in={false}
                                                      mountOnEnter={false}
                                                      onEnter={[Function]}
                                                      onEntered={[Function]}
                                                      onEntering={[Function]}
                                                      onExit={[Function]}
                                                      onExited={[Function]}
                                                      onExiting={[Function]}
                                                      tabIndex="-1"
                                                      timeout={null}
                                                      unmountOnExit={false}
                                                    >
                                                      <WithStyles(ForwardRef(Paper))
                                                        className="MuiPopover-paper"
                                                        classes={
                                                          Object {
                                                            "root": "MuiMenu-paper",
                                                          }
                                                        }
                                                        elevation={8}
                                                        style={
                                                          Object {
                                                            "opacity": 0,
                                                            "transform": "scale(0.75, 0.5625)",
                                                            "visibility": "hidden",
                                                          }
                                                        }
                                                        tabIndex="-1"
                                                      >
                                                        <ForwardRef(Paper)
                                                          className="MuiPopover-paper"
                                                          classes={
                                                            Object {
                                                              "elevation0": "MuiPaper-elevation0",
                                                              "elevation1": "MuiPaper-elevation1",
                                                              "elevation10": "MuiPaper-elevation10",
                                                              "elevation11": "MuiPaper-elevation11",
                                                              "elevation12": "MuiPaper-elevation12",
                                                              "elevation13": "MuiPaper-elevation13",
                                                              "elevation14": "MuiPaper-elevation14",
                                                              "elevation15": "MuiPaper-elevation15",
                                                              "elevation16": "MuiPaper-elevation16",
                                                              "elevation17": "MuiPaper-elevation17",
                                                              "elevation18": "MuiPaper-elevation18",
                                                              "elevation19": "MuiPaper-elevation19",
                                                              "elevation2": "MuiPaper-elevation2",
                                                              "elevation20": "MuiPaper-elevation20",
                                                              "elevation21": "MuiPaper-elevation21",
                                                              "elevation22": "MuiPaper-elevation22",
                                                              "elevation23": "MuiPaper-elevation23",
                                                              "elevation24": "MuiPaper-elevation24",
                                                              "elevation3": "MuiPaper-elevation3",
                                                              "elevation4": "MuiPaper-elevation4",
                                                              "elevation5": "MuiPaper-elevation5",
                                                              "elevation6": "MuiPaper-elevation6",
                                                              "elevation7": "MuiPaper-elevation7",
                                                              "elevation8": "MuiPaper-elevation8",
                                                              "elevation9": "MuiPaper-elevation9",
                                                              "outlined": "MuiPaper-outlined",
                                                              "root": "MuiPaper-root MuiMenu-paper",
                                                              "rounded": "MuiPaper-rounded",
                                                            }
                                                          }
                                                          elevation={8}
                                                          style={
                                                            Object {
                                                              "opacity": 0,
                                                              "transform": "scale(0.75, 0.5625)",
                                                              "visibility": "hidden",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <div
                                                            className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                                "transform": "scale(0.75, 0.5625)",
                                                                "visibility": "hidden",
                                                              }
                                                            }
                                                            tabIndex="-1"
                                                          >
                                                            <ForwardRef(MenuList)
                                                              actions={
                                                                Object {
                                                                  "current": Object {
                                                                    "adjustStyleForScrollbar": [Function],
                                                                  },
                                                                }
                                                              }
                                                              autoFocus={false}
                                                              autoFocusItem={false}
                                                              className="MuiMenu-list"
                                                              onKeyDown={[Function]}
                                                              variant="selectedMenu"
                                                            >
                                                              <WithStyles(ForwardRef(List))
                                                                className="MuiMenu-list"
                                                                onKeyDown={[Function]}
                                                                role="menu"
                                                                tabIndex={-1}
                                                              >
                                                                <ForwardRef(List)
                                                                  className="MuiMenu-list"
                                                                  classes={
                                                                    Object {
                                                                      "dense": "MuiList-dense",
                                                                      "padding": "MuiList-padding",
                                                                      "root": "MuiList-root",
                                                                      "subheader": "MuiList-subheader",
                                                                    }
                                                                  }
                                                                  onKeyDown={[Function]}
                                                                  role="menu"
                                                                  tabIndex={-1}
                                                                >
                                                                  <ul
                                                                    className="MuiList-root MuiMenu-list MuiList-padding"
                                                                    onKeyDown={[Function]}
                                                                    role="menu"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <WithStyles(ForwardRef(MenuItem))
                                                                      id="name"
                                                                      key=".$.0"
                                                                      onClick={[Function]}
                                                                      tabIndex={0}
                                                                    >
                                                                      <ForwardRef(MenuItem)
                                                                        classes={
                                                                          Object {
                                                                            "dense": "MuiMenuItem-dense",
                                                                            "gutters": "MuiMenuItem-gutters",
                                                                            "root": "MuiMenuItem-root",
                                                                            "selected": "Mui-selected",
                                                                          }
                                                                        }
                                                                        id="name"
                                                                        onClick={[Function]}
                                                                        tabIndex={0}
                                                                      >
                                                                        <WithStyles(ForwardRef(ListItem))
                                                                          button={true}
                                                                          className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiMenuItem-dense",
                                                                            }
                                                                          }
                                                                          component="li"
                                                                          disableGutters={false}
                                                                          id="name"
                                                                          onClick={[Function]}
                                                                          role="menuitem"
                                                                          tabIndex={0}
                                                                        >
                                                                          <ForwardRef(ListItem)
                                                                            button={true}
                                                                            className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                            classes={
                                                                              Object {
                                                                                "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                "button": "MuiListItem-button",
                                                                                "container": "MuiListItem-container",
                                                                                "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                "disabled": "Mui-disabled",
                                                                                "divider": "MuiListItem-divider",
                                                                                "focusVisible": "Mui-focusVisible",
                                                                                "gutters": "MuiListItem-gutters",
                                                                                "root": "MuiListItem-root",
                                                                                "secondaryAction": "MuiListItem-secondaryAction",
                                                                                "selected": "Mui-selected",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disableGutters={false}
                                                                            id="name"
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <WithStyles(ForwardRef(ButtonBase))
                                                                              className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                              component="li"
                                                                              disabled={false}
                                                                              focusVisibleClassName="Mui-focusVisible"
                                                                              id="name"
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              <ForwardRef(ButtonBase)
                                                                                className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                classes={
                                                                                  Object {
                                                                                    "disabled": "Mui-disabled",
                                                                                    "focusVisible": "Mui-focusVisible",
                                                                                    "root": "MuiButtonBase-root",
                                                                                  }
                                                                                }
                                                                                component="li"
                                                                                disabled={false}
                                                                                focusVisibleClassName="Mui-focusVisible"
                                                                                id="name"
                                                                                onClick={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={0}
                                                                              >
                                                                                <li
                                                                                  aria-disabled={false}
                                                                                  className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                  id="name"
                                                                                  onBlur={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onDragLeave={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onKeyUp={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onMouseLeave={[Function]}
                                                                                  onMouseUp={[Function]}
                                                                                  onTouchEnd={[Function]}
                                                                                  onTouchMove={[Function]}
                                                                                  onTouchStart={[Function]}
                                                                                  role="menuitem"
                                                                                  tabIndex={0}
                                                                                >
                                                                                  <WithStyles(ForwardRef(ListItemIcon))
                                                                                    key=".0"
                                                                                  >
                                                                                    <ForwardRef(ListItemIcon)
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                                                          "root": "MuiListItemIcon-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <div
                                                                                        className="MuiListItemIcon-root"
                                                                                      >
                                                                                        <ForwardRef
                                                                                          fontSize="small"
                                                                                        >
                                                                                          <WithStyles(ForwardRef(SvgIcon))
                                                                                            fontSize="small"
                                                                                          >
                                                                                            <ForwardRef(SvgIcon)
                                                                                              classes={
                                                                                                Object {
                                                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                  "root": "MuiSvgIcon-root",
                                                                                                }
                                                                                              }
                                                                                              fontSize="small"
                                                                                            >
                                                                                              <svg
                                                                                                aria-hidden={true}
                                                                                                className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                                                focusable="false"
                                                                                                viewBox="0 0 24 24"
                                                                                              >
                                                                                                <path
                                                                                                  d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                                                />
                                                                                              </svg>
                                                                                            </ForwardRef(SvgIcon)>
                                                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                                                        </ForwardRef>
                                                                                      </div>
                                                                                    </ForwardRef(ListItemIcon)>
                                                                                  </WithStyles(ForwardRef(ListItemIcon))>
                                                                                  <FormattedMessage
                                                                                    defaultMessage="Name"
                                                                                    id="app.program_collection.name"
                                                                                    key=".1"
                                                                                  >
                                                                                    Name
                                                                                  </FormattedMessage>
                                                                                  <WithStyles(memo)
                                                                                    center={false}
                                                                                  >
                                                                                    <ForwardRef(TouchRipple)
                                                                                      center={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "child": "MuiTouchRipple-child",
                                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                          "root": "MuiTouchRipple-root",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <span
                                                                                        className="MuiTouchRipple-root"
                                                                                      >
                                                                                        <TransitionGroup
                                                                                          childFactory={[Function]}
                                                                                          component={null}
                                                                                          exit={true}
                                                                                        />
                                                                                      </span>
                                                                                    </ForwardRef(TouchRipple)>
                                                                                  </WithStyles(memo)>
                                                                                </li>
                                                                              </ForwardRef(ButtonBase)>
                                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                                          </ForwardRef(ListItem)>
                                                                        </WithStyles(ForwardRef(ListItem))>
                                                                      </ForwardRef(MenuItem)>
                                                                    </WithStyles(ForwardRef(MenuItem))>
                                                                  </ul>
                                                                </ForwardRef(List)>
                                                              </WithStyles(ForwardRef(List))>
                                                            </ForwardRef(MenuList)>
                                                          </div>
                                                        </ForwardRef(Paper)>
                                                      </WithStyles(ForwardRef(Paper))>
                                                    </Transition>
                                                  </ForwardRef(Grow)>
                                                  <div
                                                    data-test="sentinelEnd"
                                                    tabIndex={0}
                                                  />
                                                </Unstable_TrapFocus>
                                              </div>
                                            </Portal>
                                          </ForwardRef(Portal)>
                                        </ForwardRef(Modal)>
                                      </ForwardRef(Popover)>
                                    </WithStyles(ForwardRef(Popover))>
                                  </ForwardRef(Menu)>
                                </WithStyles(ForwardRef(Menu))>
                              </div>
                            </Styled(MuiBox)>
                            <Styled(MuiBox)>
                              <div
                                className="MuiBox-root MuiBox-root-42"
                              >
                                <WithStyles(WithStyles(ForwardRef(Autocomplete)))
                                  filterSelectedOptions={true}
                                  freeSolo={true}
                                  id="tag-select"
                                  multiple={true}
                                  onChange={[Function]}
                                  options={Array []}
                                  renderInput={[Function]}
                                  renderTags={[Function]}
                                  size="small"
                                  value={
                                    Array [
                                      "tag1",
                                      "tag2",
                                    ]
                                  }
                                >
                                  <WithStyles(ForwardRef(Autocomplete))
                                    classes={
                                      Object {
                                        "root": "WithStyles(ForwardRef(Autocomplete))-root-50",
                                      }
                                    }
                                    filterSelectedOptions={true}
                                    freeSolo={true}
                                    id="tag-select"
                                    multiple={true}
                                    onChange={[Function]}
                                    options={Array []}
                                    renderInput={[Function]}
                                    renderTags={[Function]}
                                    size="small"
                                    value={
                                      Array [
                                        "tag1",
                                        "tag2",
                                      ]
                                    }
                                  >
                                    <ForwardRef(Autocomplete)
                                      classes={
                                        Object {
                                          "clearIndicator": "MuiAutocomplete-clearIndicator",
                                          "clearIndicatorDirty": "MuiAutocomplete-clearIndicatorDirty",
                                          "endAdornment": "MuiAutocomplete-endAdornment",
                                          "focused": "Mui-focused",
                                          "fullWidth": "MuiAutocomplete-fullWidth",
                                          "groupLabel": "MuiAutocomplete-groupLabel",
                                          "groupUl": "MuiAutocomplete-groupUl",
                                          "hasClearIcon": "MuiAutocomplete-hasClearIcon",
                                          "hasPopupIcon": "MuiAutocomplete-hasPopupIcon",
                                          "input": "MuiAutocomplete-input",
                                          "inputFocused": "MuiAutocomplete-inputFocused",
                                          "inputRoot": "MuiAutocomplete-inputRoot",
                                          "listbox": "MuiAutocomplete-listbox",
                                          "loading": "MuiAutocomplete-loading",
                                          "noOptions": "MuiAutocomplete-noOptions",
                                          "option": "MuiAutocomplete-option",
                                          "paper": "MuiAutocomplete-paper",
                                          "popper": "MuiAutocomplete-popper",
                                          "popperDisablePortal": "MuiAutocomplete-popperDisablePortal",
                                          "popupIndicator": "MuiAutocomplete-popupIndicator",
                                          "popupIndicatorOpen": "MuiAutocomplete-popupIndicatorOpen",
                                          "root": "MuiAutocomplete-root WithStyles(ForwardRef(Autocomplete))-root-50",
                                          "tag": "MuiAutocomplete-tag",
                                          "tagSizeSmall": "MuiAutocomplete-tagSizeSmall",
                                        }
                                      }
                                      filterSelectedOptions={true}
                                      freeSolo={true}
                                      id="tag-select"
                                      multiple={true}
                                      onChange={[Function]}
                                      options={Array []}
                                      renderInput={[Function]}
                                      renderTags={[Function]}
                                      size="small"
                                      value={
                                        Array [
                                          "tag1",
                                          "tag2",
                                        ]
                                      }
                                    >
                                      <div
                                        aria-expanded={false}
                                        aria-owns={null}
                                        className="MuiAutocomplete-root WithStyles(ForwardRef(Autocomplete))-root-50 MuiAutocomplete-hasClearIcon"
                                        onClick={[Function]}
                                        onKeyDown={[Function]}
                                        onMouseDown={[Function]}
                                        role="combobox"
                                      >
                                        <WithStyles(ForwardRef(TextField))
                                          InputLabelProps={
                                            Object {
                                              "htmlFor": "tag-select",
                                              "id": "tag-select-label",
                                            }
                                          }
                                          InputProps={
                                            Object {
                                              "className": "MuiAutocomplete-inputRoot",
                                              "endAdornment": <div
                                                className="MuiAutocomplete-endAdornment"
                                              >
                                                <WithStyles(ForwardRef(IconButton))
                                                  aria-label="Clear"
                                                  className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                  onClick={[Function]}
                                                  tabIndex={-1}
                                                  title="Clear"
                                                >
                                                  <Memo
                                                    fontSize="small"
                                                  />
                                                </WithStyles(ForwardRef(IconButton))>
                                              </div>,
                                              "ref": [Function],
                                              "startAdornment": Array [
                                                <WithStyles(ForwardRef(Chip))
                                                  className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                  color="secondary"
                                                  data-tag-index={0}
                                                  disabled={false}
                                                  label="tag1"
                                                  onDelete={[Function]}
                                                  size="small"
                                                  tabIndex={-1}
                                                />,
                                                <WithStyles(ForwardRef(Chip))
                                                  className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                  color="secondary"
                                                  data-tag-index={1}
                                                  disabled={false}
                                                  label="tag2"
                                                  onDelete={[Function]}
                                                  size="small"
                                                  tabIndex={-1}
                                                />,
                                              ],
                                            }
                                          }
                                          disabled={false}
                                          fullWidth={true}
                                          id="tag-select"
                                          inputProps={
                                            Object {
                                              "aria-activedescendant": null,
                                              "aria-autocomplete": "list",
                                              "aria-controls": null,
                                              "autoCapitalize": "none",
                                              "autoComplete": "off",
                                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                              "disabled": false,
                                              "id": "tag-select",
                                              "onBlur": [Function],
                                              "onChange": [Function],
                                              "onFocus": [Function],
                                              "onMouseDown": [Function],
                                              "ref": Object {
                                                "current": <input
                                                  aria-autocomplete="list"
                                                  aria-invalid="false"
                                                  autocapitalize="none"
                                                  autocomplete="off"
                                                  class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                  id="tag-select"
                                                  spellcheck="false"
                                                  type="text"
                                                  value=""
                                                />,
                                              },
                                              "spellCheck": "false",
                                              "value": "",
                                            }
                                          }
                                          label="Filter by tag"
                                          size="small"
                                          style={
                                            Object {
                                              "border": "none",
                                            }
                                          }
                                          variant="standard"
                                        >
                                          <ForwardRef(TextField)
                                            InputLabelProps={
                                              Object {
                                                "htmlFor": "tag-select",
                                                "id": "tag-select-label",
                                              }
                                            }
                                            InputProps={
                                              Object {
                                                "className": "MuiAutocomplete-inputRoot",
                                                "endAdornment": <div
                                                  className="MuiAutocomplete-endAdornment"
                                                >
                                                  <WithStyles(ForwardRef(IconButton))
                                                    aria-label="Clear"
                                                    className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                    onClick={[Function]}
                                                    tabIndex={-1}
                                                    title="Clear"
                                                  >
                                                    <Memo
                                                      fontSize="small"
                                                    />
                                                  </WithStyles(ForwardRef(IconButton))>
                                                </div>,
                                                "ref": [Function],
                                                "startAdornment": Array [
                                                  <WithStyles(ForwardRef(Chip))
                                                    className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                    color="secondary"
                                                    data-tag-index={0}
                                                    disabled={false}
                                                    label="tag1"
                                                    onDelete={[Function]}
                                                    size="small"
                                                    tabIndex={-1}
                                                  />,
                                                  <WithStyles(ForwardRef(Chip))
                                                    className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                    color="secondary"
                                                    data-tag-index={1}
                                                    disabled={false}
                                                    label="tag2"
                                                    onDelete={[Function]}
                                                    size="small"
                                                    tabIndex={-1}
                                                  />,
                                                ],
                                              }
                                            }
                                            classes={
                                              Object {
                                                "root": "MuiTextField-root",
                                              }
                                            }
                                            disabled={false}
                                            fullWidth={true}
                                            id="tag-select"
                                            inputProps={
                                              Object {
                                                "aria-activedescendant": null,
                                                "aria-autocomplete": "list",
                                                "aria-controls": null,
                                                "autoCapitalize": "none",
                                                "autoComplete": "off",
                                                "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                "disabled": false,
                                                "id": "tag-select",
                                                "onBlur": [Function],
                                                "onChange": [Function],
                                                "onFocus": [Function],
                                                "onMouseDown": [Function],
                                                "ref": Object {
                                                  "current": <input
                                                    aria-autocomplete="list"
                                                    aria-invalid="false"
                                                    autocapitalize="none"
                                                    autocomplete="off"
                                                    class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                    id="tag-select"
                                                    spellcheck="false"
                                                    type="text"
                                                    value=""
                                                  />,
                                                },
                                                "spellCheck": "false",
                                                "value": "",
                                              }
                                            }
                                            label="Filter by tag"
                                            size="small"
                                            style={
                                              Object {
                                                "border": "none",
                                              }
                                            }
                                            variant="standard"
                                          >
                                            <WithStyles(ForwardRef(FormControl))
                                              className="MuiTextField-root"
                                              color="primary"
                                              disabled={false}
                                              error={false}
                                              fullWidth={true}
                                              required={false}
                                              size="small"
                                              style={
                                                Object {
                                                  "border": "none",
                                                }
                                              }
                                              variant="standard"
                                            >
                                              <ForwardRef(FormControl)
                                                className="MuiTextField-root"
                                                classes={
                                                  Object {
                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                    "marginDense": "MuiFormControl-marginDense",
                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                    "root": "MuiFormControl-root",
                                                  }
                                                }
                                                color="primary"
                                                disabled={false}
                                                error={false}
                                                fullWidth={true}
                                                required={false}
                                                size="small"
                                                style={
                                                  Object {
                                                    "border": "none",
                                                  }
                                                }
                                                variant="standard"
                                              >
                                                <div
                                                  className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                  style={
                                                    Object {
                                                      "border": "none",
                                                    }
                                                  }
                                                >
                                                  <WithStyles(ForwardRef(InputLabel))
                                                    htmlFor="tag-select"
                                                    id="tag-select-label"
                                                  >
                                                    <ForwardRef(InputLabel)
                                                      classes={
                                                        Object {
                                                          "animated": "MuiInputLabel-animated",
                                                          "asterisk": "MuiInputLabel-asterisk",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "filled": "MuiInputLabel-filled",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInputLabel-formControl",
                                                          "marginDense": "MuiInputLabel-marginDense",
                                                          "outlined": "MuiInputLabel-outlined",
                                                          "required": "Mui-required",
                                                          "root": "MuiInputLabel-root",
                                                          "shrink": "MuiInputLabel-shrink",
                                                        }
                                                      }
                                                      htmlFor="tag-select"
                                                      id="tag-select-label"
                                                    >
                                                      <WithStyles(ForwardRef(FormLabel))
                                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                        classes={
                                                          Object {
                                                            "asterisk": "MuiInputLabel-asterisk",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "required": "Mui-required",
                                                          }
                                                        }
                                                        data-shrink={true}
                                                        htmlFor="tag-select"
                                                        id="tag-select-label"
                                                      >
                                                        <ForwardRef(FormLabel)
                                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                          classes={
                                                            Object {
                                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "filled": "MuiFormLabel-filled",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "required": "Mui-required Mui-required",
                                                              "root": "MuiFormLabel-root",
                                                            }
                                                          }
                                                          data-shrink={true}
                                                          htmlFor="tag-select"
                                                          id="tag-select-label"
                                                        >
                                                          <label
                                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-marginDense"
                                                            data-shrink={true}
                                                            htmlFor="tag-select"
                                                            id="tag-select-label"
                                                          >
                                                            Filter by tag
                                                          </label>
                                                        </ForwardRef(FormLabel)>
                                                      </WithStyles(ForwardRef(FormLabel))>
                                                    </ForwardRef(InputLabel)>
                                                  </WithStyles(ForwardRef(InputLabel))>
                                                  <WithStyles(ForwardRef(Input))
                                                    autoFocus={false}
                                                    className="MuiAutocomplete-inputRoot"
                                                    endAdornment={
                                                      <div
                                                        className="MuiAutocomplete-endAdornment"
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          aria-label="Clear"
                                                          className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                          onClick={[Function]}
                                                          tabIndex={-1}
                                                          title="Clear"
                                                        >
                                                          <Memo
                                                            fontSize="small"
                                                          />
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </div>
                                                    }
                                                    fullWidth={true}
                                                    id="tag-select"
                                                    inputProps={
                                                      Object {
                                                        "aria-activedescendant": null,
                                                        "aria-autocomplete": "list",
                                                        "aria-controls": null,
                                                        "autoCapitalize": "none",
                                                        "autoComplete": "off",
                                                        "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                        "disabled": false,
                                                        "id": "tag-select",
                                                        "onBlur": [Function],
                                                        "onChange": [Function],
                                                        "onFocus": [Function],
                                                        "onMouseDown": [Function],
                                                        "ref": Object {
                                                          "current": <input
                                                            aria-autocomplete="list"
                                                            aria-invalid="false"
                                                            autocapitalize="none"
                                                            autocomplete="off"
                                                            class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                            id="tag-select"
                                                            spellcheck="false"
                                                            type="text"
                                                            value=""
                                                          />,
                                                        },
                                                        "spellCheck": "false",
                                                        "value": "",
                                                      }
                                                    }
                                                    multiline={false}
                                                    startAdornment={
                                                      Array [
                                                        <WithStyles(ForwardRef(Chip))
                                                          className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                          color="secondary"
                                                          data-tag-index={0}
                                                          disabled={false}
                                                          label="tag1"
                                                          onDelete={[Function]}
                                                          size="small"
                                                          tabIndex={-1}
                                                        />,
                                                        <WithStyles(ForwardRef(Chip))
                                                          className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                          color="secondary"
                                                          data-tag-index={1}
                                                          disabled={false}
                                                          label="tag2"
                                                          onDelete={[Function]}
                                                          size="small"
                                                          tabIndex={-1}
                                                        />,
                                                      ]
                                                    }
                                                  >
                                                    <ForwardRef(Input)
                                                      autoFocus={false}
                                                      className="MuiAutocomplete-inputRoot"
                                                      classes={
                                                        Object {
                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                          "disabled": "Mui-disabled",
                                                          "error": "Mui-error",
                                                          "focused": "Mui-focused",
                                                          "formControl": "MuiInput-formControl",
                                                          "fullWidth": "MuiInput-fullWidth",
                                                          "input": "MuiInput-input",
                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                          "marginDense": "MuiInput-marginDense",
                                                          "multiline": "MuiInput-multiline",
                                                          "root": "MuiInput-root",
                                                          "underline": "MuiInput-underline",
                                                        }
                                                      }
                                                      endAdornment={
                                                        <div
                                                          className="MuiAutocomplete-endAdornment"
                                                        >
                                                          <WithStyles(ForwardRef(IconButton))
                                                            aria-label="Clear"
                                                            className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                            onClick={[Function]}
                                                            tabIndex={-1}
                                                            title="Clear"
                                                          >
                                                            <Memo
                                                              fontSize="small"
                                                            />
                                                          </WithStyles(ForwardRef(IconButton))>
                                                        </div>
                                                      }
                                                      fullWidth={true}
                                                      id="tag-select"
                                                      inputProps={
                                                        Object {
                                                          "aria-activedescendant": null,
                                                          "aria-autocomplete": "list",
                                                          "aria-controls": null,
                                                          "autoCapitalize": "none",
                                                          "autoComplete": "off",
                                                          "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                          "disabled": false,
                                                          "id": "tag-select",
                                                          "onBlur": [Function],
                                                          "onChange": [Function],
                                                          "onFocus": [Function],
                                                          "onMouseDown": [Function],
                                                          "ref": Object {
                                                            "current": <input
                                                              aria-autocomplete="list"
                                                              aria-invalid="false"
                                                              autocapitalize="none"
                                                              autocomplete="off"
                                                              class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                              id="tag-select"
                                                              spellcheck="false"
                                                              type="text"
                                                              value=""
                                                            />,
                                                          },
                                                          "spellCheck": "false",
                                                          "value": "",
                                                        }
                                                      }
                                                      multiline={false}
                                                      startAdornment={
                                                        Array [
                                                          <WithStyles(ForwardRef(Chip))
                                                            className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                            color="secondary"
                                                            data-tag-index={0}
                                                            disabled={false}
                                                            label="tag1"
                                                            onDelete={[Function]}
                                                            size="small"
                                                            tabIndex={-1}
                                                          />,
                                                          <WithStyles(ForwardRef(Chip))
                                                            className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                            color="secondary"
                                                            data-tag-index={1}
                                                            disabled={false}
                                                            label="tag2"
                                                            onDelete={[Function]}
                                                            size="small"
                                                            tabIndex={-1}
                                                          />,
                                                        ]
                                                      }
                                                    >
                                                      <WithStyles(ForwardRef(InputBase))
                                                        autoFocus={false}
                                                        className="MuiAutocomplete-inputRoot"
                                                        classes={
                                                          Object {
                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "error": "Mui-error",
                                                            "focused": "Mui-focused",
                                                            "formControl": "MuiInput-formControl",
                                                            "fullWidth": "MuiInput-fullWidth",
                                                            "input": "MuiInput-input",
                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                            "marginDense": "MuiInput-marginDense",
                                                            "multiline": "MuiInput-multiline",
                                                            "root": "MuiInput-root MuiInput-underline",
                                                            "underline": null,
                                                          }
                                                        }
                                                        endAdornment={
                                                          <div
                                                            className="MuiAutocomplete-endAdornment"
                                                          >
                                                            <WithStyles(ForwardRef(IconButton))
                                                              aria-label="Clear"
                                                              className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                              onClick={[Function]}
                                                              tabIndex={-1}
                                                              title="Clear"
                                                            >
                                                              <Memo
                                                                fontSize="small"
                                                              />
                                                            </WithStyles(ForwardRef(IconButton))>
                                                          </div>
                                                        }
                                                        fullWidth={true}
                                                        id="tag-select"
                                                        inputComponent="input"
                                                        inputProps={
                                                          Object {
                                                            "aria-activedescendant": null,
                                                            "aria-autocomplete": "list",
                                                            "aria-controls": null,
                                                            "autoCapitalize": "none",
                                                            "autoComplete": "off",
                                                            "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                            "disabled": false,
                                                            "id": "tag-select",
                                                            "onBlur": [Function],
                                                            "onChange": [Function],
                                                            "onFocus": [Function],
                                                            "onMouseDown": [Function],
                                                            "ref": Object {
                                                              "current": <input
                                                                aria-autocomplete="list"
                                                                aria-invalid="false"
                                                                autocapitalize="none"
                                                                autocomplete="off"
                                                                class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                                id="tag-select"
                                                                spellcheck="false"
                                                                type="text"
                                                                value=""
                                                              />,
                                                            },
                                                            "spellCheck": "false",
                                                            "value": "",
                                                          }
                                                        }
                                                        multiline={false}
                                                        startAdornment={
                                                          Array [
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={0}
                                                              disabled={false}
                                                              label="tag1"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            />,
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={1}
                                                              disabled={false}
                                                              label="tag2"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            />,
                                                          ]
                                                        }
                                                        type="text"
                                                      >
                                                        <ForwardRef(InputBase)
                                                          autoFocus={false}
                                                          className="MuiAutocomplete-inputRoot"
                                                          classes={
                                                            Object {
                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                              "disabled": "Mui-disabled Mui-disabled",
                                                              "error": "Mui-error Mui-error",
                                                              "focused": "Mui-focused Mui-focused",
                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                              "input": "MuiInputBase-input MuiInput-input",
                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                            }
                                                          }
                                                          endAdornment={
                                                            <div
                                                              className="MuiAutocomplete-endAdornment"
                                                            >
                                                              <WithStyles(ForwardRef(IconButton))
                                                                aria-label="Clear"
                                                                className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                                title="Clear"
                                                              >
                                                                <Memo
                                                                  fontSize="small"
                                                                />
                                                              </WithStyles(ForwardRef(IconButton))>
                                                            </div>
                                                          }
                                                          fullWidth={true}
                                                          id="tag-select"
                                                          inputComponent="input"
                                                          inputProps={
                                                            Object {
                                                              "aria-activedescendant": null,
                                                              "aria-autocomplete": "list",
                                                              "aria-controls": null,
                                                              "autoCapitalize": "none",
                                                              "autoComplete": "off",
                                                              "className": "MuiAutocomplete-input MuiAutocomplete-inputFocused",
                                                              "disabled": false,
                                                              "id": "tag-select",
                                                              "onBlur": [Function],
                                                              "onChange": [Function],
                                                              "onFocus": [Function],
                                                              "onMouseDown": [Function],
                                                              "ref": Object {
                                                                "current": <input
                                                                  aria-autocomplete="list"
                                                                  aria-invalid="false"
                                                                  autocapitalize="none"
                                                                  autocomplete="off"
                                                                  class="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                                  id="tag-select"
                                                                  spellcheck="false"
                                                                  type="text"
                                                                  value=""
                                                                />,
                                                              },
                                                              "spellCheck": "false",
                                                              "value": "",
                                                            }
                                                          }
                                                          multiline={false}
                                                          startAdornment={
                                                            Array [
                                                              <WithStyles(ForwardRef(Chip))
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                color="secondary"
                                                                data-tag-index={0}
                                                                disabled={false}
                                                                label="tag1"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              />,
                                                              <WithStyles(ForwardRef(Chip))
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                color="secondary"
                                                                data-tag-index={1}
                                                                disabled={false}
                                                                label="tag2"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              />,
                                                            ]
                                                          }
                                                          type="text"
                                                        >
                                                          <div
                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiAutocomplete-inputRoot MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart MuiInputBase-adornedEnd MuiInputBase-marginDense MuiInput-marginDense"
                                                            onClick={[Function]}
                                                          >
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={0}
                                                              disabled={false}
                                                              key="0"
                                                              label="tag1"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            >
                                                              <ForwardRef(Chip)
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                classes={
                                                                  Object {
                                                                    "avatar": "MuiChip-avatar",
                                                                    "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                                                                    "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                                                                    "avatarSmall": "MuiChip-avatarSmall",
                                                                    "clickable": "MuiChip-clickable",
                                                                    "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                                                                    "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                                                                    "colorPrimary": "MuiChip-colorPrimary",
                                                                    "colorSecondary": "MuiChip-colorSecondary",
                                                                    "deletable": "MuiChip-deletable",
                                                                    "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                                                                    "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                                                                    "deleteIcon": "MuiChip-deleteIcon",
                                                                    "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                                                                    "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                                                                    "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                                                                    "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                                                                    "deleteIconSmall": "MuiChip-deleteIconSmall",
                                                                    "disabled": "Mui-disabled",
                                                                    "icon": "MuiChip-icon",
                                                                    "iconColorPrimary": "MuiChip-iconColorPrimary",
                                                                    "iconColorSecondary": "MuiChip-iconColorSecondary",
                                                                    "iconSmall": "MuiChip-iconSmall",
                                                                    "label": "MuiChip-label",
                                                                    "labelSmall": "MuiChip-labelSmall",
                                                                    "outlined": "MuiChip-outlined",
                                                                    "outlinedPrimary": "MuiChip-outlinedPrimary",
                                                                    "outlinedSecondary": "MuiChip-outlinedSecondary",
                                                                    "root": "MuiChip-root",
                                                                    "sizeSmall": "MuiChip-sizeSmall",
                                                                  }
                                                                }
                                                                color="secondary"
                                                                data-tag-index={0}
                                                                disabled={false}
                                                                label="tag1"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              >
                                                                <div
                                                                  className="MuiChip-root MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall MuiChip-colorSecondary MuiChip-deletableColorSecondary MuiChip-sizeSmall MuiChip-deletable"
                                                                  data-tag-index={0}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  role="button"
                                                                  tabIndex={-1}
                                                                >
                                                                  <span
                                                                    className="MuiChip-label MuiChip-labelSmall"
                                                                  >
                                                                    tag1
                                                                  </span>
                                                                  <ForwardRef(CancelIcon)
                                                                    className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                        onClick={[Function]}
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                          focusable="false"
                                                                          onClick={[Function]}
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(CancelIcon)>
                                                                </div>
                                                              </ForwardRef(Chip)>
                                                            </WithStyles(ForwardRef(Chip))>
                                                            <WithStyles(ForwardRef(Chip))
                                                              className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                              color="secondary"
                                                              data-tag-index={1}
                                                              disabled={false}
                                                              key="1"
                                                              label="tag2"
                                                              onDelete={[Function]}
                                                              size="small"
                                                              tabIndex={-1}
                                                            >
                                                              <ForwardRef(Chip)
                                                                className="MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall"
                                                                classes={
                                                                  Object {
                                                                    "avatar": "MuiChip-avatar",
                                                                    "avatarColorPrimary": "MuiChip-avatarColorPrimary",
                                                                    "avatarColorSecondary": "MuiChip-avatarColorSecondary",
                                                                    "avatarSmall": "MuiChip-avatarSmall",
                                                                    "clickable": "MuiChip-clickable",
                                                                    "clickableColorPrimary": "MuiChip-clickableColorPrimary",
                                                                    "clickableColorSecondary": "MuiChip-clickableColorSecondary",
                                                                    "colorPrimary": "MuiChip-colorPrimary",
                                                                    "colorSecondary": "MuiChip-colorSecondary",
                                                                    "deletable": "MuiChip-deletable",
                                                                    "deletableColorPrimary": "MuiChip-deletableColorPrimary",
                                                                    "deletableColorSecondary": "MuiChip-deletableColorSecondary",
                                                                    "deleteIcon": "MuiChip-deleteIcon",
                                                                    "deleteIconColorPrimary": "MuiChip-deleteIconColorPrimary",
                                                                    "deleteIconColorSecondary": "MuiChip-deleteIconColorSecondary",
                                                                    "deleteIconOutlinedColorPrimary": "MuiChip-deleteIconOutlinedColorPrimary",
                                                                    "deleteIconOutlinedColorSecondary": "MuiChip-deleteIconOutlinedColorSecondary",
                                                                    "deleteIconSmall": "MuiChip-deleteIconSmall",
                                                                    "disabled": "Mui-disabled",
                                                                    "icon": "MuiChip-icon",
                                                                    "iconColorPrimary": "MuiChip-iconColorPrimary",
                                                                    "iconColorSecondary": "MuiChip-iconColorSecondary",
                                                                    "iconSmall": "MuiChip-iconSmall",
                                                                    "label": "MuiChip-label",
                                                                    "labelSmall": "MuiChip-labelSmall",
                                                                    "outlined": "MuiChip-outlined",
                                                                    "outlinedPrimary": "MuiChip-outlinedPrimary",
                                                                    "outlinedSecondary": "MuiChip-outlinedSecondary",
                                                                    "root": "MuiChip-root",
                                                                    "sizeSmall": "MuiChip-sizeSmall",
                                                                  }
                                                                }
                                                                color="secondary"
                                                                data-tag-index={1}
                                                                disabled={false}
                                                                label="tag2"
                                                                onDelete={[Function]}
                                                                size="small"
                                                                tabIndex={-1}
                                                              >
                                                                <div
                                                                  className="MuiChip-root MuiAutocomplete-tag MuiAutocomplete-tagSizeSmall MuiChip-colorSecondary MuiChip-deletableColorSecondary MuiChip-sizeSmall MuiChip-deletable"
                                                                  data-tag-index={1}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  role="button"
                                                                  tabIndex={-1}
                                                                >
                                                                  <span
                                                                    className="MuiChip-label MuiChip-labelSmall"
                                                                  >
                                                                    tag2
                                                                  </span>
                                                                  <ForwardRef(CancelIcon)
                                                                    className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(SvgIcon))
                                                                      className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(SvgIcon)
                                                                        className="MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                        classes={
                                                                          Object {
                                                                            "colorAction": "MuiSvgIcon-colorAction",
                                                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                            "colorError": "MuiSvgIcon-colorError",
                                                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                            "root": "MuiSvgIcon-root",
                                                                          }
                                                                        }
                                                                        onClick={[Function]}
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="MuiSvgIcon-root MuiChip-deleteIcon MuiChip-deleteIconColorSecondary MuiChip-deleteIconSmall"
                                                                          focusable="false"
                                                                          onClick={[Function]}
                                                                          viewBox="0 0 24 24"
                                                                        >
                                                                          <path
                                                                            d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                                                          />
                                                                        </svg>
                                                                      </ForwardRef(SvgIcon)>
                                                                    </WithStyles(ForwardRef(SvgIcon))>
                                                                  </ForwardRef(CancelIcon)>
                                                                </div>
                                                              </ForwardRef(Chip)>
                                                            </WithStyles(ForwardRef(Chip))>
                                                            <input
                                                              aria-activedescendant={null}
                                                              aria-autocomplete="list"
                                                              aria-controls={null}
                                                              aria-invalid={false}
                                                              autoCapitalize="none"
                                                              autoComplete="off"
                                                              autoFocus={false}
                                                              className="MuiInputBase-input MuiInput-input MuiAutocomplete-input MuiAutocomplete-inputFocused MuiInputBase-inputAdornedStart MuiInputBase-inputAdornedEnd MuiInputBase-inputMarginDense MuiInput-inputMarginDense"
                                                              disabled={false}
                                                              id="tag-select"
                                                              onAnimationStart={[Function]}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onFocus={[Function]}
                                                              onMouseDown={[Function]}
                                                              required={false}
                                                              spellCheck="false"
                                                              type="text"
                                                              value=""
                                                            />
                                                            <div
                                                              className="MuiAutocomplete-endAdornment"
                                                            >
                                                              <WithStyles(ForwardRef(IconButton))
                                                                aria-label="Clear"
                                                                className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                onClick={[Function]}
                                                                tabIndex={-1}
                                                                title="Clear"
                                                              >
                                                                <ForwardRef(IconButton)
                                                                  aria-label="Clear"
                                                                  className="MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                  classes={
                                                                    Object {
                                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                                      "label": "MuiIconButton-label",
                                                                      "root": "MuiIconButton-root",
                                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  tabIndex={-1}
                                                                  title="Clear"
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    aria-label="Clear"
                                                                    centerRipple={true}
                                                                    className="MuiIconButton-root MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    onClick={[Function]}
                                                                    tabIndex={-1}
                                                                    title="Clear"
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      aria-label="Clear"
                                                                      centerRipple={true}
                                                                      className="MuiIconButton-root MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      disabled={false}
                                                                      focusRipple={true}
                                                                      onClick={[Function]}
                                                                      tabIndex={-1}
                                                                      title="Clear"
                                                                    >
                                                                      <button
                                                                        aria-label="Clear"
                                                                        className="MuiButtonBase-root MuiIconButton-root MuiAutocomplete-clearIndicator MuiAutocomplete-clearIndicatorDirty"
                                                                        disabled={false}
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        tabIndex={-1}
                                                                        title="Clear"
                                                                        type="button"
                                                                      >
                                                                        <span
                                                                          className="MuiIconButton-label"
                                                                        >
                                                                          <ForwardRef(CloseIcon)
                                                                            fontSize="small"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              fontSize="small"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                                fontSize="small"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(CloseIcon)>
                                                                        </span>
                                                                        <WithStyles(memo)
                                                                          center={true}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={true}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </button>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(IconButton)>
                                                              </WithStyles(ForwardRef(IconButton))>
                                                            </div>
                                                          </div>
                                                        </ForwardRef(InputBase)>
                                                      </WithStyles(ForwardRef(InputBase))>
                                                    </ForwardRef(Input)>
                                                  </WithStyles(ForwardRef(Input))>
                                                </div>
                                              </ForwardRef(FormControl)>
                                            </WithStyles(ForwardRef(FormControl))>
                                          </ForwardRef(TextField)>
                                        </WithStyles(ForwardRef(TextField))>
                                      </div>
                                    </ForwardRef(Autocomplete)>
                                  </WithStyles(ForwardRef(Autocomplete))>
                                </WithStyles(WithStyles(ForwardRef(Autocomplete)))>
                              </div>
                            </Styled(MuiBox)>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                      <WithStyles(ForwardRef(Grid))
                        className="ProgramCollection-flexitem2-3"
                        container={true}
                        item={true}
                        md={true}
                        spacing={2}
                        xs={true}
                      >
                        <ForwardRef(Grid)
                          className="ProgramCollection-flexitem2-3"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          container={true}
                          item={true}
                          md={true}
                          spacing={2}
                          xs={true}
                        >
                          <div
                            className="MuiGrid-root ProgramCollection-flexitem2-3 MuiGrid-container MuiGrid-spacing-xs-2 MuiGrid-item MuiGrid-grid-xs-true MuiGrid-grid-md-true"
                          >
                            <WithStyles(ForwardRef(Grid))
                              item={true}
                              xs={true}
                            >
                              <ForwardRef(Grid)
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                    "container": "MuiGrid-container",
                                    "direction-xs-column": "MuiGrid-direction-xs-column",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                    "grid-lg-1": "MuiGrid-grid-lg-1",
                                    "grid-lg-10": "MuiGrid-grid-lg-10",
                                    "grid-lg-11": "MuiGrid-grid-lg-11",
                                    "grid-lg-12": "MuiGrid-grid-lg-12",
                                    "grid-lg-2": "MuiGrid-grid-lg-2",
                                    "grid-lg-3": "MuiGrid-grid-lg-3",
                                    "grid-lg-4": "MuiGrid-grid-lg-4",
                                    "grid-lg-5": "MuiGrid-grid-lg-5",
                                    "grid-lg-6": "MuiGrid-grid-lg-6",
                                    "grid-lg-7": "MuiGrid-grid-lg-7",
                                    "grid-lg-8": "MuiGrid-grid-lg-8",
                                    "grid-lg-9": "MuiGrid-grid-lg-9",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                    "grid-lg-true": "MuiGrid-grid-lg-true",
                                    "grid-md-1": "MuiGrid-grid-md-1",
                                    "grid-md-10": "MuiGrid-grid-md-10",
                                    "grid-md-11": "MuiGrid-grid-md-11",
                                    "grid-md-12": "MuiGrid-grid-md-12",
                                    "grid-md-2": "MuiGrid-grid-md-2",
                                    "grid-md-3": "MuiGrid-grid-md-3",
                                    "grid-md-4": "MuiGrid-grid-md-4",
                                    "grid-md-5": "MuiGrid-grid-md-5",
                                    "grid-md-6": "MuiGrid-grid-md-6",
                                    "grid-md-7": "MuiGrid-grid-md-7",
                                    "grid-md-8": "MuiGrid-grid-md-8",
                                    "grid-md-9": "MuiGrid-grid-md-9",
                                    "grid-md-auto": "MuiGrid-grid-md-auto",
                                    "grid-md-true": "MuiGrid-grid-md-true",
                                    "grid-sm-1": "MuiGrid-grid-sm-1",
                                    "grid-sm-10": "MuiGrid-grid-sm-10",
                                    "grid-sm-11": "MuiGrid-grid-sm-11",
                                    "grid-sm-12": "MuiGrid-grid-sm-12",
                                    "grid-sm-2": "MuiGrid-grid-sm-2",
                                    "grid-sm-3": "MuiGrid-grid-sm-3",
                                    "grid-sm-4": "MuiGrid-grid-sm-4",
                                    "grid-sm-5": "MuiGrid-grid-sm-5",
                                    "grid-sm-6": "MuiGrid-grid-sm-6",
                                    "grid-sm-7": "MuiGrid-grid-sm-7",
                                    "grid-sm-8": "MuiGrid-grid-sm-8",
                                    "grid-sm-9": "MuiGrid-grid-sm-9",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                    "grid-sm-true": "MuiGrid-grid-sm-true",
                                    "grid-xl-1": "MuiGrid-grid-xl-1",
                                    "grid-xl-10": "MuiGrid-grid-xl-10",
                                    "grid-xl-11": "MuiGrid-grid-xl-11",
                                    "grid-xl-12": "MuiGrid-grid-xl-12",
                                    "grid-xl-2": "MuiGrid-grid-xl-2",
                                    "grid-xl-3": "MuiGrid-grid-xl-3",
                                    "grid-xl-4": "MuiGrid-grid-xl-4",
                                    "grid-xl-5": "MuiGrid-grid-xl-5",
                                    "grid-xl-6": "MuiGrid-grid-xl-6",
                                    "grid-xl-7": "MuiGrid-grid-xl-7",
                                    "grid-xl-8": "MuiGrid-grid-xl-8",
                                    "grid-xl-9": "MuiGrid-grid-xl-9",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                    "grid-xl-true": "MuiGrid-grid-xl-true",
                                    "grid-xs-1": "MuiGrid-grid-xs-1",
                                    "grid-xs-10": "MuiGrid-grid-xs-10",
                                    "grid-xs-11": "MuiGrid-grid-xs-11",
                                    "grid-xs-12": "MuiGrid-grid-xs-12",
                                    "grid-xs-2": "MuiGrid-grid-xs-2",
                                    "grid-xs-3": "MuiGrid-grid-xs-3",
                                    "grid-xs-4": "MuiGrid-grid-xs-4",
                                    "grid-xs-5": "MuiGrid-grid-xs-5",
                                    "grid-xs-6": "MuiGrid-grid-xs-6",
                                    "grid-xs-7": "MuiGrid-grid-xs-7",
                                    "grid-xs-8": "MuiGrid-grid-xs-8",
                                    "grid-xs-9": "MuiGrid-grid-xs-9",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                    "grid-xs-true": "MuiGrid-grid-xs-true",
                                    "item": "MuiGrid-item",
                                    "justify-xs-center": "MuiGrid-justify-xs-center",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                    "root": "MuiGrid-root",
                                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                  }
                                }
                                item={true}
                                xs={true}
                              >
                                <div
                                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-true"
                                >
                                  <Styled(MuiBox)
                                    alignItems="center"
                                    className="ProgramCollection-flexitem3-4"
                                    display="flex"
                                  >
                                    <div
                                      className="MuiBox-root MuiBox-root-44 ProgramCollection-flexitem3-4"
                                    >
                                      <Styled(MuiBox)
                                        className="ProgramCollection-flexitem5-6"
                                      >
                                        <div
                                          className="MuiBox-root MuiBox-root-45 ProgramCollection-flexitem5-6"
                                        >
                                          <WithStyles(ForwardRef(Button))
                                            color="primary"
                                            component={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "displayName": "Link",
                                                "propTypes": Object {
                                                  "innerRef": [Function],
                                                  "onClick": [Function],
                                                  "replace": [Function],
                                                  "target": [Function],
                                                  "to": [Function],
                                                },
                                                "render": [Function],
                                              }
                                            }
                                            disabled={false}
                                            size="large"
                                            startIcon={<Memo(AddIcon) />}
                                            style={
                                              Object {
                                                "width": "162px",
                                              }
                                            }
                                            to="/mission-control"
                                            variant="contained"
                                          >
                                            <ForwardRef(Button)
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit",
                                                  "contained": "MuiButton-contained",
                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                  "disableElevation": "MuiButton-disableElevation",
                                                  "disabled": "Mui-disabled",
                                                  "endIcon": "MuiButton-endIcon",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "fullWidth": "MuiButton-fullWidth",
                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                  "label": "MuiButton-label",
                                                  "outlined": "MuiButton-outlined",
                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                  "root": "MuiButton-root",
                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                  "startIcon": "MuiButton-startIcon",
                                                  "text": "MuiButton-text",
                                                  "textPrimary": "MuiButton-textPrimary",
                                                  "textSecondary": "MuiButton-textSecondary",
                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                }
                                              }
                                              color="primary"
                                              component={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "displayName": "Link",
                                                  "propTypes": Object {
                                                    "innerRef": [Function],
                                                    "onClick": [Function],
                                                    "replace": [Function],
                                                    "target": [Function],
                                                    "to": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              disabled={false}
                                              size="large"
                                              startIcon={<Memo(AddIcon) />}
                                              style={
                                                Object {
                                                  "width": "162px",
                                                }
                                              }
                                              to="/mission-control"
                                              variant="contained"
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                                                component={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "displayName": "Link",
                                                    "propTypes": Object {
                                                      "innerRef": [Function],
                                                      "onClick": [Function],
                                                      "replace": [Function],
                                                      "target": [Function],
                                                      "to": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                style={
                                                  Object {
                                                    "width": "162px",
                                                  }
                                                }
                                                to="/mission-control"
                                                type="button"
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "displayName": "Link",
                                                      "propTypes": Object {
                                                        "innerRef": [Function],
                                                        "onClick": [Function],
                                                        "replace": [Function],
                                                        "target": [Function],
                                                        "to": [Function],
                                                      },
                                                      "render": [Function],
                                                    }
                                                  }
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  style={
                                                    Object {
                                                      "width": "162px",
                                                    }
                                                  }
                                                  to="/mission-control"
                                                  type="button"
                                                >
                                                  <Link
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                                                    onBlur={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    style={
                                                      Object {
                                                        "width": "162px",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                    to="/mission-control"
                                                  >
                                                    <LinkAnchor
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                                                      href="/mission-control"
                                                      navigate={[Function]}
                                                      onBlur={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      style={
                                                        Object {
                                                          "width": "162px",
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      <a
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-containedSizeLarge MuiButton-sizeLarge"
                                                        href="/mission-control"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="button"
                                                        style={
                                                          Object {
                                                            "width": "162px",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                      >
                                                        <span
                                                          className="MuiButton-label"
                                                        >
                                                          <span
                                                            className="MuiButton-startIcon MuiButton-iconSizeLarge"
                                                          >
                                                            <ForwardRef>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                          </span>
                                                          <FormattedMessage
                                                            defaultMessage="New Program"
                                                            id="app.program_collection.new"
                                                          >
                                                            New Program
                                                          </FormattedMessage>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </a>
                                                    </LinkAnchor>
                                                  </Link>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Button)>
                                          </WithStyles(ForwardRef(Button))>
                                        </div>
                                      </Styled(MuiBox)>
                                    </div>
                                  </Styled(MuiBox)>
                                </div>
                              </ForwardRef(Grid)>
                            </WithStyles(ForwardRef(Grid))>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                       
                    </div>
                  </ForwardRef(Grid)>
                </WithStyles(ForwardRef(Grid))>
                <WithStyles(ForwardRef(Grid))
                  container={true}
                  spacing={2}
                >
                  <ForwardRef(Grid)
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                        "container": "MuiGrid-container",
                        "direction-xs-column": "MuiGrid-direction-xs-column",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                        "grid-lg-1": "MuiGrid-grid-lg-1",
                        "grid-lg-10": "MuiGrid-grid-lg-10",
                        "grid-lg-11": "MuiGrid-grid-lg-11",
                        "grid-lg-12": "MuiGrid-grid-lg-12",
                        "grid-lg-2": "MuiGrid-grid-lg-2",
                        "grid-lg-3": "MuiGrid-grid-lg-3",
                        "grid-lg-4": "MuiGrid-grid-lg-4",
                        "grid-lg-5": "MuiGrid-grid-lg-5",
                        "grid-lg-6": "MuiGrid-grid-lg-6",
                        "grid-lg-7": "MuiGrid-grid-lg-7",
                        "grid-lg-8": "MuiGrid-grid-lg-8",
                        "grid-lg-9": "MuiGrid-grid-lg-9",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto",
                        "grid-lg-true": "MuiGrid-grid-lg-true",
                        "grid-md-1": "MuiGrid-grid-md-1",
                        "grid-md-10": "MuiGrid-grid-md-10",
                        "grid-md-11": "MuiGrid-grid-md-11",
                        "grid-md-12": "MuiGrid-grid-md-12",
                        "grid-md-2": "MuiGrid-grid-md-2",
                        "grid-md-3": "MuiGrid-grid-md-3",
                        "grid-md-4": "MuiGrid-grid-md-4",
                        "grid-md-5": "MuiGrid-grid-md-5",
                        "grid-md-6": "MuiGrid-grid-md-6",
                        "grid-md-7": "MuiGrid-grid-md-7",
                        "grid-md-8": "MuiGrid-grid-md-8",
                        "grid-md-9": "MuiGrid-grid-md-9",
                        "grid-md-auto": "MuiGrid-grid-md-auto",
                        "grid-md-true": "MuiGrid-grid-md-true",
                        "grid-sm-1": "MuiGrid-grid-sm-1",
                        "grid-sm-10": "MuiGrid-grid-sm-10",
                        "grid-sm-11": "MuiGrid-grid-sm-11",
                        "grid-sm-12": "MuiGrid-grid-sm-12",
                        "grid-sm-2": "MuiGrid-grid-sm-2",
                        "grid-sm-3": "MuiGrid-grid-sm-3",
                        "grid-sm-4": "MuiGrid-grid-sm-4",
                        "grid-sm-5": "MuiGrid-grid-sm-5",
                        "grid-sm-6": "MuiGrid-grid-sm-6",
                        "grid-sm-7": "MuiGrid-grid-sm-7",
                        "grid-sm-8": "MuiGrid-grid-sm-8",
                        "grid-sm-9": "MuiGrid-grid-sm-9",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto",
                        "grid-sm-true": "MuiGrid-grid-sm-true",
                        "grid-xl-1": "MuiGrid-grid-xl-1",
                        "grid-xl-10": "MuiGrid-grid-xl-10",
                        "grid-xl-11": "MuiGrid-grid-xl-11",
                        "grid-xl-12": "MuiGrid-grid-xl-12",
                        "grid-xl-2": "MuiGrid-grid-xl-2",
                        "grid-xl-3": "MuiGrid-grid-xl-3",
                        "grid-xl-4": "MuiGrid-grid-xl-4",
                        "grid-xl-5": "MuiGrid-grid-xl-5",
                        "grid-xl-6": "MuiGrid-grid-xl-6",
                        "grid-xl-7": "MuiGrid-grid-xl-7",
                        "grid-xl-8": "MuiGrid-grid-xl-8",
                        "grid-xl-9": "MuiGrid-grid-xl-9",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto",
                        "grid-xl-true": "MuiGrid-grid-xl-true",
                        "grid-xs-1": "MuiGrid-grid-xs-1",
                        "grid-xs-10": "MuiGrid-grid-xs-10",
                        "grid-xs-11": "MuiGrid-grid-xs-11",
                        "grid-xs-12": "MuiGrid-grid-xs-12",
                        "grid-xs-2": "MuiGrid-grid-xs-2",
                        "grid-xs-3": "MuiGrid-grid-xs-3",
                        "grid-xs-4": "MuiGrid-grid-xs-4",
                        "grid-xs-5": "MuiGrid-grid-xs-5",
                        "grid-xs-6": "MuiGrid-grid-xs-6",
                        "grid-xs-7": "MuiGrid-grid-xs-7",
                        "grid-xs-8": "MuiGrid-grid-xs-8",
                        "grid-xs-9": "MuiGrid-grid-xs-9",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto",
                        "grid-xs-true": "MuiGrid-grid-xs-true",
                        "item": "MuiGrid-item",
                        "justify-xs-center": "MuiGrid-justify-xs-center",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                        "root": "MuiGrid-root",
                        "spacing-xs-1": "MuiGrid-spacing-xs-1",
                        "spacing-xs-10": "MuiGrid-spacing-xs-10",
                        "spacing-xs-2": "MuiGrid-spacing-xs-2",
                        "spacing-xs-3": "MuiGrid-spacing-xs-3",
                        "spacing-xs-4": "MuiGrid-spacing-xs-4",
                        "spacing-xs-5": "MuiGrid-spacing-xs-5",
                        "spacing-xs-6": "MuiGrid-spacing-xs-6",
                        "spacing-xs-7": "MuiGrid-spacing-xs-7",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8",
                        "spacing-xs-9": "MuiGrid-spacing-xs-9",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth",
                      }
                    }
                    container={true}
                    spacing={2}
                  >
                    <div
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                    >
                      <WithStyles(ForwardRef(Grid))
                        item={true}
                        key="33"
                        lg={3}
                        md={6}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          item={true}
                          lg={3}
                          md={6}
                          xs={12}
                        >
                          <div
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6 MuiGrid-grid-lg-3"
                          >
                            <WithStyles(ForwardRef(Card))
                              item={true}
                              key="33"
                              variant="outlined"
                            >
                              <ForwardRef(Card)
                                classes={
                                  Object {
                                    "root": "MuiCard-root",
                                  }
                                }
                                item={true}
                                variant="outlined"
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="MuiCard-root"
                                  elevation={1}
                                  item={true}
                                  variant="outlined"
                                >
                                  <ForwardRef(Paper)
                                    className="MuiCard-root"
                                    classes={
                                      Object {
                                        "elevation0": "MuiPaper-elevation0",
                                        "elevation1": "MuiPaper-elevation1",
                                        "elevation10": "MuiPaper-elevation10",
                                        "elevation11": "MuiPaper-elevation11",
                                        "elevation12": "MuiPaper-elevation12",
                                        "elevation13": "MuiPaper-elevation13",
                                        "elevation14": "MuiPaper-elevation14",
                                        "elevation15": "MuiPaper-elevation15",
                                        "elevation16": "MuiPaper-elevation16",
                                        "elevation17": "MuiPaper-elevation17",
                                        "elevation18": "MuiPaper-elevation18",
                                        "elevation19": "MuiPaper-elevation19",
                                        "elevation2": "MuiPaper-elevation2",
                                        "elevation20": "MuiPaper-elevation20",
                                        "elevation21": "MuiPaper-elevation21",
                                        "elevation22": "MuiPaper-elevation22",
                                        "elevation23": "MuiPaper-elevation23",
                                        "elevation24": "MuiPaper-elevation24",
                                        "elevation3": "MuiPaper-elevation3",
                                        "elevation4": "MuiPaper-elevation4",
                                        "elevation5": "MuiPaper-elevation5",
                                        "elevation6": "MuiPaper-elevation6",
                                        "elevation7": "MuiPaper-elevation7",
                                        "elevation8": "MuiPaper-elevation8",
                                        "elevation9": "MuiPaper-elevation9",
                                        "outlined": "MuiPaper-outlined",
                                        "root": "MuiPaper-root",
                                        "rounded": "MuiPaper-rounded",
                                      }
                                    }
                                    elevation={1}
                                    item={true}
                                    variant="outlined"
                                  >
                                    <div
                                      className="MuiPaper-root MuiCard-root MuiPaper-outlined MuiPaper-rounded"
                                      item={true}
                                    >
                                      <WithStyles(ForwardRef(CardActionArea))
                                        data-owned={true}
                                        id={33}
                                        onClick={[MockFunction]}
                                      >
                                        <ForwardRef(CardActionArea)
                                          classes={
                                            Object {
                                              "focusHighlight": "MuiCardActionArea-focusHighlight",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiCardActionArea-root",
                                            }
                                          }
                                          data-owned={true}
                                          id={33}
                                          onClick={[MockFunction]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            className="MuiCardActionArea-root"
                                            data-owned={true}
                                            focusVisibleClassName="Mui-focusVisible"
                                            id={33}
                                            onClick={[MockFunction]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              className="MuiCardActionArea-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              data-owned={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              id={33}
                                              onClick={[MockFunction]}
                                            >
                                              <button
                                                className="MuiButtonBase-root MuiCardActionArea-root"
                                                data-owned={true}
                                                disabled={false}
                                                id={33}
                                                onBlur={[Function]}
                                                onClick={[MockFunction]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <WithStyles(ForwardRef(CardContent))>
                                                  <ForwardRef(CardContent)
                                                    classes={
                                                      Object {
                                                        "root": "MuiCardContent-root",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="MuiCardContent-root"
                                                    >
                                                      <WithStyles(ForwardRef(Typography))
                                                        variant="h3"
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          variant="h3"
                                                        >
                                                          <h3
                                                            className="MuiTypography-root MuiTypography-h3"
                                                          >
                                                            Unnamed_Design_3
                                                          </h3>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                    </div>
                                                  </ForwardRef(CardContent)>
                                                </WithStyles(ForwardRef(CardContent))>
                                                <span
                                                  className="MuiCardActionArea-focusHighlight"
                                                />
                                                <WithStyles(memo)
                                                  center={false}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={false}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(CardActionArea)>
                                      </WithStyles(ForwardRef(CardActionArea))>
                                      <WithStyles(ForwardRef(CardActions))>
                                        <ForwardRef(CardActions)
                                          classes={
                                            Object {
                                              "root": "MuiCardActions-root",
                                              "spacing": "MuiCardActions-spacing",
                                            }
                                          }
                                        >
                                          <div
                                            className="MuiCardActions-root MuiCardActions-spacing"
                                          >
                                            <WithStyles(WithStyles(ForwardRef(Button)))
                                              id={33}
                                              name="Unnamed_Design_3"
                                              onClick={[MockFunction]}
                                              size="small"
                                              startIcon={<Memo(DeleteIcon) />}
                                            >
                                              <WithStyles(ForwardRef(Button))
                                                classes={
                                                  Object {
                                                    "root": "WithStyles(ForwardRef(Button))-root-51",
                                                  }
                                                }
                                                id={33}
                                                name="Unnamed_Design_3"
                                                onClick={[MockFunction]}
                                                size="small"
                                                startIcon={<Memo(DeleteIcon) />}
                                              >
                                                <ForwardRef(Button)
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiButton-colorInherit",
                                                      "contained": "MuiButton-contained",
                                                      "containedPrimary": "MuiButton-containedPrimary",
                                                      "containedSecondary": "MuiButton-containedSecondary",
                                                      "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                      "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                      "disableElevation": "MuiButton-disableElevation",
                                                      "disabled": "Mui-disabled",
                                                      "endIcon": "MuiButton-endIcon",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "fullWidth": "MuiButton-fullWidth",
                                                      "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                      "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                      "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                      "label": "MuiButton-label",
                                                      "outlined": "MuiButton-outlined",
                                                      "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                      "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                      "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                      "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                      "root": "MuiButton-root WithStyles(ForwardRef(Button))-root-51",
                                                      "sizeLarge": "MuiButton-sizeLarge",
                                                      "sizeSmall": "MuiButton-sizeSmall",
                                                      "startIcon": "MuiButton-startIcon",
                                                      "text": "MuiButton-text",
                                                      "textPrimary": "MuiButton-textPrimary",
                                                      "textSecondary": "MuiButton-textSecondary",
                                                      "textSizeLarge": "MuiButton-textSizeLarge",
                                                      "textSizeSmall": "MuiButton-textSizeSmall",
                                                    }
                                                  }
                                                  id={33}
                                                  name="Unnamed_Design_3"
                                                  onClick={[MockFunction]}
                                                  size="small"
                                                  startIcon={<Memo(DeleteIcon) />}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiButton-root WithStyles(ForwardRef(Button))-root-51 MuiButton-text MuiButton-textSizeSmall MuiButton-sizeSmall"
                                                    component="button"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    id={33}
                                                    name="Unnamed_Design_3"
                                                    onClick={[MockFunction]}
                                                    type="button"
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiButton-root WithStyles(ForwardRef(Button))-root-51 MuiButton-text MuiButton-textSizeSmall MuiButton-sizeSmall"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      id={33}
                                                      name="Unnamed_Design_3"
                                                      onClick={[MockFunction]}
                                                      type="button"
                                                    >
                                                      <button
                                                        className="MuiButtonBase-root MuiButton-root WithStyles(ForwardRef(Button))-root-51 MuiButton-text MuiButton-textSizeSmall MuiButton-sizeSmall"
                                                        disabled={false}
                                                        id={33}
                                                        name="Unnamed_Design_3"
                                                        onBlur={[Function]}
                                                        onClick={[MockFunction]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={0}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="MuiButton-label"
                                                        >
                                                          <span
                                                            className="MuiButton-startIcon MuiButton-iconSizeSmall"
                                                          >
                                                            <ForwardRef>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                          </span>
                                                          <FormattedMessage
                                                            defaultMessage="Delete"
                                                            id="app.program_collection.remove"
                                                          >
                                                            Delete
                                                          </FormattedMessage>
                                                        </span>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </button>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(Button)>
                                              </WithStyles(ForwardRef(Button))>
                                            </WithStyles(WithStyles(ForwardRef(Button)))>
                                          </div>
                                        </ForwardRef(CardActions)>
                                      </WithStyles(ForwardRef(CardActions))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Card)>
                            </WithStyles(ForwardRef(Card))>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                      <WithStyles(ForwardRef(Grid))
                        item={true}
                        key="5"
                        lg={3}
                        md={6}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                              "container": "MuiGrid-container",
                              "direction-xs-column": "MuiGrid-direction-xs-column",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                              "grid-lg-1": "MuiGrid-grid-lg-1",
                              "grid-lg-10": "MuiGrid-grid-lg-10",
                              "grid-lg-11": "MuiGrid-grid-lg-11",
                              "grid-lg-12": "MuiGrid-grid-lg-12",
                              "grid-lg-2": "MuiGrid-grid-lg-2",
                              "grid-lg-3": "MuiGrid-grid-lg-3",
                              "grid-lg-4": "MuiGrid-grid-lg-4",
                              "grid-lg-5": "MuiGrid-grid-lg-5",
                              "grid-lg-6": "MuiGrid-grid-lg-6",
                              "grid-lg-7": "MuiGrid-grid-lg-7",
                              "grid-lg-8": "MuiGrid-grid-lg-8",
                              "grid-lg-9": "MuiGrid-grid-lg-9",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto",
                              "grid-lg-true": "MuiGrid-grid-lg-true",
                              "grid-md-1": "MuiGrid-grid-md-1",
                              "grid-md-10": "MuiGrid-grid-md-10",
                              "grid-md-11": "MuiGrid-grid-md-11",
                              "grid-md-12": "MuiGrid-grid-md-12",
                              "grid-md-2": "MuiGrid-grid-md-2",
                              "grid-md-3": "MuiGrid-grid-md-3",
                              "grid-md-4": "MuiGrid-grid-md-4",
                              "grid-md-5": "MuiGrid-grid-md-5",
                              "grid-md-6": "MuiGrid-grid-md-6",
                              "grid-md-7": "MuiGrid-grid-md-7",
                              "grid-md-8": "MuiGrid-grid-md-8",
                              "grid-md-9": "MuiGrid-grid-md-9",
                              "grid-md-auto": "MuiGrid-grid-md-auto",
                              "grid-md-true": "MuiGrid-grid-md-true",
                              "grid-sm-1": "MuiGrid-grid-sm-1",
                              "grid-sm-10": "MuiGrid-grid-sm-10",
                              "grid-sm-11": "MuiGrid-grid-sm-11",
                              "grid-sm-12": "MuiGrid-grid-sm-12",
                              "grid-sm-2": "MuiGrid-grid-sm-2",
                              "grid-sm-3": "MuiGrid-grid-sm-3",
                              "grid-sm-4": "MuiGrid-grid-sm-4",
                              "grid-sm-5": "MuiGrid-grid-sm-5",
                              "grid-sm-6": "MuiGrid-grid-sm-6",
                              "grid-sm-7": "MuiGrid-grid-sm-7",
                              "grid-sm-8": "MuiGrid-grid-sm-8",
                              "grid-sm-9": "MuiGrid-grid-sm-9",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto",
                              "grid-sm-true": "MuiGrid-grid-sm-true",
                              "grid-xl-1": "MuiGrid-grid-xl-1",
                              "grid-xl-10": "MuiGrid-grid-xl-10",
                              "grid-xl-11": "MuiGrid-grid-xl-11",
                              "grid-xl-12": "MuiGrid-grid-xl-12",
                              "grid-xl-2": "MuiGrid-grid-xl-2",
                              "grid-xl-3": "MuiGrid-grid-xl-3",
                              "grid-xl-4": "MuiGrid-grid-xl-4",
                              "grid-xl-5": "MuiGrid-grid-xl-5",
                              "grid-xl-6": "MuiGrid-grid-xl-6",
                              "grid-xl-7": "MuiGrid-grid-xl-7",
                              "grid-xl-8": "MuiGrid-grid-xl-8",
                              "grid-xl-9": "MuiGrid-grid-xl-9",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto",
                              "grid-xl-true": "MuiGrid-grid-xl-true",
                              "grid-xs-1": "MuiGrid-grid-xs-1",
                              "grid-xs-10": "MuiGrid-grid-xs-10",
                              "grid-xs-11": "MuiGrid-grid-xs-11",
                              "grid-xs-12": "MuiGrid-grid-xs-12",
                              "grid-xs-2": "MuiGrid-grid-xs-2",
                              "grid-xs-3": "MuiGrid-grid-xs-3",
                              "grid-xs-4": "MuiGrid-grid-xs-4",
                              "grid-xs-5": "MuiGrid-grid-xs-5",
                              "grid-xs-6": "MuiGrid-grid-xs-6",
                              "grid-xs-7": "MuiGrid-grid-xs-7",
                              "grid-xs-8": "MuiGrid-grid-xs-8",
                              "grid-xs-9": "MuiGrid-grid-xs-9",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto",
                              "grid-xs-true": "MuiGrid-grid-xs-true",
                              "item": "MuiGrid-item",
                              "justify-xs-center": "MuiGrid-justify-xs-center",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                              "root": "MuiGrid-root",
                              "spacing-xs-1": "MuiGrid-spacing-xs-1",
                              "spacing-xs-10": "MuiGrid-spacing-xs-10",
                              "spacing-xs-2": "MuiGrid-spacing-xs-2",
                              "spacing-xs-3": "MuiGrid-spacing-xs-3",
                              "spacing-xs-4": "MuiGrid-spacing-xs-4",
                              "spacing-xs-5": "MuiGrid-spacing-xs-5",
                              "spacing-xs-6": "MuiGrid-spacing-xs-6",
                              "spacing-xs-7": "MuiGrid-spacing-xs-7",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8",
                              "spacing-xs-9": "MuiGrid-spacing-xs-9",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth",
                            }
                          }
                          item={true}
                          lg={3}
                          md={6}
                          xs={12}
                        >
                          <div
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-md-6 MuiGrid-grid-lg-3"
                          >
                            <WithStyles(ForwardRef(Card))
                              item={true}
                              key="5"
                              variant="outlined"
                            >
                              <ForwardRef(Card)
                                classes={
                                  Object {
                                    "root": "MuiCard-root",
                                  }
                                }
                                item={true}
                                variant="outlined"
                              >
                                <WithStyles(ForwardRef(Paper))
                                  className="MuiCard-root"
                                  elevation={1}
                                  item={true}
                                  variant="outlined"
                                >
                                  <ForwardRef(Paper)
                                    className="MuiCard-root"
                                    classes={
                                      Object {
                                        "elevation0": "MuiPaper-elevation0",
                                        "elevation1": "MuiPaper-elevation1",
                                        "elevation10": "MuiPaper-elevation10",
                                        "elevation11": "MuiPaper-elevation11",
                                        "elevation12": "MuiPaper-elevation12",
                                        "elevation13": "MuiPaper-elevation13",
                                        "elevation14": "MuiPaper-elevation14",
                                        "elevation15": "MuiPaper-elevation15",
                                        "elevation16": "MuiPaper-elevation16",
                                        "elevation17": "MuiPaper-elevation17",
                                        "elevation18": "MuiPaper-elevation18",
                                        "elevation19": "MuiPaper-elevation19",
                                        "elevation2": "MuiPaper-elevation2",
                                        "elevation20": "MuiPaper-elevation20",
                                        "elevation21": "MuiPaper-elevation21",
                                        "elevation22": "MuiPaper-elevation22",
                                        "elevation23": "MuiPaper-elevation23",
                                        "elevation24": "MuiPaper-elevation24",
                                        "elevation3": "MuiPaper-elevation3",
                                        "elevation4": "MuiPaper-elevation4",
                                        "elevation5": "MuiPaper-elevation5",
                                        "elevation6": "MuiPaper-elevation6",
                                        "elevation7": "MuiPaper-elevation7",
                                        "elevation8": "MuiPaper-elevation8",
                                        "elevation9": "MuiPaper-elevation9",
                                        "outlined": "MuiPaper-outlined",
                                        "root": "MuiPaper-root",
                                        "rounded": "MuiPaper-rounded",
                                      }
                                    }
                                    elevation={1}
                                    item={true}
                                    variant="outlined"
                                  >
                                    <div
                                      className="MuiPaper-root MuiCard-root MuiPaper-outlined MuiPaper-rounded"
                                      item={true}
                                    >
                                      <WithStyles(ForwardRef(CardActionArea))
                                        data-owned={false}
                                        id={5}
                                        onClick={[MockFunction]}
                                      >
                                        <ForwardRef(CardActionArea)
                                          classes={
                                            Object {
                                              "focusHighlight": "MuiCardActionArea-focusHighlight",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiCardActionArea-root",
                                            }
                                          }
                                          data-owned={false}
                                          id={5}
                                          onClick={[MockFunction]}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            className="MuiCardActionArea-root"
                                            data-owned={false}
                                            focusVisibleClassName="Mui-focusVisible"
                                            id={5}
                                            onClick={[MockFunction]}
                                          >
                                            <ForwardRef(ButtonBase)
                                              className="MuiCardActionArea-root"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              data-owned={false}
                                              focusVisibleClassName="Mui-focusVisible"
                                              id={5}
                                              onClick={[MockFunction]}
                                            >
                                              <button
                                                className="MuiButtonBase-root MuiCardActionArea-root"
                                                data-owned={false}
                                                disabled={false}
                                                id={5}
                                                onBlur={[Function]}
                                                onClick={[MockFunction]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={0}
                                                type="button"
                                              >
                                                <WithStyles(ForwardRef(CardContent))>
                                                  <ForwardRef(CardContent)
                                                    classes={
                                                      Object {
                                                        "root": "MuiCardContent-root",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="MuiCardContent-root"
                                                    >
                                                      <WithStyles(ForwardRef(Typography))
                                                        variant="h3"
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          variant="h3"
                                                        >
                                                          <h3
                                                            className="MuiTypography-root MuiTypography-h3"
                                                          >
                                                            Unnamed_Design_2
                                                          </h3>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                      <WithStyles(ForwardRef(Typography))
                                                        color="textSecondary"
                                                        variant="caption"
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          color="textSecondary"
                                                          variant="caption"
                                                        >
                                                          <span
                                                            className="MuiTypography-root MuiTypography-caption MuiTypography-colorTextSecondary"
                                                          >
                                                            By
                                                             
                                                            testuser
                                                          </span>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                    </div>
                                                  </ForwardRef(CardContent)>
                                                </WithStyles(ForwardRef(CardContent))>
                                                <span
                                                  className="MuiCardActionArea-focusHighlight"
                                                />
                                                <WithStyles(memo)
                                                  center={false}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={false}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </button>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(CardActionArea)>
                                      </WithStyles(ForwardRef(CardActionArea))>
                                    </div>
                                  </ForwardRef(Paper)>
                                </WithStyles(ForwardRef(Paper))>
                              </ForwardRef(Card)>
                            </WithStyles(ForwardRef(Card))>
                          </div>
                        </ForwardRef(Grid)>
                      </WithStyles(ForwardRef(Grid))>
                    </div>
                  </ForwardRef(Grid)>
                </WithStyles(ForwardRef(Grid))>
                <Styled(MuiBox)
                  className="ProgramCollection-paginationPaddedBox-1"
                >
                  <div
                    className="MuiBox-root MuiBox-root-47 ProgramCollection-paginationPaddedBox-1"
                  >
                    <WithStyles(ForwardRef(Pagination))
                      color="secondary"
                      count={2}
                      defaultPage={1}
                      onChange={[Function]}
                      showFirstButton={true}
                      showLastButton={true}
                    >
                      <ForwardRef(Pagination)
                        classes={
                          Object {
                            "root": "MuiPagination-root",
                            "ul": "MuiPagination-ul",
                          }
                        }
                        color="secondary"
                        count={2}
                        defaultPage={1}
                        onChange={[Function]}
                        showFirstButton={true}
                        showLastButton={true}
                      >
                        <nav
                          aria-label="pagination navigation"
                          className="MuiPagination-root"
                        >
                          <ul
                            className="MuiPagination-ul"
                          >
                            <li
                              key="0"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to first page"
                                color="secondary"
                                disabled={true}
                                onClick={[Function]}
                                page={1}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="first"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to first page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={true}
                                  onClick={[Function]}
                                  page={1}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="first"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to first page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                    disabled={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to first page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to first page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled Mui-disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={-1}
                                        type="button"
                                      >
                                        <ForwardRef(FirstPageIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(FirstPageIcon)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="1"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to previous page"
                                color="secondary"
                                disabled={true}
                                onClick={[Function]}
                                page={0}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="previous"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to previous page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={true}
                                  onClick={[Function]}
                                  page={0}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="previous"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to previous page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                    disabled={true}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to previous page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to previous page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-disabled Mui-disabled"
                                        disabled={true}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={-1}
                                        type="button"
                                      >
                                        <ForwardRef(NavigateBeforeIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(NavigateBeforeIcon)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="2"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-current="true"
                                aria-label="page 1"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={1}
                                selected={true}
                                shape="round"
                                size="medium"
                                type="page"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-current="true"
                                  aria-label="page 1"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={1}
                                  selected={true}
                                  shape="round"
                                  size="medium"
                                  type="page"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-current="true"
                                    aria-label="page 1"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-selected"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-current="true"
                                      aria-label="page 1"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-selected"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-current="true"
                                        aria-label="page 1"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary Mui-selected"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        1
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="3"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to page 2"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={2}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="page"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to page 2"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={2}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="page"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to page 2"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to page 2"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to page 2"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        2
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="4"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to next page"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={2}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="next"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to next page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={2}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="next"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to next page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to next page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to next page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <ForwardRef(NavigateNextIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(NavigateNextIcon)>
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                            <li
                              key="5"
                            >
                              <WithStyles(ForwardRef(PaginationItem))
                                aria-label="Go to last page"
                                color="secondary"
                                disabled={false}
                                onClick={[Function]}
                                page={2}
                                selected={false}
                                shape="round"
                                size="medium"
                                type="last"
                                variant="text"
                              >
                                <ForwardRef(PaginationItem)
                                  aria-label="Go to last page"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "ellipsis": "MuiPaginationItem-ellipsis",
                                      "focusVisible": "Mui-focusVisible",
                                      "icon": "MuiPaginationItem-icon",
                                      "outlined": "MuiPaginationItem-outlined",
                                      "outlinedPrimary": "MuiPaginationItem-outlinedPrimary",
                                      "outlinedSecondary": "MuiPaginationItem-outlinedSecondary",
                                      "page": "MuiPaginationItem-page",
                                      "root": "MuiPaginationItem-root",
                                      "rounded": "MuiPaginationItem-rounded",
                                      "selected": "Mui-selected",
                                      "sizeLarge": "MuiPaginationItem-sizeLarge",
                                      "sizeSmall": "MuiPaginationItem-sizeSmall",
                                      "textPrimary": "MuiPaginationItem-textPrimary",
                                      "textSecondary": "MuiPaginationItem-textSecondary",
                                    }
                                  }
                                  color="secondary"
                                  disabled={false}
                                  onClick={[Function]}
                                  page={2}
                                  selected={false}
                                  shape="round"
                                  size="medium"
                                  type="last"
                                  variant="text"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-label="Go to last page"
                                    className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                    disabled={false}
                                    focusVisibleClassName="Mui-focusVisible"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-label="Go to last page"
                                      className="MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      disabled={false}
                                      focusVisibleClassName="Mui-focusVisible"
                                      onClick={[Function]}
                                    >
                                      <button
                                        aria-label="Go to last page"
                                        className="MuiButtonBase-root MuiPaginationItem-root MuiPaginationItem-page MuiPaginationItem-textSecondary"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <ForwardRef(LastPageIcon)
                                          className="MuiPaginationItem-icon"
                                        >
                                          <WithStyles(ForwardRef(SvgIcon))
                                            className="MuiPaginationItem-icon"
                                          >
                                            <ForwardRef(SvgIcon)
                                              className="MuiPaginationItem-icon"
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="MuiSvgIcon-root MuiPaginationItem-icon"
                                                focusable="false"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef(LastPageIcon)>
                                        <WithStyles(memo)
                                          center={false}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={false}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(memo)>
                                      </button>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(PaginationItem)>
                              </WithStyles(ForwardRef(PaginationItem))>
                            </li>
                          </ul>
                        </nav>
                      </ForwardRef(Pagination)>
                    </WithStyles(ForwardRef(Pagination))>
                  </div>
                </Styled(MuiBox)>
              </div>
            </ForwardRef(Container)>
          </WithStyles(ForwardRef(Container))>
        </ProgramCollection>
      </WithStyles(ProgramCollection)>
    </injectIntl(WithStyles(ProgramCollection))>
  </Router>
</BrowserRouter>
`;
